[{"course_id": 21, "course_code": "MSE 271", "course_name": "MSE271 - Advanced Calculus and Numerical Methods (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Advanced Calculus and Numerical Methods Fall 2024", "11:30AM - 12:20PM RCH 307", "This course introduces students to first and second order ordinary differential equations, vector calculus, and numerical methods for solution of systems of equations, and ordinary differential equations.", "Applications in management engineering are emphasized.", "Recognize multiple integrals and their application in calculating volume and surface [", "Recognize differential equations and their applications in management engineering [", "Apply key optimization principles to find max and min of functions [KB]*", "* abbreviations in brackets are Graduate Attributes required for Accreditation, see here for explanation and descriptions", "Partial Differentiation", "Multiple Integrals", "Numerical Methods", "10 Solving system of linear equations Lecture notes", "11 Solving system of non-linear equations Lecture notes Asst 3 due", "Ordinary Differential Equations", "A Friendly Introduction to Numerical Analysis, Brian Bradie, No", "Library for research-based assignments", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 22, "course_code": "MTE 202", "course_name": "MTE202 - Ordinary Differential Equations (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Ordinary Differential Equations Winter 2025", "MTE 202", "01:50PM E7 3343", "01:50PM E7 3343", "First order differential equations; direction field; separable equations, integrating factors and simple transformations; applications; second and higher order ODE's with constant coefficients - transient and steady state solutions; The Laplace Transform; systems of equations - reduction to single equation; matrix differential equations; introduction to partial differential equations.", "View requirements for MTE 202", "Specifically, we define what ordinary differential equations are and how they relate to the physical problems encountered in simplified engineering systems.", "Techniques for solving first and higher order differential equations, linear equations with constant and variable coefficients, and non-linear equations are introduced.", "Applications involving simple dynamical systems and principles of mass, momentum, and heat conservation will emphasize the role of ordinary differential equations in understanding the behaviour of physical systems.", "Classify a differential equation with respect to order and form", "Understand what it means for a function to be a solution to a ODE/IVP", "Use appropriate analytical method(s) to find a solution to different types of ODE problem", "Select appropriate analytical method(s) to solve ODEs", "Formulate simplified models which represent the behaviour of simplified engineering systems", "Find solutions to said simplified models and provide a meaningful interpretation of found solution", "a) Classify a differential equation with respect to order and form", "b) Understand what it means for a function to be a solution to a ODE/IVP", "2. Find explicit solutions to specific classes", "a) Be able to find explicit solutions for particular first or second order ODES and systems of first order equations using a range of approaches which includes the Laplace transform", "b) Determine the correct solution technique to solve a problem", "3. Effectively apply the concepts of differential equations in the analysis of simplified engineering systems", "a) Formulate simplified models which represent the behaviour of simplified engineering systems", "b) Find solutions to said simplified models and provide a meaningful interpretation of found solution", "Order Linear ODEs ~ 3 Lectures", "Linear Independence (Wronskian, Variation of Parameters, & Reduction of Order) ~ 3 Lectures", "Cauchy-Euler & Variable Coefficient ODEs ~ 1 Lectures", "Systems of 1st order ODEs ~ 3 Lectures", "Giordano and Weir:  Differential Equations: A Modelling Approach, Addison-Wesley - $120", "Additionally, the supply and laptop recommendations from the department can be found via:", "You will be permitted calculators and a single sided (US letter page - 8.5 by 11 inches) cheat sheet where you can write anything you want except worked examples.", "Solutions to these problem sets will be available on LEARN the following Monday.", "This course includes the independent development and practice of specific mathematical skills.", "Library for research-based assignments", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 23, "course_code": "NE 216", "course_name": "NE216 - Advanced Calculus and Numerical Methods 1 (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Advanced Calculus and Numerical Methods 1 Fall 2024", "04:00PM - 05:20PM", "Email: thompson@uwaterloo.ca Best method of contact", "Boundary value problems and applications to quantum mechanics.", "2 1st-order linear ODE; Numerical solution of general 1st order ODE\u2019s, Euler\u2019s method.", "Local and global errors.", "Superposition principle; 2nd-order linear ODE\u2019s with constant coefficients.", "5 Small oscillations in physical systems; free oscillations; damping.", "System of linear ODEs with constant coefficients: eigenvectors and eigenvalues.", "8 Matrix method for ODE systems.", "Introduction to Laplace transform.", "Schr\u00f6dinger equation for particle in a box.", "Introduction to Fourier series.", "12 Periodic extensions; complex Fourier series and Parseval\u2019s Theorem.", "Evaluation"]}, {"course_id": 24, "course_code": "SYDE 211", "course_name": "SYDE211 - Calculus 3 (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Notice of Recording", "11:00AM - 11:50AM E5 6006", "11:00AM - 11:50AM E5 6006", "11:00AM - 11:50AM E5 6006", "Held in MC 6460", "Vector differential calculus: divergence and curl, line and surface integrals, fundamental theorems, applications.", "First order ordinary differential equations: analytical techniques and applications.", "Second order linear ordinary differential equations: systems of equations and applications.", "Numerical methods for solving ordinary differential equations (ODEs).", "1. classify and use appropriate techniques to solve first order differential equations (DEs) (1a, 2a)", "2. understand how various applications lead to first order DEs, and give a physical interpretation of solutions of such DEs (1a, 2a, 2b)", "3. use numerical methods to approximate solutions to first order DEs (1a, 2a)", "6. understand the interpretation of and be able to evaluate line and surface integrals of both scalar and vector fields (1a, 2a)", "7. understand the concepts of divergence and curl and use these to apply the major theorems of vector calculus (1a, 2a, 2b)", "a. Demonstrate understanding of concepts in mathematics", "2. Problem Analysis", "First Order Differential Equations", "separable, exact, and linear DEs", "numerical methods", "Second Order Differential Equations and Systems", "second order linear constant coefficient equations (homogenous and non-homogeneous)", "analysis of the oscillator DE", "homogeneous linear systems - method of eigenvalues; non-homogeneous systems", "phase portraits", "Vector Calculus", "vector fields; line integrals of scalar and vector fields;", "fundamental theorem for line integrals; Green's theorem", "surface integrals of scalar and vector fields; flux", "divergence and curl", "Difference Methods", "Elementary Differential Equations with Boundary Value Problems, by W. Kohler and L. Johnson 2nd edition No", "Roughly each week there will be a problem set posted for you to work on.", "These are meant as the core resource to become competent in the mathematical tools and principles you are studying.", "There's also a built-in formula editor that ultimately pastes the LaTeX code.", "The e-text for Kohler and Johnson is available on LEARN for purchase.", "Quizzes: There will be four quizzes each covering the content from the couple of weeks previous.", "Notice of Recording", "Remember that these models regularly produce inaccurate statements and should be treated more similarly to a peer than a teacher.", "Phone: 519-884-0000 extension 213", "Course Conduct: I am committed to creating a learning environment where diverse perspectives are recognized and valued as a source of strength.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 25, "course_code": "AE 123", "course_name": "AE123 - Electrical Circuits and Instrumentation (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Electrical Circuits and Instrumentation Spring 2024", "Friday -", "Friday", "10:30AM - 12:20PM", "Duty", "E-mail", "Meagan Alexandra Yerxa LAB Coordinator E2-1786 mayerxa@uwaterloo.ca", "Function and characteristics of basic electrical transducers.", "Basics of data acquisition.", "Identify main components in measurement systems.", "Design a basic measurement system.", "1 May 06-10 Introduction to sensors, measurement and data acquisition  First week, no Lab", "2 May 13-17 Current, Voltage, Power, Energy, Circuit Elements, KCL, KVL,  Lab 1: Introduction to circuit and measurement", "3 May 20-24 Introduction to Circuits Resistances in Series & Parallel, Equivalent Resistance Analysis, Voltage Divider & Current Divider  Lab 2: Circuit building", "13 Jul 29 \u2013 30 Introduction to smart homes NO LAB", "Electrical Engineering: Principles and Applications, A.R. Hambley, 7th edition No", "Demos for circuit basics: https://youtube.com/playlist?list=PLDkq31epwdjxzg5AHIOsDk0dry4lAW5Sl"]}, {"course_id": 26, "course_code": "BME 294", "course_name": "BME294 - Circuits, Instrumentation, and Measurements (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Notice of Recording", "01:30PM - 03:20PM", "RCH 307", "RCH 307", "02:30PM - 03:20PM", "RCH 307", "E5-4023", "Email:  lan.wei@uwaterloo.ca", "Basic concepts of hardware measurement systems pertaining to the measurement of biosignals: active and passive circuit elements, Kirchhoff's laws, mesh and nodal circuit analysis, principle of superposition, step responses of first and second order networks, sinusoidal steady state analysis, input-output relationships, transfer functions and frequency response of linear systems, operational amplifiers, analog signal detection, conditioning and conversion systems, transducers, difference and instrumentation amplifiers, A/D and D/A conversion.", "This course will provide students with the basic circuit skills necessary in a biomedical engineering context.", "Apply knowledge of basic circuit components and their interactions (GA 1c)", "3. Evaluate appropriate subsystems for a practical signal acuisition design (GA 4c)", "GA Numbers in bracketsrefer to GraduateAttributes, full definition can be found https://uwaterloo.ca/engineering/graduate-attributes", "The main engineering tool to use in this course will be LTSPICE, which will be first introduced in Week 1 and then used in Week 7-12.", "4 Operational amplifiers   6.1-6.5", "6 Sinusoidal steady-state and phasor analysis   10.1-10.5", "7 Impedance, frequency response and transfer functions Midterm/Design assignment out 10.7-10.10, 15.1-15.3", "8 Diodes and transistors   Notes 1", "9 Transistors, instrumentation amplifiers and frequency-selective circuits Quiz 3 Notes 1", "11 Active filters Design Assignment due -", "12 More design examples and exam prep   -", "Alexander and Sadiku, Fundamentals of Electric Circuits, 7th edition, McGraw Hill, 2020.", "Design Assignment 25%", "Design Assignment 25%", "Notice of Recording", "Compassionate and Respectful Communication", "Along with the right to make adult decisions comes the responsibility and accountability for those decisions and any outcomes.", "The Department of Systems Design Engineering follows UW\u2019s general policy: students who self-elect to forgo a deliverable receive a \u201c0\u201d for that deliverable.", "Compassionate Accommodation", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 27, "course_code": "CIVE 123", "course_name": "CIVE123 - Electrical Circuits and Instrumentation (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Electrical Circuits and Instrumentation Winter 2025", "Monday, Friday -", "10:00AM - 11:20AM RCH 302", "Duty", "E-mail", "Function and characteristics of basic electrical transducers.", "Basics of data acquisition.", "Demos for circuit basics: https://youtube.com/playlist?list=PLDkq31epwdjxzg5AHIOsDk0dry4lAW5Sl", "3 1&2 Current, Voltage, Power and Energy,", "4 2&3 Basic resistive circuit techniques", "9 6 Operational Amplifiers", "10 7 Capacitors and inductors", "12 9 AC Circuit Analysis - I"]}, {"course_id": 28, "course_code": "ECE 106", "course_name": "ECE106 - Electricity and Magnetism (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Electricity and Magnetism Winter 2025", "ECE 106", "02:30PM - 03:20PM", "10:30AM - 12:20PM", "03:30PM - 04:20PM E7 5343", "08:30AM - 10:20AM E7 5343", "08:30AM - 10:20AM E7 5343", "08:30AM - 10:20AM E7 5343", "Amirhossein Akbarian, ahakbari@uwaterloo.ca", "Capacitors: dielectric, capacitance, electric energy storage.", "Inductors: magnetic flux, inductance, magnetic materials, magnetic energy storage.", "View requirements for ECE 106", "You should discuss your problems regarding concepts with the instructor and the tutorial TA.", "Electric Charges & Forces", "Electric Field (1)", "Chapter 23: 23.1-23.3", "Electric Field & Capacitors", "23.1-23.7", "Electrostatic Potential", "Electric Field & Potential", "Current & Resistance", "Magnetic Field", "Electromagnetic Induction", "Inductors", "Electromagnetic Fields & Waves", "1- R.D. Knight, \u201cPhysics for Scientists & Engineers,\u201d 5th edition, Pearson, 2023 No"]}, {"course_id": 29, "course_code": "ECE 140", "course_name": "ECE140 - Linear Circuits (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Notice of Recording", "Linear Circuits Winter 2025", "ECE 140", "ECE 140 001", "03:30PM - 04:20PM E7 5343", "Friday -", "Friday", "04:30PM - 05:20PM", "M. Cooper-Stachowsky", "04:30PM - 05:20PM", "Friday -", "Friday", "ECE 140 201", "08:30AM - 11:20AM E2 3344", "ECE 140 202", "08:30AM - 11:20AM E2 3344", "08:30AM - 11:20AM E2 3344", "ECE 140 204", "01:30PM - 04:20PM E2 3344", "01:30PM - 04:20PM E2 3344", "01:30PM - 04:20PM E2 3344", "ECE 140 101", "08:30AM - 11:20AM E5 4106", "ECE 140 102", "08:30AM - 11:20AM E5 4106", "ECE 140 103", "08:30AM - 11:20AM E5 4106", "02:30PM - 04:20PM DWE 3518", "ECE 140 105", "ECE 140 106", "Section 001 - Computer Engineering", "Email: derek.wright@uwaterloo.ca", "Office: E7-3324", "Bookings include a Teams link when in-person meetings are not possible.", "Section 002 - Software Engineering", "Email: mstachowsky@uwaterloo.ca", "Email:    m4alsaad@uwaterloo.ca", "Katherine Idzik", "Email:    kidzik@uwaterloo.ca", "TAs Name Duty Email", "Avraiem Iskandar Labs a2iskand@uwaterloo.ca", "Analysis of linear circuits.", "Preparing for, conducting, and reporting of laboratory experiments.", "View requirements for ECE 140", "Understand the characteristics and properties of linear electric circuit components", "Analyze intermediate linear circuits under DC, transient and AC operating conditions", "Use (apply) appropriate electronics lab tools for building and debugging intermediate linear circuits", "3.[1-4,6]", "12 Mar 23 Sinusoidal Steady-State Analysis 13.[1,2,4] Tutorial 5", "1 3 Voltage and Current", "3 9 Circuit Analysis Methods", "4 11 Operational Amplifiers", "Notice of Recording", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 30, "course_code": "ECE 375", "course_name": "ECE375 - Electromagnetic Fields and Waves (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Electromagnetic Fields and Waves Winter 2025", "ECE 375", "Monday, Friday -", "Maxwell's equations; plane waves; time-harmonic fields; waves at planar boundaries; boundary conditions; reflection and transmission; transmission lines; electric fields in matter; magnetic fields in matter.", "View requirements for ECE 375", "You should discuss your problems regarding concepts with the instructor and the tutorial TA.", "Slides", "Time-Varying Electromagnetics", "Maxwell\u2019s Equations", "8-2,8-3", "Snell\u2019s law, Fiber optics", "2-Ramo, Whinnery, VanDuzer, \u201cFields & waves in Communication Electronics\u201d, 3rd ed., John Wiley, 1994."]}, {"course_id": 31, "course_code": "ENVE 123", "course_name": "ENVE123 - Electrical Circuits and Instrumentation (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Notice of Recording", "Electrical Circuits and Instrumentation Spring 2024", "11:30AM - 12:20PM E2 1732", "08:30AM - 09:20AM E2 1732", "Friday -", "Friday", "10:30AM - 12:20PM", "E-mail", "QNC 2609/ Microsoft Teams", "Duty", "E-mail", "Basharat Mehmood", "First Year Tutors and WEEF Lab Tas", "E2-1719B", "E2-1786", "Function and characteristics of basic electrical transducers.", "Basics of data acquisition.", "Function and characteristics of basic electrical transducers.", "Basics of data acquisition.", "Apply knowledge of engineering to the analysis and design of electrical circuits,", "Identify and solve engineering problems in the circuits\u2019 area,", "Design electric systems, components for different required applications.", "Identify the fundamental tools of linear circuit analysis that will be useful to all engineers (learning the \u201calphabet\u201d of circuits), Apply basic laws: Ohms law, KVL, KCL and power calculations, Measure resistive networks\u2019 and simplify complicated networks, Analyze different circuit analysis techniques, Analyze and design different circuits using ideal op-amps, Examine circuits containing energy storage elements, Examine phasor frequency domain analysis, State and understand the fundamental of electrical transducers.", "Identify the fundamental tools of linear circuit analysis that will be useful to all engineers (learning the \u201calphabet\u201d of circuits),", "Apply basic laws: Ohms law, KVL, KCL and power calculations,", "Analyze and design different circuits using ideal op-amps,", "Examine circuits containing energy storage elements,", "Examine phasor frequency domain analysis,", "State and understand the fundamental of electrical transducers.", "1 May 06-10 Introduction to Measurement System First week, no Lab", "2 May 13-17 Introduction to Basic concepts Current, Voltage, Power, Energy, and Circuit Elements,  Lab 1 activity", "3 May 20-24 Introduction to Ohm\u2019s law, KCL, KVL, Circuits Resistances in Series & Parallel, Voltage Divider & Current Divider  Lab 2 activity", "8 June 24-28 Operational and Instrumentational Amplifiers  Lab 5 activity", "12 July 22-26 AC Circuit Analysis - II Lab Project", "13 July 29-30 Introduction to smart homes No Activity", "It is very important for students to attempt solving the problems on their own regularly to reinforce their comprehension of the concepts and analysis techniques presented throughout the term, and for after-exams happiness.", "KVL and KCL", "Circuits Resistances, Voltage Divider & Current Divider", "Midterms Week", "8 June 24-28", "Operational Amplifiers", "Capacitors and inductors", "AC Circuit Analysis", "Room Number", "TBD", "TBD", "Basharat Mehmood", "TBD", "E2-1786", "We will closely follow \u201cElectrical Engineering: Principles & Applications\u201d 7/E by Hambley, Pearson", "First, students will use theory to create a high-quality design for a sensor system, then they will test and validate their design.", "Notice of Recording", "EnveGeoe123 course include the independent development and practice of specific skills as mentioned above."]}, {"course_id": 32, "course_code": "GENE 123", "course_name": "GENE123 - Electrical Circuits and Instrumentation (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Electrical Circuits and Instrumentation Winter 2025", "10:00AM - 11:20AM RCH 105", "09:30AM - 10:20AM RCH 105", "Function and characteristics of basic electrical transducers.", "Basics of data acquisition.", "be able to state Ohm\u2019s and Kirchoff\u2019s laws, and use these laws to analyze simple circuits", "know how to use voltage and current division to solve simple circuits", "be able to analyze circuits using ideal operational amplifiers", "know and be able to use equations for voltage, current and energy in a capacitor and in an inductor", "determine the step and natural responses of R-L and R-C circuits", "understand the circuit model for simple sensors and select the appropriate readout interface circuit for simple sensors and transducers", "understand sampling and conversion processes used in data acquisition", "2           Series/parallel circuits, voltage/current division                                      1.6-1.7, 2.1, 2.3", "6           Operational amplifier circuits                                                                         13.1-13.3", "9           Capacitors and inductors                                                                               3.1-3.5", "12         Instrumentation amplifiers, electrical transducers                                          13.8, 8.7", "- There are 5 laboratory experiments to be performed in groups of two students in E2-1792 (WEEF Lab).", "Come to the lab with a clear understanding of what you need to accomplish and/or with clear questions so that the teaching team can help you.", "Library for research-based assignments", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 33, "course_code": "GEOE 123", "course_name": "GEOE123 - Electrical Circuits and Instrumentation (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Notice of Recording", "Electrical Circuits and Instrumentation Spring 2024", "11:30AM - 12:20PM E2 1732", "08:30AM - 09:20AM E2 1732", "Friday -", "Friday", "10:30AM - 12:20PM", "E-mail", "QNC 2609/ Microsoft Teams", "Duty", "E-mail", "Basharat Mehmood", "First Year Tutors and WEEF Lab Tas", "E2-1719B", "E2-1786", "Function and characteristics of basic electrical transducers.", "Basics of data acquisition.", "Function and characteristics of basic electrical transducers.", "Basics of data acquisition.", "Apply knowledge of engineering to the analysis and design of electrical circuits,", "Identify and solve engineering problems in the circuits\u2019 area,", "Design electric systems, components for different required applications.", "Identify the fundamental tools of linear circuit analysis that will be useful to all engineers (learning the \u201calphabet\u201d of circuits), Apply basic laws: Ohms law, KVL, KCL and power calculations, Measure resistive networks\u2019 and simplify complicated networks, Analyze different circuit analysis techniques, Analyze and design different circuits using ideal op-amps, Examine circuits containing energy storage elements, Examine phasor frequency domain analysis, State and understand the fundamental of electrical transducers.", "Identify the fundamental tools of linear circuit analysis that will be useful to all engineers (learning the \u201calphabet\u201d of circuits),", "Apply basic laws: Ohms law, KVL, KCL and power calculations,", "Analyze and design different circuits using ideal op-amps,", "Examine circuits containing energy storage elements,", "Examine phasor frequency domain analysis,", "State and understand the fundamental of electrical transducers.", "1 May 06-10 Introduction to Measurement System First week, no Lab", "2 May 13-17 Introduction to Basic concepts Current, Voltage, Power, Energy, and Circuit Elements,  Lab 1 activity", "3 May 20-24 Introduction to Ohm\u2019s law, KCL, KVL, Circuits Resistances in Series & Parallel, Voltage Divider & Current Divider  Lab 2 activity", "8 June 24-28 Operational and Instrumentational Amplifiers  Lab 5 activity", "12 July 22-26 AC Circuit Analysis - II Lab Project", "13 July 29-30 Introduction to smart homes No Activity", "It is very important for students to attempt solving the problems on their own regularly to reinforce their comprehension of the concepts and analysis techniques presented throughout the term, and for after-exams happiness.", "KVL and KCL", "Circuits Resistances, Voltage Divider & Current Divider", "Midterms Week", "8 June 24-28", "Operational Amplifiers", "Capacitors and inductors", "AC Circuit Analysis", "Room Number", "TBD", "TBD", "Basharat Mehmood", "TBD", "E2-1786", "We will closely follow \u201cElectrical Engineering: Principles & Applications\u201d 7/E by Hambley, Pearson", "First, students will use theory to create a high-quality design for a sensor system, then they will test and validate their design.", "Notice of Recording", "EnveGeoe123 course include the independent development and practice of specific skills as mentioned above."]}, {"course_id": 34, "course_code": "ME 123", "course_name": "ME123 - Electrical Engineering for Mechanical Engineers (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Notice of Recording", "Electrical Engineering for Mechanical Engineers Winter 2025", "11:30AM - 12:20PM RCH 103", "08:30AM - 09:20AM", "First Year Engineering Tutor:", "Navdeep Dhaliwal Monday 4:00PM - 5:00PM E7-3414 navdeep.dhaliwal@uwaterloo.ca", "Oleksii Zamozhskyi Tuesday 4:30PM - 5:30PM E2 - 1782 ozamozhs@uwaterloo.ca", "Alireza Chalik Friday 4:30PM - 5:30PM E2 - 1782 achalik@uwaterloo.ca", "Definitions of electric and magnetic fields.", "Introduction to circuit theory (direct current) DC circuits, amplifiers, operational amplifiers, single- and three-phase (alternating current) AC circuits.", "Introduction to basic electronic devices.", "Identify the linear circuit elements in a network and learn to identify how these circuit elements are connected - series and parallel connections", "Analyze any linear circuit and calculate the current, voltage, power and energy in that circuit.", "State Ohms law, Kirchhoff current law and Kirchhoff voltage law calculate the current through and voltage at the nodes by applying these laws.", "Apply voltage divider to find voltage across the linear circuit element and apply current divider to find current through the circuit element.", "Apply network theorems to simplify and analyze DC circuits.", "Analyze and design operational amplifier circuits for algebraic equations.", "Predict and analyze transient behavior of first and second order circuits.", "Analyses of sinusoidal steady state using phasors to solve AC circuits with R, L and C components", "Analyze power consumption of AC circuits", "2 Resistive Circuits", "4 DC Circuit Analysis", "5 Network Theorems", "6 Dependent Sources - Transistors", "7 Operational Amplifiers", "9 Electromagnetism and Inductance", "11 Steady State AC Circuits", "While a cell phone can be used, a device with a larger screen will give you a better experience.", "The only exception to this rule is under extenuating circumstances, accommodations and submission of VIF (in case of illness).", "The only exception to this rule is under extenuating circumstances, accommodations and submission of VIF (in case of illness).", "You will be informed in advanced if the lab is cancelled for a particular week.", "No extensions are allowed in submission of labs except under extenuating circumstances, accommodations and in case of approval of Verification of Illness.", "If you miss a deadline for health reasons, a Verification of Illness form should be submitted to the First Year Engineering Office.", "Exams", "**", "***Any guidelines UW releases on verification and declaration of illness for the term, will supersede the instructions given here***", "Notice of Recording", "This course includes the independent development and practice of specific skills, such as analyzing and designing circuits.", "Library for research-based assignments", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 35, "course_code": "NE 241", "course_name": "NE241 - Electromagnetism (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Electromagnetism Fall 2024", "08:30AM - 11:20AM QNC 2611", "08:30AM - 11:20AM QNC 2611", "08:30AM - 11:20AM QNC 2611", "E-mail", "Coulomb's law, electric field and electric flux, Gauss's law, electric potential, potential and field, magnetic field, Ampere's law, solenoid, electromagnetic induction, magnetic flux, Lenz' law, Faraday's law, capacitors and capacitance, inductors and inductance, Maxwell's equations, electromagnetic fields and waves, polarization.", "Welcome to the NE 241 laboratory!", "In lab 3, you will study different configurations of parallel plate capacitors and measure charge distribution and capacitance for different configurations.", "In lab 4, you will investigate the electric field and potential of different objects using COMSOL software.", "In lab 5, you will measure magnetic fields for different objects, self-inductance, and explore the induced emf concepts.", "F", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 36, "course_code": "PHYS 342", "course_name": "PHYS342 - Electricity and Magnetism 2 (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["Notice of Recording", "10:00AM - 11:20AM QNC 2502", "Electric and magnetic fields in media, auxiliary fields, Maxwell's equations, electromagnetic waves, electric and magnetic properties of matter.", "Electrodynamics", "Review of Vector Analysis", "Ability to calculate electrostatic fields in vacuum with various geometries.", "Ability to calculate potential fields in vacuum with various geometries", "Ability to calculate electrostatic fields in matter with various geometries using auxiliary fields", "Ability to calculate magnetostatic fields in vacuum with various geometries.", "Ability to calculate magnetostatic fields in matter with various geometries using auxiliary fields", "Understanding of the coupling of time-dependant magnetic and electric fields, Maxwell's equations", "Ability to calculate wave solutions to Maxwell's equations in media.", "3 Electric Potential 2.3-5", "5 Electric Fields in Matter 4", "7 Magnetic Fields in Matter 6  midterm", "8 Electrodynamics 7.1-2", "9 Maxwell's Equations 7.3", "11 Absorption & Dispersion 9.3-4", "Introduction to Electrodynamics, David J. Griffiths any edition Yes", "Completing this book report should prepare you for the final and most interesting topics of this course: Maxwell's equations and their wave solutions.", "Each consists of reading the textbook material covering the upcoming week's material.", "Each of these are meant to be formative.", "Library for research-based assignments", "Notice of Recording", "In the event of a longer-term cancellation of in-person meetings, whether for this particular course or University-wide, class will be held synchronously at the usual time using WebEx, Teams, or Zoom."]}, {"course_id": 37, "course_code": "SYDE 292", "course_name": "SYDE292 - Circuits, Instrumentation, and Measurements (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 11, "major_name": "Quantum Engineering Option", "topics": ["11:30AM -", "RCH 211", "Active and passive circuit elements, Kirchhoff's laws, mesh and nodal circuit analysis, principle of superposition; step response of first and second order networks; sinusoidal steady state analysis using complex impedance phasors; input-output relationships, transfer functions and frequency response of linear systems; operational amplifiers, operational amplifier circuits using negative or positive feedback; diodes, operational amplifier circuits using diodes; analog signal detection, conditioning and conversion systems; transducers, difference and instrumentation amplifiers, active filters, A/D and D/A conversion.", "The specific objectives of these courses are to develop an understanding of:", "- voltage and current supplies, resistors, capacitors, inductors and diodes;", "- techniques for analyzing simple circuits when driven by direct or alternating power sources;", "- important basic circuit concepts such as transfer functions, loading effects and frequency response;", "- operational amplifiers and circuits using operational amplifiers;", "- filters, transducers, pulse width modulation;", "- the concept of a measurement channel and", "3. Sign your email with your first and last name and your student number.", "Apply knowledge of basic circuit components and their interactions, (Attributes: 1a,1c)", "Analyze circuits that include fundamental non-linear devices (e.g., BJTs, MOSFETs, diodes).", "Activities & Deliverables", "Fundamentals of Active and Passive Circuit Elements", "Schematics, Sources, and Resistive Circuits", "Kirchhoff\u2019s Current and Voltage Laws", "Kirchhoff\u2019s Current and Voltage Laws Continued", "Circuit Analysis Techniques and Drills", "Circuit Analysis Techniques and Drills Continued", "6 Oct 7 \u2013 11  Capacitors in Time Domain and their Natural and Step Response", "Makeup Lecture: Tuesday October 8 at 4:30-6:20pm in E7 4433", "Inductors in Time Domain and their Natural and Step Response", "Sinusoidal and Phasor Analysis", "Impedance, Transfer Functions, Frequency Response", "Differential and Instrumentational Amplifiers", "Diodes", "Passive Filters", "13  Nov 25 \u2013 Nov 29 Active Filters and Conversions", "Makeup Lecture: Tuesday November 26 at 4:30-6:20pm in E7 4433", "Fundamentals of Active and Passive Circuit Elements", "Schematics, Sources, and Resistive Circuits", "Kirchhoff\u2019s Current and Voltage Laws", "Kirchhoff\u2019s Current and Voltage Laws Continued", "Circuit Analysis Techniques and Drills", "Circuit Analysis Techniques and Drills Continued", "6 Capacitors in Time Domain and their Natural and Step Response 1, 2", "Inductors in Time Domain and their Natural and Step Response", "Sinusoidal and Phasor Analysis", "Impedance, Transfer Functions, Frequency Response", "Differential and Instrumentational Amplifiers", "Diodes", "Passive Filters", "13 Active Filters and Conversions"]}, {"course_id": 0, "course_code": "AE 121", "course_name": "AE121 - Computational Methods (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Computational Methods Spring 2024", "08:30AM - 09:20AM", "03:30PM - 04:20PM", "08:30AM - 09:20AM E2 1732", "03:30PM -", "Introduction to computer programming, examples of efficient numerical algorithms for basic scientific computations.", "Programming and problem-solving concepts introduced in the course will be incorporated into projects involving architectural engineering applications.", "Introduction to computer programming, examples of efficient numerical algorithms for basic scientific computations.", "Programming and problem solving concepts introduced in the course will be incorporated into group projects involving civil, environmental, or geological engineering applications.", "MATLAB is an easy and readable programming language and is an excellent choice for those who are learning programming for the first time.", "Students who complete this course will gain a fundamental understanding of computer programming techniques and be able to operate, analyze, and visualize all types of data for future engineering studies.", "It is an introductory programming course that utilizes MATLAB to illustrate general concepts in computer programming.", "\"Linear algebra\" (AE/CIVE/ENVE/GEOE 115) is a prerequisite for this course, which you already learned in the 1A term.", "Folders", "Kahoot", "Compose working, efficient, and readable MATLAB scripts in various ways.", "Debug your code to identify and fix programming errors.", "Identify suitable keywords to search for code snippets on the web.", "Type and run all scripts of sample solutions in the course material and tutorial videos.", "Module 01 Basic MATLAB Programming N/A", "Module 05 Built-in Functions May 29", "Lectures are to deliver fundamental knowledge and information in each module and are not to give a direction on how to solve your homework assignments or quizzes.", "\"MATLAB-A Practical Introduction to Programming and Problem Solving,\" Elsevier, 2018.", "\"MATLAB for Engineers,\" Pearson, 2017.", "To encourage participation, when students ask at least one question each month in LEARN, they will receive 1 point of an engagement extra points each month.", "Please be respectful of your peers, instructor, and others in your posts and comments.", "It is a compilation of frequently asked questions for each Module.", "Students receive 1.5 point if they simply join ALL kahoot sessions in the corresponding module.", "Step 1: Go to the Kahoot!", "The instructor will show the pin number in each game.", "You are ready for joining the game", "For example, updating programming logic or shortening the scripts will be greatly helpful that you can employ such code in your future script.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:", "Experience has shown that the students who copy friend's solutions do not know how to make them different and tend to not bother to change their friends' code."]}, {"course_id": 1, "course_code": "BME 121", "course_name": "BME121 - Digital Computation (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["First year tutor + TAs:", "Avraiem Iskandar", "Soomin Shin soomin.shin@uwaterloo.ca M 4:30-5:30", "The key skills necessary to develop software solutions to solve biomedical engineering problems.", "The topics will be reinforced in the context of practical biomedical software systems such as physiological monitoring systems and clinical support systems.", "Instruct computers to carry out operational tasks using the C++ language (CEAB Grad Attribute 1)", "Explain various syntax rules and data types in the C++ language (CEAB Grad Attribute 1)", "Demonstrate ability to perform both procedural programming and object-oriented programming (CEAB Grad Attribute 1)", "Formulate code solutions that invoke multiple syntax rules to solve biomedical engineering problems using a computer (CEAB Grad Attribute 4)", "Graduate Attribute Definition", "Knowledge Base Demonstrated competence in university-level mathematics natural sciences, engineering fundamentals, and specialized engineering knowledge appropriate to the program.", "4. Design An ability to design solutions for complex, open-ended engineering problems and to design systems, components, or processes that meet specified needs with appropriate attention to health and safety risks, applicable standards, and economic, environmental, cultural, and societal considerations.", "Oct 2 - 8 I/O Streams, Arrays 6, 7 1, 2, 3, 4", "Separate compilation and Namespaces,", "Pointers and linked lists 11.3, 11.4,", "Problem Solving with C++, 10th edition; Savitch & Mock; Pearson ISBN 9780134448282 Yes", "Sept 24", "The purposes are: (i) for you to get a feel for what the final exam will be like, and, (ii) identify for yourself gaps you may have in your understanding of the material on which you can focus your prep for the final exam.", "Such software includes Turnitin, iThenticate and Moss."]}, {"course_id": 2, "course_code": "CHE 120", "course_name": "CHE120 - Computer Literacy and Programming for Chemical Engineers (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Computer Literacy and Programming for Chemical Engineers Fall 2024", "10:30AM - 11:20AM RCH 301", "10:30AM - 11:20AM RCH 301", "Department of Chemical Engineering", "Email me!", "Email", "Amaan Fathima", "Arshia Fazeli", "Casey Dudding", "Th 16:30-17:30 in QNC 5324", "Introduction to computer architecture and networking.", "Effective use of command line interfaces and graphical user interfaces.", "Introduction to programming and numerical computing using a high-level interpreted programming language.", "View requirements for CHE 120", "Integrate data and text into technical reports that are organized and of professional quality.", "Understand and apply fundamental programming concepts.", "Design and implement simple computer programs in a high-level interpreted language.", "Corresponding chapter in textbook", "Word processing and presentation software", "Spreadsheet software", "Programming & Computer Architecture 2", "Design and Use of Functions", "Strings and Text I/O", "Relational Operators & if Statements", "Modules, Methods, & Scripts", "Designing Algorithms", "Practical Programming: An Introduction to Computer Science Using Python 3.6 Available https://ocul-wtl.primo.exlibrisgroup.com/permalink/01OCUL_WTL/vk29fk/alma999986579775105162", "First year Engineering", "As a first year Engineering student, I would highly recommend that you visit", "First year Engineering page here.", "This course includes the independent development and practice of specific skills, such as learning core programming skills.", "Library for research-based assignments", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 3, "course_code": "CIVE 121", "course_name": "CIVE121 - Computational Methods (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Computational Methods Winter 2025", "08:30AM - 09:50AM RCH 302", "Introduction to computer programming, examples of efficient numerical algorithms for basic scientific computations.", "Programming and problem solving concepts introduced in the course will be incorporated into group projects involving civil, environmental, or geological engineering applications.", "MATLAB is an easy and readable programming language and is an excellent choice for those who are learning programming for the first time.", "Students who complete this course will gain a fundamental understanding of computer programming techniques and be able to operate, analyze, and visualize all types of data for future engineering studies.", "It is an introductory programming course that utilizes MATLAB to illustrate general concepts in computer programming.", "Compose working, efficient, and readable MATLAB scripts in various ways.", "Debug your code to identify and fix programming errors.", "Identify suitable keywords to search for code snippets on the web."]}, {"course_id": 4, "course_code": "CS 115", "course_name": "CS115 - Introduction to Computer Science 1 (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Introduction to Computer Science 1 Winter 2025", "Diren Swayze", "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming.", "As we are aware of the varied ways in which this material might be of use in the future, we have included concepts that are beautiful and universal.", "Because of the fundamental nature of the concepts taught in CS 115, the course can serve both students whose primary interest in computers is in their use in their chosen areas of study and students intending to minor in CS.", "Module 01: Introduction Monday January 6", "Module 03: Strings and Symbols Monday January 13", "Module 06: Structural Recursion Monday February 3", "Module 08: Local Evaluation Monday February 24", "Module 09: Higher-Order Functions Monday March 3", "Exams", "You can submit each of those files as many times as you like before the deadline.", "Every time you submit a file, we'll run some basic checks on it to make sure it looks valid, and send you preliminary feedback via email.", "Re-marking", "The forms will be in a Survey on Learn for each assignment for two weeks."]}, {"course_id": 5, "course_code": "CS 116", "course_name": "CS116 - Introduction to Computer Science 2 (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Introduction to Computer Science 2 Winter 2025", "Monday -", "Monday", "07:00PM - 08:50PM", "E. Dupont", "E. Dupont", "E. Dupont", "10:00AM - 11:20AM MC 4045", "02:30PM - 03:20PM", "08:30AM - 09:20AM", "09:30AM - 10:20AM MC 4042", "10:30AM - 11:20AM MC 4060", "11:30AM - 12:20PM MC 4060", "02:30PM - 03:20PM", "This course builds on the techniques and patterns learned in CS115 while making the transition to use of an imperative language.", "Use higher-order functions to improve the readability and efficiency of programs", "Describe the basic memory model for mutation of basic types, lists, and objects in Python", "Distinguish between constant, linear, quadratic, and exponential running times of algorithms", "Write useful Python programs using console and file input and output for practical tasks", "All times are given in Eastern Time.", "Important!", "In order to maintain a level of success in the course, students should not miss the completion of any modules.", "Students should check their basic tests email to ensure that the code meets the specification exactly.", "Please make sure you do this often!", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments"]}, {"course_id": 6, "course_code": "CS 135", "course_name": "CS135 - Designing Functional Programs (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Designing Functional Programs Winter 2025", "Monday -", "Monday", "07:00PM - 08:50PM", "08:30AM - 09:20AM", "10:30AM - 11:20AM MC 2034", "Charlie Clarke", "Email: claclark@uwaterloo.ca", "Karen Anderson", "Email: kaanders@uwaterloo.ca", "Email: dbwolff@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Sara Nayar", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "CS135 Problem-solving FAQ", "Assignment Marking Error: Submit a re-mark request, due within one week of release of marks.", "Read Me First", "We hope to guide you through a carefully designed curriculum that introduces you to core concepts in computer science.", "In a typical week, you will move through the following activities:", "You should get a feel for what information is where so you can find it quickly in the future.", "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming.", "Syntax and semantics of a functional programming language.", "Linear and nonlinear data structures.", "Abstraction and encapsulation.", "CS 135 Designing Functional Programs", "CS 135 is for students who would prefer a more conceptual treatment of introductory computer science in a simple language that is educationally effective but not commercially relevant.", "Hardware and Software", "Student labs are equipped with the DrRacket integrated development environment running on networked personal computers.", "References", "How To Design Programs by Felleisen, Findler, Flatt, and Krishnamurthi, MIT Press, 2003.", "Definition of lists, designing functions to process and produce lists, recursive definition of natural numbers, recursive data definitions.", "Non-Linear Structures (6 hours)", "Multi-clausal recursive data definitions, trees, mutually referential data definitions, design methods for complex data, iterative refinement, multiplexing.", "Early development of electronic computers and programming languages.", "History of concepts covered in this course.", "have understanding and experience with the topics in the course outline above", "Drop deadline 25", "Reading Week Starts", "Slides Description", "L01 Values and expressions Prefix notation, exact numbers, Boolean expressions, constants", "L04 Lists List values and expressions, composite data, data definitions", "iClicker pilot", "2024-08-26: CS135 is participating in a pilot comparison of iClicker and Vevox.", "The iClicker subscription should be free.", "iClicker Account", "Racket and DrRacket", "It is also simple and clean enough that we cover computer science content many CS students do not see until later in their CS careers.", "If you submit code written under some other system and it does not work in our currently-supported version of DrRacket, then we consider that code incorrect even if it works for you at home.", "Your work in CS135 will be assessed in a variety of ways.", "Coverage", "Using such off-limits material generally results in a significant loss of marks.", "In general, the basic tests will try to warn you if inappropriate functions and special forms are used.", "Submitting a partially completed solution is a good idea, just in case you don\u2019t get back to it before the due date and to serve as a backup in case your computer breaks or is stolen.", "Email Karen Anderson .", "Email the ISAs and ask them to \u201cmark it for feedback\u201d.", "Testing", "We do several kinds of testing on your submissions:", "Basic tests", "Each time you submit before the due date, we run a set of \u201cbasic tests\u201d on your submission.", "It\u2019s amazing how many fatal errors can appear during last-minute tidying up!", "Do not make your last submission immediately before the deadline \u2013 it gives you no time to check the Basic Test results and respond, if needed.", "The numeric mark appearing on the basic test marksheet is only for guidance.", "After the submission deadline we run a second set of tests to assess your code, including:", "These post-deadline tests and hand-marking form your mark for the assignment.", "If you procrastinate long enough, this rule can easily cause you to fail the course.", "We won\u2019t rehash the above policies, but we do want to make them concrete for CS135.", "A specific assignment may give exceptions to the above.", "You are welcome to use these tools to help you understand the course material, but you should not:", "cut-and-paste your assignment code into them for debugging assistance.", "Also, these tools will not be available when you write the exam, so you need to understand how to solve these problems yourself in order to pass the course.", "attempting to run malicious code during the submission or marking process."]}, {"course_id": 7, "course_code": "CS 137", "course_name": "CS137 - Programming Principles (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["10:00AM - 11:20AM STC 0040", "10:30AM - 12:20PM", "Friday -", "Friday", "Review of fundamental programming concepts and their application.", "Pointers and simple dynamic structures.", "Design methodologies.", "produce well-designed, properly formatted, documented and tested programs of a moderate size (400 lines) that can use basic I/O", "explain and demonstrate the use of the C memory model, including the explicit allocation and deallocation of memory", "implement, use and compare elementary data structures (structures, arrays, and lists)", "The week of", "On Friday", "2.Making Decisions", "5.Recursion", "6.Arrays and Pointers", "9.Pointers and Memory Allocation", "10.Characters and Strings", "12.Searching and Sorting Algorithms", "12.Searching and Sorting Algorithms (Cont.)", "C Programming for Scientists and Engineers with Applications.", "First Edition Rama Reddy; Carol Ziegler There is also a digital version available.", "Intellectual property includes items such as:", "Students have the option of self-declaring a short-term absence, as described here: https://uwaterloo.ca/registrar/current-students/undergraduate-student-short-term-absences.", "In particular:", "Please inform of us these at the start of the course.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at uWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments"]}, {"course_id": 8, "course_code": "CS 145", "course_name": "CS145 - Designing Functional Programs (Advanced Level) (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Designing Functional Programs (Advanced Level)", "10:00AM - 11:20AM MC 2017", "Monday -", "Monday", "07:00PM - 08:50PM", "Email: troy.vasiga@uwaterloo.ca", "Office Hours: Tues and Thur 1:00-2:00pm in MC 6212,", "Email: kaanders@uwaterloo.ca", "Email: cs145@uwaterloo.ca", "Fri 2:30-3:30pm in MC 4065,", "Email: cs145@uwaterloo.ca", "This course introduces students to key concepts in the field of Computer Science, prepares students to complete the CS portion of their Math core requirements and, if desired, continue on to second-year core courses in CS, provides top students with appropriate challenges and enrichment, and explores topics in greater depth than is possible in CS 135.", "Audience", "Demonstrate above-average communication skills (listening, reading, writing) due to the lack of textbook support for much of the enrichment material", "Given a clear and concise statement of a problem or task, write a program from scratch of up to a hundred lines of properly-formatted and documented code in a functional programming language to solve the problem or complete the task", "Use elementary data structures, such as lists and trees, in programs", "Use higher-order functions to improve readability and efficiency of programs", "Analyze the worst-case running time of programs and describe examples of data that demonstrate that the analysis cannot be improved", "Demonstrate their understanding of the implementation of functional programming language features by coding small interpreters for Scheme-like languages", "An introduction to functional programming", "Function application and definition", "Substitution model", "Types in Scheme", "Structures", "Recursion on lists and integers", "Unary representation of integers", "Proving properties of programs", "Algorithm analysis", "Functions as values", "Anonymous functions", "Higher-order functions", "Local definitions", "Simplifying the language", "Binary representation of integers", "Immutable abstract data types", "Association lists", "Leaf-labelled and node-labelled trees", "S-expressions", "Interpreters", "Limits to computation", "Efficiency", "Purely-functional data structures", "Priority Queue ADT and Braun heaps", "Efficient maps: treaps, red-black trees, AA trees", "They will not be due each week on the same day, as is common in the other first-year CS courses and the first-year Math courses.", "Assignment questions are the main way to reinforce and deepen your understanding of the concepts and skills discussed in lecture.", "You will submit program files electronically to the Marmoset system, which runs tests on your code and informs you of the results fairly rapidly.", "You can still get a great mark in the course.", "Questions and concerns can be sent to instructor or ISA emails.", "When asking questions, first check in case the question has already been answered using the search bar above the feed/list of posts.", "Walk-in consulting hours may still be available if course staff are able to book a sufficiently-large room to follow distancing guidelines."]}, {"course_id": 9, "course_code": "ECE 150", "course_name": "ECE150 - Fundamentals of Programming (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Notice of Recording", "ECE 150", "04:30PM - 05:20PM", "10:30AM - 11:20AM E7 5353", "08:30AM - 10:20AM", "Monday, Friday -", "11:30AM - 12:20PM E7 5353", "08:30AM - 10:20AM", "03:30PM - 04:20PM E7 5343", "02:30PM - 03:20PM", "08:30AM - 09:20AM", "08:30AM - 10:20AM", "Software design process in a high-level programming environment.", "Programming fundamentals, language syntax, simple data types, control constructs, functions, parameter passing, recursion, classes, arrays and lists, list traversals, introduction to searching and sorting algorithms, basic object-oriented design, polymorphism and inheritance, simple testing and debugging strategies, pointers and references, basic memory management.", "View requirements for ECE 150", "Instruct computers to carry out operational tasks using the C++ language.", "Demonstrate the ability to perform both procedural programming and object-oriented programming.", "Demonstrate the ability to test and debug programs.", "Also, the Department of Electrical and Computer Engineering cancels classes during mid-term week and, instead, offers make-up lectures.", "Libraries and function calls; writing functions; assertions; code-development strategies; writing tests and comments; and logging.", "Debugging; binary and hexadecimal numbers; integer data types; bitwise and bit-shift operators; floating-point data types; constant variables; and the default value of parameters.", "Addresses and pointers; dynamic memory allocation including that of arrays; lifetime of dynamically allocated memory; problems with pointers; and protecting pointers with const.", "Searching of arrays; sorted arrays; binary search; selection and insertion sort; and introduction to recursive algorithms and recursive mathematical functions.", "Solving problems recursively; the class data structure; namespaces; and functions on objects.", "Operator overloading; issues with member variables; using member functions; throwing and catching exceptions; classes; encapsulation; and constructors.", "Copies of objects; assignment of objects; the destructor; dynamic memory allocation in classes; weaknesses with arrays; linked lists; and a linked list with dynamic memory allocation.", "Adding a size list member variable and a tail pointer member variable; concatenating two linked lists; inheritance; a base linked list class; a window class for graphical user interfaces; exception classes and polymorphism; and a widget class for graphical user interfaces.", "Source code for Projects be submitted through the Marmoset.", "MOSS is used to verify that all source code in projects is not plagiarized from peers either from this offering or previous offerings of this course.", "Notice of Recording", "Generative artificial intelligence: This course includes the independent development and practice of specific skills, such as software design and development.", "Library for research-based assignments", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 10, "course_code": "ENVE 121", "course_name": "ENVE121 - Computational Methods (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Computational Methods Spring 2024", "08:30AM - 09:20AM", "03:30PM - 04:20PM", "08:30AM - 09:20AM E2 1732", "03:30PM -", "Introduction to computer programming, examples of efficient numerical algorithms for basic scientific computations.", "Programming and problem-solving concepts introduced in the course will be incorporated into projects involving architectural engineering applications.", "Introduction to computer programming, examples of efficient numerical algorithms for basic scientific computations.", "Programming and problem solving concepts introduced in the course will be incorporated into group projects involving civil, environmental, or geological engineering applications.", "MATLAB is an easy and readable programming language and is an excellent choice for those who are learning programming for the first time.", "Students who complete this course will gain a fundamental understanding of computer programming techniques and be able to operate, analyze, and visualize all types of data for future engineering studies.", "It is an introductory programming course that utilizes MATLAB to illustrate general concepts in computer programming.", "\"Linear algebra\" (AE/CIVE/ENVE/GEOE 115) is a prerequisite for this course, which you already learned in the 1A term.", "Folders", "Kahoot", "Compose working, efficient, and readable MATLAB scripts in various ways.", "Debug your code to identify and fix programming errors.", "Identify suitable keywords to search for code snippets on the web.", "Type and run all scripts of sample solutions in the course material and tutorial videos.", "Module 01 Basic MATLAB Programming N/A", "Module 05 Built-in Functions May 29", "Lectures are to deliver fundamental knowledge and information in each module and are not to give a direction on how to solve your homework assignments or quizzes.", "\"MATLAB-A Practical Introduction to Programming and Problem Solving,\" Elsevier, 2018.", "\"MATLAB for Engineers,\" Pearson, 2017.", "To encourage participation, when students ask at least one question each month in LEARN, they will receive 1 point of an engagement extra points each month.", "Please be respectful of your peers, instructor, and others in your posts and comments.", "It is a compilation of frequently asked questions for each Module.", "Students receive 1.5 point if they simply join ALL kahoot sessions in the corresponding module.", "Step 1: Go to the Kahoot!", "The instructor will show the pin number in each game.", "You are ready for joining the game", "For example, updating programming logic or shortening the scripts will be greatly helpful that you can employ such code in your future script.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:", "Experience has shown that the students who copy friend's solutions do not know how to make them different and tend to not bother to change their friends' code."]}, {"course_id": 11, "course_code": "GEOE 121", "course_name": "GEOE121 - Computational Methods (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Computational Methods Spring 2024", "08:30AM - 09:20AM", "03:30PM - 04:20PM", "08:30AM - 09:20AM E2 1732", "03:30PM -", "Introduction to computer programming, examples of efficient numerical algorithms for basic scientific computations.", "Programming and problem-solving concepts introduced in the course will be incorporated into projects involving architectural engineering applications.", "Introduction to computer programming, examples of efficient numerical algorithms for basic scientific computations.", "Programming and problem solving concepts introduced in the course will be incorporated into group projects involving civil, environmental, or geological engineering applications.", "MATLAB is an easy and readable programming language and is an excellent choice for those who are learning programming for the first time.", "Students who complete this course will gain a fundamental understanding of computer programming techniques and be able to operate, analyze, and visualize all types of data for future engineering studies.", "It is an introductory programming course that utilizes MATLAB to illustrate general concepts in computer programming.", "\"Linear algebra\" (AE/CIVE/ENVE/GEOE 115) is a prerequisite for this course, which you already learned in the 1A term.", "Folders", "Kahoot", "Compose working, efficient, and readable MATLAB scripts in various ways.", "Debug your code to identify and fix programming errors.", "Identify suitable keywords to search for code snippets on the web.", "Type and run all scripts of sample solutions in the course material and tutorial videos.", "Module 01 Basic MATLAB Programming N/A", "Module 05 Built-in Functions May 29", "Lectures are to deliver fundamental knowledge and information in each module and are not to give a direction on how to solve your homework assignments or quizzes.", "\"MATLAB-A Practical Introduction to Programming and Problem Solving,\" Elsevier, 2018.", "\"MATLAB for Engineers,\" Pearson, 2017.", "To encourage participation, when students ask at least one question each month in LEARN, they will receive 1 point of an engagement extra points each month.", "Please be respectful of your peers, instructor, and others in your posts and comments.", "It is a compilation of frequently asked questions for each Module.", "Students receive 1.5 point if they simply join ALL kahoot sessions in the corresponding module.", "Step 1: Go to the Kahoot!", "The instructor will show the pin number in each game.", "You are ready for joining the game", "For example, updating programming logic or shortening the scripts will be greatly helpful that you can employ such code in your future script.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:", "Experience has shown that the students who copy friend's solutions do not know how to make them different and tend to not bother to change their friends' code."]}, {"course_id": 12, "course_code": "MSE 121", "course_name": "MSE121 - Introduction to Computer Programming (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Introduction to Computer Programming Winter 2025", "11:30AM - 12:20PM DWE 3519", "10:30AM - 11:20AM DWE 3522A", "Friday -", "Friday", "02:30PM - 05:20PM", "An introduction to computer programming using a high level programming language.", "Concepts and topics covered include the basic components of algorithms (primitive operations, variables, sequencing operations, conditionals/branching, repetition/loops, subroutines/functions), problem decomposition, abstraction, testing and debugging, pseudo-code, file based input and output, use of a modern development environment including a symbolic debugger, good coding style, pointers/references, and basic data structures (arrays, records, objects).", "Identify syntax errors in Python code.", "Design and implement functions to solve small problems.", "Design]", "Design and implement programs to solve complex problems by decomposition.", "Design]", "Critique their own and other's code and use that feedback to refactor and improve the code.", "Design]", "Understand the basics of objects and their implementation.", "Understand how computers store numbers and text in a binary representations.", "Introduction to programming.", "Basic operations: arithmetic, expressions, simple I/O.", "Boolean logic and operators.", "An online copy can be rented for the duration of the course from VitalSource ( https://www.vitalsource.com/en-ca/products/python-programming-an-introduction-to-computer-john-m-zelle-v9781590282984 )/", "Projects may have multiple components with multiple deadlines.", "An excused absence for the final exam will be handled on a case by case basis.", "Plagiarism software and alternatives: Plagiarism detection software will be used to screen assignments in this course.", "UW-Learn and Campuswire", "Failure to follow these classroom rules will result in a 3 stage escalation process:", "Do not contact the instructor by phone except in the case of emergency.", "Do not \u201cdrop in for a quick question\u201d.", "No material may be copied from any source except when you must copy something as part of your answer, and in these cases, you must quote the copied material and cite the source.", "As much as possible, discussions of computer programs should be at the level of pseudo-code and not at the level of real computer code.", "Working in groups can be a great way to learn material better and faster.", "Examples", "Copying even one line source code.", "Bob sends her his code which shows him using a while loop and Aarti copies the lines of code that implement the loop.", "Roberto: providing code]", "Sally helps Harish step through his code and find the bug.", "Harish and Sally acknowledge their collaboration.", "Unacceptable Behavior: Mary asks ChatGPT to solve the homework and then submits portions of code from ChatGPT as her own.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 13, "course_code": "MTE 121", "course_name": "MTE121 - Digital Computation (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Notice of Recording", "10:30AM - 11:20AM STC 0060", "Friday -", "Friday", "10:30AM - 12:20PM E2 1792", "10:30AM - 12:20PM E2 1792", "Katherine Idzik <kidzik@uwaterloo.ca> Office: E2-1785G", "First Year Engineering Tutor:", "Navdeep Dhaliwal Monday 3:30PM-4:30PM E7-3414 navdeep.dhaliwal@uwaterloo.ca", "Katherine Idzik Monday 12:30PM - 1:30PM E2-1786", "Katherine Idzik Monday 3:30PM - 4:30PM E2-1786", "Katherine Idzik Wednesday 11:30AM -", "Oleksii Zamozhskyi Monday 6:00PM - 7:00PM RCH-204 ozamozhs@uwaterloo.ca", "Maksym Veremchuk Monday 7:00PM - 8:00PM RCH-204 mrveremchuk@uwaterloo.ca", "First year Engineering Tutor Office Hours Time Location Email Contact", "Introduction to electronic digital computers, hardware and software organization, examples of efficient numerical algorithms for basic scientific computations.", "Software design process in a high-level programming environment.", "Event-driven programming using polling of a simple mechatronic system involving sensors and motors.", "Solve software design problems at an introductory level, by considering the engineering trade-offs and constraints, as they apply to programming", "Implement procedural programs and simple objects in a high level programming language", "Design, implement, and test the software for a mechatronic system using motors and sensors", "Evaluate and select appropriate data storage and function layout for a given software problem", "Decisions", "Functions", "Pointers", "If you miss a deadline for health reasons, a Verification of Illness form should be submitted to the First Year Engineering Office.", "Exams", "***Any guidelines UW releases on verification and declaration of illness for the term, will supersede the instructions given here***", "Tools used may include inspection by a person, and a code similarity tool such as moss.", "Notice of Recording", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 14, "course_code": "NE 111", "course_name": "NE111 - Introduction to Programming for Engineers (0.25)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Introduction to Programming for Engineers Fall 2024", "email jgostick@uwaterloo.ca", "Email", "Amaan Fathima", "Arshia Fazeli", "Casey Dudding", "Th 16:30-17:30 in QNC 5324", "Email bardia.kamali@uwaterloo.ca", "Office E2-1719", "Introduction to programming and numerical computing using a high-level interpreted programming language.", "use the syntax and features of Python", "appreciate the role of the underlying computer hardware on the performance of a computer program", "use functions to create \u201ccode\u201d that is concise, organized and readable", "control the order of execution of a program using relational operators and conditional statements", "store and retrieve data from Python\u2019s various data containers such as lists", "use for-loops to scan data stored in various containers and perform calculations as needed", "develop multistep numerical calculations to compute results, such as scientific calculations", "use state-of-the-art libraries to extend Python\u2019s capabilities to scientific calculations", "visualize data using a variety of graph styles", "read and write data from memory", "Week 3 Logic and Flow Control: Introduction to Boolean logic; use of relational operators; applying logic to collections; controlling execution.", "Week 4 Working with Text: Deep dive into strings; converting and formatting strings; performing operations on strings.", "Week 5 Files and IO: Introduction to the file system; reading and writing files; installing external libraries; introduction to version control.", "Week 8 Writing Pythonic Code Crafting advanced functions; documenting functions; dealing with error conditions; using collections fully; mastering comprehensions; mastering for-loops.", "Week 8b Creating Data Dashboards: Using Streamlit to create graphical user interfaces.", "Week 10 Numerical Computing with Numpy Part 2: Multidimensional arrays; fancy indexing; applications in linear algebra.", "Week 12 Introduction to Object Oriented Programming: An introduction to OOP principles; classes; inheritance; data encapsulation.", "Practical Programming: An Introduction to Computer Science Using Python 3.6 by Gries, Campbell, and Montojo This book is available electronically free of charge No", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 15, "course_code": "SYDE 121", "course_name": "SYDE121 - Digital Computation (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["08:30AM - 10:20AM E5 6008", "RCH 301", "RCH 301", "Fatima Syeda: f2syeda@uwaterloo.ca", "Use structured and object-oriented programming techniques to solve engineering problems (2)", "Apply software debugging tools and techniques during software development (5)", "Introduction, Basics of Computer Systems Sections 1.1 (Computer Systems) and 1.2 (Programming and Problem Solving)", "Variables and Data Types, Control Flow Basics, Testing and Debugging Sections 1.3-1.4 (Introduction to C++, Testing and Debugging), 2.1-2.3 (Variables and Assignments, Input and Output, Data Types and Expressions), Sections 2.4-2.5 (Flow of Control, Program Styling) and 3.1-3.2 (Boolean Expressions, Multiway Branches)", "Designing Loops, Top-Down Design, Function Declaration and Definition (Revisit) Sections 3.3-3.4 (Designing Loops), Sections 4.1-4.3 (Top-Down Design, Designing Functions), Sections 4.4-4.6 (Procedural Abstraction, Scope Rules, Overloading)", "Procedural Abstraction, Overloading Functions, Call by Reference Sections 5.1-5.3 (More on void Functions, Call by Reference Parameters, Functions Calling Other Functions), Sections 5.4-5.5 (Stubs and Drivers, Debugging Functions), Sections 7.1-7.4 (Introduction to Arrays, Arrays in Functions, Multidimensional Arrays)", "Debugging Functions, Arrays in functions   Quiz#2 (Oct 9)", "Vectors and STL Types, C-Style Strings, C++ String Class Sections 8.1-8.3 (An Array for Strings, String Class, Vectors)", "Structures and Classes, Abstract Data Types, Object Oriented Design Sections 10.1-10.3 (Structures, Classes, Abstract Data Types)", "Pointers and Dynamic Memory Basics, Smart Pointers Sections Sections 9.1 & 9.2 (Pointers, Dynamic Memory) LabAssignment #3 due", "G. J. Bronson: \u201cC++for Engineers and Scientists\u201d.", "Send a note via email to the course instructor clearly stating the grading item that you want remarked Attach supporting evidence for your case including screenshots of the pages that need to be regraded.", "A student must save a copy of the submitted work on his or her personal computer or personal file system in case of any website problem.", "Sign your email with your first and last name and your student number.", "While we will do our best to respond to your emails as soon as possible, allow a couple of hours (excluding weekends) for a response to your email.", "When in doubt please be", "Workshops will be delayed or transitioned to an online session on a case-by-case basis.", "To facilitate a delay, a workshop session may be replaced with a lecture delivered in an online format.", "Compassionate and respectful communication: Most online communication between the Department and students will be done through LEARN and/or email.", "Along with the right to make adult decisions comes the responsibility and accountability for those decisions and any outcomes.", "The Department of Systems Design Engineering follows UW\u2019s general policy: students who self-elect to forgo a deliverable receive a \u201c0\u201d for that deliverable."]}, {"course_id": 16, "course_code": "BME 122", "course_name": "BME122 - Data Structures and Algorithms (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Data Structures and Algorithms Winter 2025", "02:30PM - 03:20PM", "Topics of structured software design, data structures, abstract data types, recursive algorithms, algorithm and data structure analysis and design from both computational and memory perspectives, lists, stacks, queues, trees, graphs, sorting and searching, hashing, and problem-solving strategies.", "Embedded programming in health monitoring systems and healthcare management systems.", "recursive algorithms", "Performing rigorous complexity analyses of simple algorithms and data structures.", "Comparing different data-structuring techniques from the point of view of time and memory requirements.(1a, 1c)", "Determining a suitable data structure to solve a specific algorithmic problem.", "Implementing data structures correctly and efficiently in one or more high-level programming languages, such as C/C++.", "Week 2 (Jan 13 \u2013 Jan 19) Pointers and Dynamic Memory Allocation Mini-Assignment", "Textbook Data Structures and Algorithms in a Nutshell\u201d by A. Wong et al (sku 281120120157B).", "Groups can have a maximum of 2 persons."]}, {"course_id": 17, "course_code": "CS 136", "course_name": "CS136 - Elementary Algorithm Design and Data Abstraction (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Elementary Algorithm Design and Data Abstraction Winter 2025", "08:30AM - 09:50AM MC 2017", "10:00AM - 11:20AM MC 2038", "10:00AM - 11:20AM MC 4059", "11:30AM -", "Monday -", "Monday", "07:00PM - 08:50PM", "This course builds on the techniques and patterns learned in CS135 while making the transition to use an imperative language.", "Topics discussed include iterative and recursive sorting algorithms; lists, stacks, queues, trees, and their application; abstract data types and their implementations.", "produce well-designed, properly formatted, documented and tested programs of a moderate size (200 lines) that can use basic I/O", "explain and demonstrate the use of the C memory model, including the explicit allocation and deallocation of memory", "explain and demonstrate the principles of modularization and abstraction", "implement, use and compare elementary data structures (structures, arrays, lists and trees) and abstract data type collections (stacks, queues, sequences, sets, dictionaries)", "If both exams are held in person", "If both exams must be held online", "If in-person exams cannot be held then they will be held online (if possible).", "You may also ask on the discussion forums in a private message.", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 18, "course_code": "CS 138", "course_name": "CS138 - Introduction to Data Abstraction and Implementation (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Introduction to Data Abstraction and Implementation Winter 2025", "10:30AM - 12:20PM", "10:00AM - 11:20AM RCH 302", "11:30AM - 12:20PM RCH 302", "11:30AM - 12:20PM MC 2034", "Email: migod@uwaterloo.ca", "Alireza Shaeri", "Email: cs138@uwaterloo.ca", "Email: w352chen@uwaterloo.ca", "Aniruddhan Murali", "Email: a25mural@uwaterloo.ca", "Email: w2ren@uwaterloo.ca", "Hanna Derets", "Email: sfking@uwaterloo.ca", "Office Hours: Scheduled by email and held through Microsoft Teams", "Software abstractions via elementary data structures and their implementation; encapsulation and modularity; class and interface definitions; object instantiation; recursion; elementary abstract data types, including sequences, stacks, queues, and trees; implementation using linked structures and arrays; vectors and strings; memory models; automatic vs. dynamic memory management.", "Understand and apply object-oriented programming concepts.", "Write object-oriented code that manipulates linked data structures.", "Write code without memory errors in a memory-unsafe programming language.", "Operating system and Unix concepts, programming language concepts", "Introduction to C++ concepts (3 hours)", "ADT and their implementations as linked structures (12 hours)", "The C/C++ memory model: pointers vs references, stack vs freestore", "Implementing and travesing linked structures", "Space and time complexity of solutions", "Simple testing and debugging strategies", "Object-based computing (9 hours)", "Class definitions, instantiation, object construction and destruction", "Objects vs pointers to objects", "Interface design and abstraction, responsibility allocation", "The adapter design pattern", "Introduction to object-oriented programming (9 hours)", "Introduction to inheritance and its implementation in C++", "Introduction to generics, type parameterization, and C++ templates", "The template method design pattern", "Use of generic data containers and the Standard Template Library", "Design heuristics and strategies for object-oriented programming", "-marking is intended for situations where minor changes result in major mark boosts (i.e. a forgotten semicolon failed 4/5 secret cases).", "A better title would be something like \"Iterating Over a Vector\" or \"Question About Maps.\"", "This course includes the independent development and practice of specific skills, such as as writing and reading code, tracing, and algorithm design.", "Library for research-based assignments"]}, {"course_id": 19, "course_code": "CS 146", "course_name": "CS146 - Elementary Algorithm Design and Data Abstraction (Advanced Level) (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Elementary Algorithm Design and Data Abstraction (Advanced Level)", "Monday -", "Monday", "07:00PM - 08:50PM", "02:30PM - 03:20PM", "Brad In-person MC 6427", "On-line Consulting Hours: Microsoft Teams", "CS 146: Elementary Algorithm Design and Data Abstraction (advanced version)", "To familiarize students with key concepts in introductory computer science from an imperative perspective and to contrast this with the functional perspective taken in CS 145;", "To allow students to complete the CS portion of their Math core requirements and, if desired, to continue on to second-year core courses in CS;", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "Introduction to C and elementary mutation in Scheme", "The memory model.", "Variable declaration, assignment and infix expressions in C. Basic I/O in C. Compilation.", "Algorithm analysis in C. File I/O in C and Scheme.", "Program organization and testing methods.", "Space analysis in C and Scheme.", "Mutable lists, queues, deques, and trees in C. Time-space tradeoffs among mutable and immutable ADT implementations.", "Low-level abstractions", "Pointer arithmetic in C. Arrays in C and vectors in Scheme.", "Strings in C. Elementary hashing.", "Libraries in C and Scheme.", "Implementing high-level abstractions", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "The provided slides are not a substitute for attendance in any first-year CS course, but in CS 146, there are no slides, and the lecture summaries made available after lecture are an even worse substitute for attendance.", "Lectures will involve the development of ideas summarized very tersely in the handouts, as well as on-the-fly development of code, analyses, and proofs.", "CS145 and CS146 were originally designed as a year-long unit of curriculum, but eventually the individual courses drifted in their own directions.", "1.1 A note on logistics", "1.2 Review of forms of recursion and associated proof techniques", "1.3 In preparation for side effects", "1.4 Output", "1.5 Input", "1.6 First Introduction to C", "1.8 Memoization", "1.9 Mutation in C", "1.11 Boxes in C", "1.12 Advanced mutation", "1.13 Aliasing in C", "1.14 Memory and vectors", "1.15 Vectors in Racket", "1.16 Arrays in C", "1.18 ADTs in C; Amortized Analysis", "2 SIMPL: a simple imperative language", "2.1 Syntax and informal semantics", "2.2 Examples in several languages", "2.3 Formal semantics", "2.5 Proving imperative programs correct", "A primitive imperative language", "3.1 A primitive imperative language", "3.2 The PRIMPL simulator", "3.4 The SIMPL to A-PRIMPL compiler", "3.6 Strings in C", "3.7 Adding functions to SIMPL", "3.8 Adding both arrays and functions to SIMPL", "3.9 Implementing lists in PRIMPL", "4 MMIX: a realistic instruction set", "4.1 A more realistic processor", "4.2 The MMIX architecture", "4.2.1 Branches and Jumps", "4.2.2 Example", "4.2.3 Software Interrupts", "4.2.5 A Problem with Branches and Jumps", "4.4 Towards a SIMPL to MMIX compiler", "5.1 Storing primitive values", "5.3 Managing memory", "5.4 Structural and pointer equality", "5.5 Function application in a Racket interpreter", "5.7 Justifying the cost of Racket primitives", "5.8 Moving towards implementation in an imperative language", "6.2 Zippers", "6.3 A continuation-passing interpreter", "6.6.2 Mark-and-sweep", "6.6.3 Copying garbage collection", "6.7 Heterogeneous Data in C", "6.8 Multidimensional Arrays in C", "6.10 Variable-length Argument Lists", "7.1 Continuation-passing style", "7.2 Exception handling", "7.3 Undelimited continuations", "7.4 Delimited continuations", "7.5 Racket\u2019s implementation of continuations", "In CS 146, we will examine the imperative paradigm, and compare and contrast the way that efficient algorithms and data structures are designed in imperative and functional languages.", "Racket is a laboratory for current research on aspects of functional programming languages, and we will continue to look at interesting topics in this area, perhaps at the cost of some coherency in the flow of material.", "They will not be due each week on the same day, as is common in the other first-year CS courses and the first-year Math courses.", "Assignment questions are the main way to reinforce and deepen your understanding of the concepts and skills discussed in lecture.", "You will submit program files electronically to the Marmoset system , which runs tests on your code and informs you of the results fairly rapidly.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "(Please also note that we may use the trends in a student's submission history to estimate the likelihood of other forms of cheating as well.)", "Library for research-based assignments"]}, {"course_id": 20, "course_code": "CS 231", "course_name": "CS231 - Algorithmic Problem Solving (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Email: Please use email sparingly for matters of a personal nature that require private discussion.", "Microsoft Teams problems Karen Anderson", "Late enrollment Karen Anderson", "Extenuating circumstances Karen Anderson", "This course introduces various algorithmic and heuristic techniques that can be employed to solve a wide variety of problems using a computer.", "Students learn both the advantages and the pitfalls of translating a real-world problem into a formal specification, and consider the subsequent steps of choosing one or more paradigms, analyzing the algorithms, and implementing them.", "Students who successfully complete the course can use these approaches to design and develop efficient programs for a wide variety of applications.", "Audience", "Students wishing to understand how choices made in program design can significantly affect performance and how to make these choices", "Highly recommended for students in Information Management and similar fields and for those in the Mathematics/Teaching plan", "Spring", "Co-requisites: None", "Anany Levitin, Introduction to the Design and Analysis of Algorithms, 3rd ed, Pearson, 2011", "Describe basic quadratic sorting algorithms, such as Selection Sort or Insertion Sort.", "Given a simple, well-specified computational task, write a program in a high-level imperative language (e.g., Python, C, or Java) and generate appropriate test cases.", "Use as appropriate simple types, built-in compound types and control idioms, such as selection, iteration, and recursion.", "Describe the steps taken in solving a real-world problem on a computer.", "Explain and use the concepts of asymptotic running time, order notation, worst-case, average-case, and best-case complexity, and lower and upper bounds.", "Given a simple algorithm in pseudocode, determine and informally justify its asymptotic running time, as expressed in order notation.", "Describe situations in which divide-and-conquer can be applied and those in which it is unsuitable.", "Describe situations in which dynamic programming can be used.", "Given a suitable problem, form and analyze a dynamic programming algorithm.", "Explain various methods for exploring the search space, including exhaustive search, backtracking, and branch-and-bound.", "Given a simple problem, form an algorithm using one of these methods and formally analyze the asymptotic running time, as expressed in order notation.", "Explain how various approaches, such as approximation algorithms and heuristics, can be used on hard problems.", "Module 5: Divide-and-conquer", "Module 6: Dynamic programming", "Topics: Examples such as matrix-chain multiplication, longest common subsequence, all-pairs cheapest paths", "Topics: Randomized algorithms, fixed-parameter algorithms", "Guidelines for when to start reading them appear in the table below.", "Visualization of relationships", "You might find the following image helpful in visualizing the relationships among the modules and other course components.", "Introduction to the Design and Analysis of Algorithms, third edition Anany Levitin Pearson, 2011 Optional No", "Most courses on algorithms assume background in data structures, as well as more extensive programming and mathematical skills than required for CS 231.", "Should problems occur, your early drafts serve as backups in case of computer problems, and provide evidence of your having attempted to submit work before the deadline.", "Re-mark requests", "Exam policies and missed examinations", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 21, "course_code": "ECE 250", "course_name": "ECE250 - Algorithms and Data Structures (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Algorithms and Data Structures Winter 2025", "ECE 250", "09:30AM - 10:20AM E7 4043", "11:30AM - 12:20PM E7 4043", "02:30PM - 03:20PM", "E7 4043", "E7 4043", "View requirements for ECE 250", "Design efficient algorithms and select appropriate data structures for specific tasks.", "Recognize problems suitable for different algorithm design paradigms such as divide and conquer, greedy algorithms and dynamic programming.", "Develop practical programming skills through hands-on implementation of data structures and algorithms in a programming language.", "Mar 10 Sorting Algorithms", "Mar 17 Introduction to Graphs, Graph Traversals", "Mar 24 Graph Algorithms", "Mar 31 Algorithm Design Paradigms", "Data Structures and Algorithm Analysis in C++, 4th Ed Optional No 64.99 (ebook)", "Introduction to Algorithms, 2nd Ed Optional No 92.99 (ebook)", "Laptop/Computer access to LEARN and other general learning materials Supplies and laptop recommendations | Engineering | University of Waterloo:https://uwaterloo.ca/engineering/undergraduate-students/supplies-and-laptop-recommendations No"]}, {"course_id": 22, "course_code": "MSE 240", "course_name": "MSE240 - Algorithms and Data Structures (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Algorithms and Data Structures Fall 2024", "11:30AM - 12:20PM", "Design and analysis of data structures and algorithms with an emphasis on further development of computer programming skills.", "Solutions to common engineering problems in computer science using algorithms and data structures.", "Introduction to mathematical analysis of space and time complexity with a focus on designing solutions that can scale to large input sizes.", "Implement both array-based and link/pointer based data structures [KB]", "Analyze algorithms and predict their ability to scale with increasing input sizes [PA]", "Design programs with appropriate data structures and algorithms that consider space/time/other trade-offs [", "] maps to Investigation", "PA] maps to Problem Analysis", "Des] maps to Design", "Week 10: Stacks and Queues", "Data Structures & Algorithms in Python, 1st edition.", "Grokking Algorithms Online version available at https://lib.uwaterloo.ca No", "All referenced work in reports and presentations must be appropriately cited, to include websites, as well as figures and graphs in presentations.", "Talking about problems with others and helping others debug their code can be a great way to learn material better and faster.", "Examples", "Copying even one line of source code.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 23, "course_code": "MTE 140", "course_name": "MTE140 - Algorithms and Data Structures (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Algorithms and Data Structures Winter 2025", "08:30AM - 09:50AM STC 0040", "Friday -", "Friday", "08:30AM - 10:20AM", "Friday 2:30pm \u2013 3:30pm EST in E7 6336", "Put MTE 140 in the email subjectline followed by a briefdescription of the email subject.", "This course emphasizes the following topics: structured software design data structures, abstract data types, recursive algorithms, algorithm analysis and design, sorting and searching, hashing, and problem-solving strategies.", "View requirements for MTE 140", "Performing rigorous complexity analyses of simple algorithms and data structures, (Attributes: 1 & 2)", "Comparing different data-structuring techniques from the point of view of time and memory requirements, (Attributes: 1 & 2)", "construct meaning from oral, written, and graphic communication through interpreting, exemplifying,", "Instruction & Assessment:", "What you should be doing each week", "Suggested problem sets & solutions", "Activities & Deliverables", "1 Jan 6 \u2013 10 Introduction and Review of Programming Fundamentals", "Pointers and Dynamic Memory Allocation", "6 Feb 10 \u2013 14 Stacks and Queues", "Midterm Exam: Friday Feb 28 at 8:30am in E7 3343 and E7 3353", "\"Data Structures and Algorithms in a Nutshell\u201d by A. Wong et al (sku 281120120157B).", "Students should use original variable names and comment their code thoroughly with explanation to demonstrate originality.", "A student must save a copy of the submitted work on his or her personal computer or personal file system in case of any website problem.", "Access to calculators and programming environment is allowed.", "AI screening tools might be used by the teaching team", "COVID-19 Emergency Remote Teaching-Learning for In-Class Sessions:", "COVID-19 Emergency Self-Isolation:"]}, {"course_id": 24, "course_code": "SYDE 223", "course_name": "SYDE223 - Data Structures and Algorithms (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Data Structures and Algorithms Spring 2024", "03:30PM - 04:20PM", "03:30PM - 05:20PM", "Email: shi.cao@uwaterloo.ca", "Seyed Mohammad Amin Mirjalili <smamirja@uwaterloo.ca>, Online MS Teams communication and Q&A.", "Algorithms and Data Structures emphasizes the following topics: structured software design, data structures, abstract data types, recursive algorithms, algorithm analysis and design, sorting and searching, hashing, problem-solving strategies and NP-completeness.", "Prereq: Level at least 1B Systems Design Engineering or Computer Engineering Option.", "This course covers the fundamentals of computer programming concepts and methods, including the following topics: data structures, abstract data types, recursive algorithms, algorithm analysis and design, sorting, searching, hashing, and problem-solving strategies.", "These concepts and methods are used ubiquitously in software programming.", "Knowledge and skills learned in this course will allow students to develop basic computer programs and build the foundation for learning more advanced programming courses.", "As computer programming is involved in almost all engineering projects and scientific research, data structures and algorithms are becoming essential and even mandatory for engineers and researchers.", "The course also increases students' interest in programming and prepares them for their co-op and future career.", "Students will learn to analyze, implement, and use various data structures and data-management techniques in a variety of applications.", "This includes:", "Performing rigorous complexity analyses of simple algorithms and data structures (2c)", "Comparing different data-structuring techniques from the point of view of time and memory requirements (4c)", "Determining a suitable data structure to solve a specific algorithmic problem (4b)", "Implementing data structures correctly and efficiently in a high-level programming language, such as C/C++ (4b, 5c).", "2c: Critically evaluate solutions of engineering problems", "4b: Generate and refine potential solutions to complex, open-ended design problems", "4c: Critically evaluate and compare design choices", "Topics and Deliverable", "Introduction and Review of Programming Fundamentals", "Pointers and Dynamic Memory Allocation", "Algorithmic Analysis", "Stacks and Queues", "E5 6004 and E5 6006", "Sorting", "Platform and Software Usage", "Learn Slides and other learning materials", "Students should use original variable names and comment their code thoroughly with explanation to demonstrate originality.", "Students should save copies of their work on their computers and online file systems as backup in case of any problem.", "Closed-book exams are used to test students\u2019 understanding of the basic knowledge learned in this course and the abilities/skills to apply the knowledge to problem solving and engineering analysis.", "Compassionate and respectful communication: Most online communication between the Department and students will be done through LEARN and/or email.", "Along with the right to make adult decisions comes the responsibility and accountability for those decisions and any outcomes.", "The Department of Systems Design Engineering follows UW\u2019s general policy: students who self-elect to forgo a deliverable receive a \u201c0\u201d for that deliverable.", "This course includes the independent development and practice of specific skills, such as computer programming.", "Library for research-based assignments", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 25, "course_code": "BIOL 487", "course_name": "BIOL487 - Computational Neuroscience (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["SYDE 552 / BIOL 487 - Computational Neuroscience Winter 2025", "04:30PM - 05:20PM E7 4417", "04:30PM - 05:20PM E7 4417", "Instructors Email Meeting Times", "TA Email Meeting Times", "Introduction to modelling and analysis of neurophysiological systems.", "Prerequisites: At least 3B Systems Design Engineering OR at least 3B in the Faculty of Science and one of CS (115, 135, 200) and a 200-level STAT course.", "Course Objectives: There are far more topics in computational neuroscience than can be covered in a single course.", "Throughout the course, we will emphasize the relationship between computational models and biological structure.", "Simulate and manipulate a variety of neuron models, from LIF to Hodgkin-Huxley", "Describe the organization of the primate visual system and compare it to convolutional networks", "Describe the organization of the hippocampus and its role in cognition", "Describe the organization of the basal ganglia and compare it to modern reinforcement learning techniques", "It should be noted that the last hour of the Wednesday session is meant to be a Tutorial, which will be run mostly as a free-form discussion about the topics brought up in the course materials", "Introduction", "Neuron Models", "3. Simple Neuron Models", "Synapses", "Perceptrons and Regression", "Intermediate and High-level Visual Processing", "Backpropagation and Convolutional Neural Networks", "Role in Cognition", "Modelling memory", "Modelling spatial navigation", "Role in Cognition", "Models of BG - Functional", "Models of BG - Anatomical", "Ongoing Research Topics", "\u2022 Biophysics of Drugs and Disorders (?)", "MIT Press https://www.deeplearningbook.org/", "Late work may be submitted via email for reduced credit."]}, {"course_id": 26, "course_code": "BME 393", "course_name": "BME393 - Digital Systems (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Digital Systems Winter 2025", "11:00AM - 12:20PM E7 4417", "omar.alburaiki@uwaterloo.ca", "Email omar.alburaiki@uwaterloo.ca", "Topics will be reinforced in the context of biomedical microcontrollers and sensors used in physiological monitoring and clinical support systems.", "Topics will be reinforced in the context of biomedical microcontrollers and sensors used in physiological monitoring and clinical support systems.", "Analyze internal components of digital systems and their technical details", "2. Explain the importance of digital systems and computer architecture for biomedical applications", "4. Use biomedical controllers and sensors to design digital systems", "5. Design digital systems that are reliable (observed behavior matches specifications), safe (avoid putting human lives in danger even in presence of errors and failures), and robust (ability to handle unspecified inputs and state)", "Week6# Sequential Circuits and Sequential Logic Design", "Week7# More on Sequential Circuits and Sequential Logic Design", "Week8# Microcontroller Architecture and Interfacing, Timers/Counters", "Week10# Microprocessor Architecture, Datapath Design", "Week12# Microprocessor Pipelined Design", "Week13# More on Microprocessor Pipelined Design", "Harris and Harris: \u201cDigital Design and Computer Architecture\u201d.", "Each of these assignments may include analytical, numerical (using Falstad) and explanatory components exploring fundamental aspects of the material covered in the course."]}, {"course_id": 27, "course_code": "BME 411", "course_name": "BME411 - Optimization and Numerical Methods (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Optimization and Numerical Methods Fall 2024", "- Abbas Seifi, Professor   Email: aseifi@uwaterloo.ca", "Seyed Mohammad Amin Mirjalili Email:   smamirja@uwaterloo.ca", "Interpolation and curve fitting, root-finding methods, local and global optimization methods, constrained optimization, multiobjective and multidisciplinary design optimization for biomedical applications.", "This course introduces the applications of optimization modeling and numerical methods to biomedical engineering and engineering design.", "It provides an overview of the formulation and classification of optimization problems arising in biomedical engineering and types of suitable optimization methods.", "Graphical solution methods for two-variable problems and optimization techniques for single-variable problems like region elimination approaches, interpolation algorithms, and direct root methods are discussed.", "Linear Programming problem formulations and simplex and interior methods for solving these problems are discussed.", "Learn about different types of optimization problems in biomedical engineering and engineering design (GA: 1,4)", "2. Study types of optimizations methods and where they are applied, convexity, optimality criteria for unconstrained multivariable problems, and optimality conditions for constrained multivariable problems and proper software tools (GA: 1,2,5)", "Apply graphical solution method to solve two-variable optimization problems, and region elimination methods, interpolation methods, and direct root-finding methods to solve single-variable problems (GA: 1,2,5)", "Apply simplex and interior-point methods for solving Linear Programming problems (GA: 1,2,5)", "7. Apply constrained multivariable methods as well as multi-objective techniques to solve biomedical engineering and design optimization problems using Pareto optimality concept (GA: 3,4,5)", "Details and explanation of each attribute can be found at Graduate attributes | Engineering (uwaterloo.ca)", "Week 1 / LO: 1, 2 Sept. 5  Introduction to Optimization Course Overview; Classification of Optimization Problems & Applications", "Slides", "Week 2 / LO: 2 Sept. 10-12 Functions of a Single Variable Optimization Problem Statement; Basic Concepts & Examples; Graphical Solutions; Optimality Conditions", "Week 3 / LO: 4 Sept. 17-19 Optimization of Single Variable Functions", "Unimodal Functions", "Bracketing & Region Elimination Golden Section and Fibonacci methods; Interpolation method", "Assign.1", "Week 4 / LO: 4 Sept. 24-26 Gradient-Based  Root-Finding Methods Newton\u2013Raphson, quasi-Newton Method; Bisection & Secant methods;", "Convexity & Positive Definiteness", "Week 9 / LO: 3,7 Oct. 29 -31 Constrained Multivariate Optimization Optimality Conditions for Convex Nonlinear Programs; Example of KKT Conditions and Solutions; Design Optimization in MATLAB", "Assign.3", "Week 10 / LO: 6 Nov. 5-7 Linear Programming & Duality Theory", "LP Formulation; Graphical Solution & Simplex method", "Duality& Economic Interpretation", "Week 11 / LO: 6 Nov. 12-14 Interior-Point Methods (IPM) Affine-Scaling Interior-point method; Examples; primal-dual interior-point algorithms", "Week 12 / LO: 6,7 Nov. 19-21 Multi-objective Optimization  Quadratic Programming & Applications; Pareto Optimality; e-Constrained Method", "Week 13 / LO: 1,3 Nov. 26- 28 Modern Global Optimization and Applications Genetic Algorithm and Examples; Applications in Design Optimization", "Introduction to Optimum Design, Elsevier Inc., 4th Edition, J. S. Arora, 2016 No", "Optimization Concepts and Applications in Engineering, Cambridge University Press, 2nd Edition, A. D. Belegundu, T. R. Chandrupatla, 2011 No", "The midterm exam will be taken in person and closed book.", "Course and Departmental Expectations", "Compassionate and respectful communication: Most online communication between the Department and students will be done through LEARN and/or email.", "Along with the right to make adult decisions comes the responsibility and accountability for those decisions and any outcomes.", "The Department of Systems Design Engineering follows University of Waterloo\u2019s general policy: students who self-elect to forgo a deliverable receive a \u201c0\u201d for that deliverable."]}, {"course_id": 28, "course_code": "CHE 322", "course_name": "CHE322 - Numerical Methods for Process Analysis and Design (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Numerical Methods for Process Analysis and Design Winter 2025", "CHE 322", "CHE 322 001", "DWE 2529", "02:30PM - 03:20PM", "DWE 2529", "CHE 322 101", "03:30PM - 04:20PM", "DWE 2529", "Email: pulsipher@uwaterloo.ca", "Email: shayesteh.dolatabadi@uwaterloo.ca", "CHE 322:", "Systems of linear and non-linear algebraic equations; polynomial and spline interpolation; numerical differentiation and integration; numerical solution of initial value and boundary value ordinary differential equation problems: accuracy and stability, step size control and stiffness; finite differences for the numerical solution of elliptic and parabolic partial differential equations: method of lines, explicit vs. implicit finite-difference methods; introduction to the finite element method (optional).", "View requirements for CHE 322", "Describe mathematical algorithms for a range of common problems of engineering interest (including root finding, systems of simultaneous equations, interpolation, differentiation and integration).", "Describe related numerical concepts, such as types of error, stability, and convergence.", "Use numerical methods to solve chemical engineering design problems with simple python programs and evaluate the output of the program (including debugging).", "3 Systems of equations", "5 Integration", "8 Ordinary differential equations", "9 Partial differential equations (elliptical equations)", "11 Partial differential equations", "Practical Programming: An Introduction to Computer Science Using Python 3.6 (2016) O'Reilly and Associates, Inc Available https://ocul-wtl.primo.exlibrisgroup.com/permalink/01OCUL_WTL/vk29fk/alma999986579775105162", "Numerical Methods", "Python Programming And Numerical Methods: A Guide For Engineers And Scientists Available https://pythonnumericalmethods.berkeley.edu/notebooks/Index.html No 0", "Fun reading!", "This course includes the independent development and practice of specific skills, such as computational solutions to engineering problems.", "Library for research-based assignments", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 29, "course_code": "CIVE 422", "course_name": "CIVE422 - Finite Element Analysis (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Finite Element Analysis Winter 2025", "Nils Betancourt Irusta", "Email: knbetancourtirusta@uwaterloo.ca", "Introduction to FEM", "Direct approach to FEM", "FEM approximations in 1D", "Discrete FEM equations for 1D problems", "Strong and Weak forms for 2D scalar and vector field problems", "FEM approximations in 2D", "Discrete FEM equations for 2D problems"]}, {"course_id": 30, "course_code": "EARTH 456", "course_name": "EARTH456 - Numerical Methods in Hydrogeology (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Numerical Methods in Hydrogeology Winter 2025", "An introduction to the theory and practice of groundwater flow and contaminant transport modeling.", "Topics related to variably-saturated flow will focus on derivation of Richard's equation, a control volume finite difference discretization, assembly and solution of the flow equation, material balance error, truncation error analysis, stability and monotonicity.", "Explain the fundamental theory behind groundwater flow and contaminant transport modeling", "Apply numerical techniques, including control volume finite difference discretization, to solve groundwater flow and contaminant transport equations.", "Analyze numerical model accuracy, including material balance error, truncation error, stability, and monotonicity in variably-saturated flow and contaminant transport problems.", "Use a modeling software to model variably-saturated flow and contaminant transport.", "Interpret and visualize groundwater flow and contaminant transport model results and communicate findings effectively.", "Identify the concepts of groundwater and solute transport modeling and their real-world applications.", "Section 1.1 Derivation of Richards' Equation", "Section 1.2 Derivation of Richards 'Equation \u2013 Pressure Head Formulation", "Section 1.3 Three-Dimensional Groundwater Flow", "Derive and interpret three-dimensional groundwater flow dynamics and their mathematical representation.", "Section 1.4 Control Volume Finite Difference Discretization for Flow", "Section 1.5 A Rigorous Derivation of the Control Volume Finite Difference Discretization", "Develop, apply, and justify control volume finite difference discretization techniques for groundwater flow problems, demonstrating a rigorous understanding of mathematical principles.", "Assemble and implement saturated groundwater flow equations in numerical models using discretized formulations.", "Assemble the saturated groundwater flow equation using control volume discretization.", "Analyze groundwater flow material balance errors and their implications for numerical model accuracy.", "Section 1.8 Truncation Error Analysis", "Section 1.8 Truncation Error Analysis", "Section 1.9 Stability and Monotonicity", "Section 2.1 Derivation of the Contaminant Transport Equation", "Analyze the stability and monotonicity of numerical methods for groundwater flow models.", "Derive the contaminant transport equation and articulate its role in modeling solute movement through porous media.", "Section 2.1 Derivation of the Contaminant Transport Equation", "Section 2.2 Control Volume Finite Difference Discretization of the Contaminant Transport Equation", "Section 2.3 Central Spatial Weighting of Advective Flux", "Section 2.3.1 Truncation Error of Central Spatial Weighting", "Apply control volume finite difference discretization to the contaminant transport equation for numerical modeling.", "Section 2.3.1 Truncation Error of Central Spatial Weighting", "Section 2.4 Crank-Nicolson Temporal Weighting with Central Spatial Weighting", "Section 2.5 Upstream Spatial Weighting of Advective Flux", "Section 2.5.1 Truncation Error of Upstream Spatial Weighting", "Section 2.6 Crank-Nicolson Temporal Weighting with Upstream Spatial Weighting", "Analyze truncation errors in various spatiotemporal weighting methods to evaluate their impact on numerical accuracy.", "Section 2.7 Assembly of Crank-Nicolson Temporal Weighting with Central Spatial Weighting", "Section 2.7.1 Monotonicity of Crank-Nicolson Temporal Weighting with Central Spatial Weighting", "Analyze truncation errors in various spatiotemporal weighting methods to evaluate their impact on numerical accuracy.", "Section 2.8 Assembly of Fully-Implicit Temporal Weighting with Upstream Spatial Weighting", "Section 2.8.1 Monotonicity of Upstream Spatial Weighting with Fully-Implicit Temporal Weighting", "Section 2.9 Boundary Conditions for Transport Coupled to Flow", "Analyze the accuracy of various contaminant transport weighting schemes and their impact on numerical model performance.", "Apply boundary conditions for contaminant transport coupled with groundwater flow and assess material balance errors to ensure reliable numerical simulations.", "This option is only relevant in the case where the arithmetic mean grade on your assignments is greater than 75% and your final exam mark exceeds the arithmetic mean of the assignment marks.", "This option is only relevant in the case where the arithmetic mean grade on your assignments is greater than 75% and your final exam mark exceeds the arithmetic mean of the assignment marks.", "The total maximum bonus points that can be earned across all five assignments is five.", "Students can earn bonus points by actively participating in discussions or helping their peers understand the course material and assignments.", "Explaining a challenging concept to peers in a collaborative study session.", "A maximum of five contributions will be allowed per assignment."]}, {"course_id": 31, "course_code": "NE 336", "course_name": "NE336 - Micro and Nanosystem Computer-Aided Design (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Micro and Nanosystem Computer-Aided Design Fall 2024", "08:30AM - 09:50AM RCH 307", "02:30PM - 05:20PM", "02:30PM - 05:20PM", "Department of Chemical Engineering", "Email me -> pmahmoud@uwaterloo.ca", "E6-5002", "E6-5002", "E6-3116", "Review of differential-equation systems, constitutive relations, boundary conditions, and solvers for complex, coupled transport problems pertinent to micro and nanosystems.", "Numerical schemes for nonlinear systems.", "Basic modelling and simulation of micro and nanosystems, and fluidic systems.", "Describe mathematical algorithms for a range of common problems of engineering interest (including root finding, systems of simultaneous equations, interpolation, differentiation and integration).", "Describe related numerical concepts, such as types of error, stability, convergence.", "Apply numerical methods to the solution of engineering design problems using python and COMSOL.", "Part I Review on Numerical methods", "Root Finding methods : system of equations", "Part II Numerical methods for ordinary differential equations", "Boundary-value problems", "Part III Numerical methods for partial differential equations", "Finite difference methods, Elliptic PDEs", "Finite Element Analysis", "Part IV Multi-physics problems", "Illustrative multi-physics problems", "Basic num. methods", "Introduction to COMSOL", "Numerical Methods for Engineers and Scientists A., Subramaniam, V., Second Edition, Wiley and Sons, 2011.", "Introduction to Finite Elements in Engineering, Chandrupatla, T. and Belegundu, A., Third edition, Prentice Hall, 2002.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills, such as intermediate programming skills and numerical analysis.", "Library for research-based assignments"]}, {"course_id": 32, "course_code": "CS 230", "course_name": "CS230 - Introduction to Computers and Computer Systems (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Introduction to Computers and Computer Systems Winter 2025", "08:30AM - 09:50AM MC 1085", "10:00AM - 11:20AM MC 2065", "10:30AM - 11:20AM MC 4045", "11:30AM - 12:20PM MC 2017", "MC6228", "TBA", "cs230@uwaterloo.ca", "TBA", "TBA", "An introduction to hardware and software concepts used in computer systems.", "Specific topics include machine-level programming, memory organization, and basic I/O mechanisms.", "Build and Execute", "Program in assembly language", "Understand the basics of machine internals", "Understand the basic elements of the compilation cycle", "Understand the basic principles of multiprocessing", "Note: Submissions for programming questions should only use code and concepts taught during lectures.", "Use of code or advanced concepts not taught in the course will be viewed as a possible violation of Academic Integrity for passing off someone else's work as your own.", "The assignments have a flexible late-day system detailed here:", "These cannot be used on quizzes.", "Multiple assignment extensions can be used on one assignment and/or split across different assignments.", "You do not need a reason to use assignment extensions, you may use them as you please.", "These servers are shared with all other CS courses.", "Students are expected to start assignments early in case something unexpected occurs closer to the deadline.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments"]}, {"course_id": 33, "course_code": "CS 234", "course_name": "CS234 - Data Types and Structures (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Notice of Recording", "Data Types and Structures Fall 2024", "MarkUs problems Email IAs at the course account", "Microsoft Teams problems Email ISG Coordinator Scott King", "Missed assignment or quiz Email ISG Coordinator Scott King", "Extenuating circumstances Email ISG Coordinator Scott King", "Error in mark entry Email IAs at the course account", "ISG Coordinator", "Introduction to commonly used data types, including lists, sets, mappings, and trees.", "This course introduces widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms.", "Students who successfully complete the course can use these tools to design and develop efficient programs for a wide variety of applications.", "Audience", "Students wishing to understand how choices made in program design can significantly affect performance and how to make these choices", "Highly recommended for students in Information Management and similar fields and for those in the Mathematics/Teaching plan", "The initial topics in CS 234 will present some material new to those coming out of CS 116 (but covered in CS 136) and some material new to those coming out of CS 136 (but covered in CS 116).", "Co-requisites: None", "Rance D. Ne\u015baise, Data Structures and Algorithms Using Python, Wiley, 2010", "Describe basic quadratic sorting algorithms, such as Selection Sort or Insertion Sort.", "Given a simple, well-specified computational task, write a program in a high-level imperative language (e.g., Python, C, or Java) and generate appropriate test cases.", "Use as appropriate simple types, built-in compound types and control idioms, such as selection, iteration, and recursion.", "Explain the benefits of using abstract data types (ADTs) and data structures, and more generally, the concepts of modularity and data hiding, in solving problems in a wide variety of application areas.", "Understand the differing points of view of the user and provider of an ADT and the use of an interface to communicate between views.", "Explain and use the concepts of asymptotic running time, order notation, worst-case, average-case, and best-case complexity, and lower and upper bounds.", "Given a simple algorithm written in pseudocode, determine and informally justify its asymptotic running time, as expressed in order notation.", "Explain the basic structure of memory, including the distinction between external and internal memory and the concept of paging.", "Explain the complexity of some common implementations of these ADTs.", "Given a well-specified computational problem, determine which (if any) ADTs would be suitable.", "Explain how specialized data structures can lead to efficient solutions to specific real-world problems.", "Topics: User and provider viewpoints, planning and coding stages, abstract data types, modularity and data hiding, ADT Multiset, pseudocode, memory model", "Topics: Best, worst, and average-case running times, order notation, algorithm analysis", "Topics: Graph terminology, ADT Undirected Graph, ADT Directed Graph, implementations, depth-first search, breadth-first search", "Topics: Average-case analysis, interpolation search, heuristics, hashing, bucket sort, radix sort", "Notice of Recording", "Should problems occur, your early drafts serve as backups in case of computer problems, and provide evidence of your having attempted to submit work before the deadline.", "Re-mark requests", "The subject should be \"Ax re-mark request\" for x the number of the assignment.", "In the body of the email, include the rationale for the re-mark and the parts of the question that need atttention.", "Exam policies and missed examinations", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Library for research-based assignments"]}, {"course_id": 34, "course_code": "CS 245", "course_name": "CS245 - Logic and Computation (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Logic and Computation Winter 2025", "10:30AM - 11:20AM MC 4041", "Formalizing the notions of correct and incorrect reasoning, defining what is computable, and exploring the limits of computation.", "The course covers a variety of topics related to logic and computation that are required as background for other courses in Computer Science.", "It differs both in tone and content from a logic course one would typically find in a mathematics program.", "Develop mathematical reasoning skills", "Improve understanding of propositional and first-order logic, including key notions, such as: expressing natural language statements as logical formulas, distinguishing between correct and incorrect reasoning (between valid and invalid logical arguments), constructing a formal proof, distinguishing between syntax and semantics", "Explore the limits of computers, including decidability and undecidability", "Introduction", "Structural induction and its use in proving statements about formulas", "Adequate sets of connectives", "Soundness and completeness of formal deduction", "Applications of propositional logic to computer science, such as: Automated proofs: Resolution, Davis-Putnam Procedure; Hardware and software veri\ufb01cation", "First-Order Logic", "Limitations of propositional logic, and the necessity of first-order logic for reasoning about objects and properties", "Quanti\ufb01ers, universe of discourse, translation between English and first-order logic formulas", "Syntax of first-order logic: terms, formulas", "Semantics of first-order logic: valuations", "Proving argument validity in first-order logic (semantically)", "Formal deduction in first-order logic; Proving argument validity by formal deduction (syntactically)", "Applications of first-order logic to computer science, such as: Automated theorem provers and veri\ufb01ers; Databases", "Decidability and Peano Arithmetic", "Turing Machine as a model of computation", "Undecidability: Basic notions, undecidability of the Halting Problem and other decision problems", "The Peano axioms for number theory (including the induction axiom), undecidability of Peano Arithmetic", "An Important Application of Logic to Computer Science", "Hoare triples", "partial and total correctness", "Formalize English sentences into properly formed formulas in the propositional and first-order logic and, conversely, interpret such formulas in English", "Formalize the notion of correct reasoning and proof, and be able to construct formal proofs", "Realize the limitation of formal proof systems", "Understand the applications of logic to computer science", "This means that you must decide whether to exercise your option to submit late before the deadline, and refrain from making a partial submission in this case.", "There will be a marked quiz due in each week when there will not be a Crowdmark assignment due or a mid-term examination.", "This course includes the independent development and practice of specific skills, including writing numerous proofs using numerous abstract definitions.", "Library for research-based assignments"]}, {"course_id": 35, "course_code": "CS 338", "course_name": "CS338 - Computer Applications in Business: Databases (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Computer Applications in Business: Databases Winter 2025", "A user-oriented approach to the management of large collections of data.", "Design relational databases", "Construct SQL queries for data retrieval", "Develop strategies for data storage and backup", "Introduction and Terminology", "Relational Data Model", "Relational Algebra", "SQL: Aggregation and Grouping", "SQL: Data and Schema Modifications", "SQL: Null Values", "ER Models", "EER Model", "EER to Relation Mapping", "DBMS Concepts and Architecture", "Transaction Processing", "Database Recovery", "Database Security", "Distributed Databases", "Business Analytics", "We highly recommend thoroughly understanding and verifying your assignment solutions to set yourselves up for success in this course since  exams in CS 338 will be closed-book, and without a strong understanding of the assignments, you may find the exams challenging."]}, {"course_id": 36, "course_code": "CS 445", "course_name": "CS445 - Software Requirements Specification and Analysis (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Software Requirements Specification and Analysis Winter 2025", "10:00AM - 11:20AM MC 2035", "Email:x784chen@uwaterloo.ca", "Email: ar2elsha@uwaterloo.ca", "Email: d3pang@uwaterloo.ca", "Models, notations, and processes for software requirements identification, representation, analysis, and validation.", "ECE 451: View requirements for ECE 451", "The week of", "Deliverables", "1 Introduction", "3 RE Reference Model", "Jan 13 4 Domain Model 4 Domain Model D0 \u2013 Group members & Project idea", "Jan 27 7 Functional Modelling 8 OCL D1 \u2013 Domain Model & Stakeholders", "Feb 10 10 Quality Requirements 10 Quality Requirements D2 -  Use case Diagram & Description", "Feb 24 11 Requirements Conflict management 12 Prioritizing Requirements D3 \u2013 Functional Model & OCL", "Mar 3 13 Cost Estimation 14 Risk Analysis D4 \u2013 State Diagram", "Mar 17 15 Temporal Logic 16 Validation and Verification D5 \u2013 Cost Estimation & Risk Analysis", "Mar 31 17 Software Project Management 18 Requirement Engineering for AI Systems D6 - Quality Attributes and Temporal Logic", "Ability to separate requirements from specifications from domain assumptions and argue that a specification + domain assumptions satisfy requirements", "Ability to model requirements in a variety of modelling paradigms", "Ability to elicit and document non-functional requirements such that the to-be-developed software can be objectively tested for their satisfaction", "Ability to use tools to manage a Software Development Team.", "Why is requirements analysis complex?", "Functions as a modelling notation.  Pre- and post-conditions.", "Use-case diagrams.", "Functions over a class diagram.", "Modelling dynamic behaviour of a software system.", "UML State Machines.", "Specification patterns.", "7: Model Integration (1 hour)", "The expected contents and organization of a Software Requirements Specification (SRS).", "AI vs non-AI Systems based on what we covered in this course.", "Braek and Haugen, Engineering real-time systems: an object-oriented methodology using SDL, Prentice-Hall, 1993.", "Larman, Applying UML and Patterns, Prentice Hall, 2004.", "Maciaszek, Requirements Analysis and System Design, Addison Wesley, 2001.", "Bray, An Introduction to Requirements Engineering, Addison-Wesley, 2002.", "Nuseibeh and Zave, Software Requirements and Design:", "van Lamsweerde, Requirements Engineering: From System Goals to UML Models to Software Specifications, Wiley, 2009.", "Brooks, The Design of Design, Addison Wesley, 2010.", "Alan Davis, Just Enough Requirements Management: Where Software Development Meets Marketing, Dorset House Publishing, 2005.", "The project can be related to requirements engineering or a more general software engineering topic.", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 37, "course_code": "CS 446", "course_name": "CS446 - Software Design and Architectures (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Software Design and Architectures Winter 2025", "10:00AM - 11:20AM MC 1056", "10:00AM - 11:20AM MC 1056", "10:00AM - 11:20AM MC 1056", "- Saarang Agarwal <saarang.agarwal@>", "- Bihui Jin <bihui.jin@>", "- Daniel Phan <daniel.phan@>", "- Amber Wang <jiale.wang@>", "ECE 452: View requirements for ECE 452", "Differentiate how various architectural styles and design patterns enhance and degrade a system\u2019s functional, non-functional and human value properties;", "Create and implement an architecture and design, refining it into a complete system;", "1 Jan 06 Mon Introduction to Class", "Jan 15 Wed Use Cases, Human Values", "Jan 17 Fri **P0** Team Formation", "Jan 31 Fri **P2** Project Proposal", "Feb 12 Wed **P3** Iteration 1 Demo", "Feb 26 Wed Design Patterns 2 - Structural", "9 Mar 03 Mon Design Patterns 3 - Behavioral", "Mar 05 Wed **P4** Iteration 2 Demo", "10 Mar 10 Mon Design Patterns 4", "Mar 19 Wed **P5** Iteration 3 Demo", "Apr 02 Wed **P6** Final Presentation", "Apr 04 Fri **P7** Final Report", "Jan 17 P0: Team Formation -", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 38, "course_code": "CS 447", "course_name": "CS447 - Software Testing, Quality Assurance, and Maintenance (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Notice of Recording", "04:00PM - 05:20PM", "Weiyi Shang <wshang@uwaterloo.ca>", "Introduces students to systematic testing of software systems.", "ECE 453: View requirements for ECE 453", "Organized testing can help identify problems in software systems, enabling developers to fix these problems.", "And easier-to-test software is better software.", "\u2022 You will be able to create and evaluate test suites for reasonably-sized software systems.", "\u2022 You will learn how to effectively test during the software engineering process.", "Creating tests", "Test minimization", "Week 12 March 27th Field testing", "Late policy: every person can have a late (max 24 hours) deliverable once", "Notice of Recording"]}, {"course_id": 39, "course_code": "ECE 124", "course_name": "ECE124 - Digital Circuits and Systems (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Digital Circuits and Systems Winter 2025", "Monday -", "Monday", "08:30AM - 10:20AM", "03:30PM - 04:20PM E7 5343", "Monday -", "Monday", "08:30AM - 10:20AM", "08:30AM - 09:50AM RCH 302", "11:30AM - 12:20PM RCH 302", "Number systems and Boolean arithmetic.", "Boolean algebra and simplification of Boolean functions.", "View requirements for ECE 124", "understand Boolean algebra and manipulate Boolean operations to simplify related functions,", "comprehend logic gates, and design, optimize and implement combinational logic circuits,", "gain knowledge of digital storage elements and finite state machines, and design and analyze synchronous sequential circuits,", "grasp the essential principles of analyzing and designing asynchronous sequential circuits,", "understand common number systems for signed numbers and design basic arithmetic circuits", "Boolean logic and algebra", "Algebraic simplification and applications", "Optimized implementations", "Introduction to sequential circuits", "Design of synchronous sequential circuits", "Asynchronous sequential circuit analysis and design", "Number representations and simple arithmetic circuits", "Number conversion (review & self-study).", "Binary logic and circuits.", "Don\u2019t cares and multiple outputs.", "Flip-flop choices.", "Analysis of ASC.", "Hazards free circuits.", "Number systems (octal and hex).", "Presentations in E2-2364 by lab instructor", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "The time and room number for the tutorial sessions where some of the practice problems will be solved/discussed are", "Tut 101, 102 & 103:   3:30-4:20M in E7-5343", "Labs are integral part of the course and must be completed in a satisfactory manner.", "The weights on these remote exams will remain the same as those stated earlier for the case of in-person (see weight distribution tables under Student Assessment).", "This course includes the independent development and practice of specific skills, such as FPGA design coding with VHDL or Verilog Hardware description languages.", "Library for research-based assignments", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca"]}, {"course_id": 40, "course_code": "ECE 204", "course_name": "ECE204 - Numerical Methods (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Notice of Recording", "Numerical Methods Winter 2025", "ECE 204", "ECE 204 002", "03:30PM - 04:20PM E7 4043", "02:30PM - 03:20PM", "E7 4043", "03:30PM - 04:20PM E7 4043", "ECE 204 001", "08:30AM - 09:20AM E7 4043", "10:30AM - 11:20AM E7 4043", "09:30AM - 10:20AM E7 4043", "ECE 204:", "Application of computational methods to engineering problems.", "Number systems, errors and error propagation.", "Introduction to numerical linear algebra.", "Interpolation and numerical integration.", "Introduction to numerical solutions of ordinary differential equations, optimization.", "View requirements for ECE 204", "As an overview, this course will introduce the application of computational methods for modeling and simulating real-world physical systems.", "By comprehending the limitations of such arithmetic, we can develop computational methods that enable us to mitigate these effects allowing us to, in turn, to attain sufficiently accurate approximations or simulations within a practical timeframe.", "To describe, examine, design and develop tools that can be used to approximate solutions to both linear and nonlinear algebraic equations and systems of such equations.", "To describe, examine, design and develop tools that can be used to approximate solutions to analytic equations (initial- and boundary-value problems) and systems of such equations.", "Also, the Department of Electrical and Computer Engineering cancels classes during mid-term week and, instead, offers make-up lectures.", "2 Representation of real numbers", "3 Tools for finding numerical algorithms", "3.2 Iteration and fixed-point iteration", "3.3 Linear algebra", "3.4 Interpolation", "3.6 Bracketing", "3.7 Intermediate-value theorem", "3.8 Summary of tools and looking ahead", "5 Introduction to approximating the value of expressions", "5.1 Evaluating a polynomial at a point and Horner's rule", "5.2.1 Approximating values using interpolating polynomials", "5.3 Least-squares best-fitting polynomials", "5.3.1 Approximating a point using least-squares best-fitting polynomials", "5.3.2 Approximating the derivative using least-squares best-fitting polynomials", "5.3.3 Approximating an integral using least-squares best-fitting polynomials", "6 Approximating solutions to algebraic equations", "6.1 Approximating the solution to the quadratic equation", "6.2 Approximating solutions to non-linear algebraic equations", "6.2.3 The bracketed secant method", "6.2.4 The secant method", "6.3 Approximating solutions to systems of linear equations", "6.3.1 The Gauss-Seidel method", "6.3.2 The method of successive over-relaxation", "6.4 Approximating solutions to systems of non-linear equations", "6.4.1 Newton's method in n dimensions", "7.1.1 Approximating solutions to initial-value problems (IVPs)", "7.1.1.1 Approximating solutions to first-order IVPs", "7.1.1.1.1 Euler's method", "The 4th-order Runge-Kutta method", "7.1.1.1.4 Error analysis of these methods", "7.1.1.2 Adaptive techniques for 1st-order initial-value problems (IVPs)", "7.1.1.2.1 Adaptive Euler-Heun method", "7.1.1.2.2 Adaptive Dormand-Prince method", "7.1.1.3 Approximating solutions to systems of 1st-order IVPs", "7.1.1.4 Approximating solutions to higher-order IVPs", "7.1.1.5 Approximating solutions to systems of higher-order IVPs", "7.1.2 Approximating solutions to boundary-value problems", "7.1.2.1 The shooting method", "7.1.2.2 The finite-difference method", "7.1.2.3 Neumann and insulated boundary conditions", "7.2 Approximating solutions to partial differential equations", "7.2.1 The heat equation in one dimension", "7.2.2 The wave equation in one dimension", "8 Optimization", "8.1 Optimizing functions of a real variable", "8.1.1 Step-by-step optimization", "8.1.2 Newton's method for finding extrema", "8.1.3 The golden-ratio search", "8.2 Optimizing functions of a vector variable", "8.2.1 Hooke-Jeeves method", "8.2.2 Newton's method for finding extrema in n dimensions", "The University of Waterloo also has a site licence for Matlab., which you may choose to use other than Octave.", "The laboratory sessions are help sessions where you can speak to a teaching assistant.", "MOSS is used to verify that all source code in projects is not plagiarized from peers either from this offering or previous offerings of this course.", "Notice of Recording", "Generative artificial intelligence: This course includes the independent development and practice of specific skills, such as software design and development.", "Library for research-based assignments", "Sexual Violence Prevention & Response Office (SVPRO), supports students at uWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 41, "course_code": "ECE 208", "course_name": "ECE208 - Discrete Mathematics and Logic 2 (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Discrete Mathematics and Logic 2 Fall 2024", "Monday, Friday -", "04:00PM - 05:20PM E7 4043", "E7 4043", "Monday, Friday -", "11:30AM - 12:20PM E7 4043", "Office hours: Monday 4:30pm-5:30pm E7-5438", "Formal models of computation.", "Applications in computer and software engineering.", "View requirements for ECE 208", "Apply logic, sets and graphs to model and solve practical problems in Electrical and Computer Engineering", "Use formal verification tools to verify simple hardware circuits and software programs.", "wk04   Predicate logic: formalization", "wk05   Predicate logic: proofs", "wk06   Induction: natural numbers and sets", "wk08   Model checking algorithms", "wk11   Software verification", "wk12   Software verification", "The grade in the course should reflect overall knowledge of the course material.", "Absences and Assessments", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 42, "course_code": "ECE 222", "course_name": "ECE222 - Digital Computers (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Digital Computers Winter 2025", "08:30AM - 09:20AM E7 4043", "10:30AM - 11:20AM E7 4043", "02:30PM - 03:20PM", "E7 4043", "03:30PM - 04:20PM E7 4043", "03:30PM - 04:20PM E7 4043", "Julius Olajos <jnjolajos@uwaterloo.ca>", "The schedule below shows who covers each topic.", "Memory units, control units, I/O operations.", "Computer case studies.", "View requirements for ECE 222", "Number systems review", "RISC-V instruction set, addressing modes, subroutine linkage", "Memory-mapped I/O, polling, interrupts, DMA", "Design computer programs using RISC-V assembly language", "Understand and program input-output operations", "Describe the parts of a computer, the internal structure of a processor, and steps for instruction execution in a processor", "Develop control units for a simple processor", "Describe a basic pipelined processor\u2019s operations and implications for performance", "Understand the memory hierarchy including the role and operation of main memory, cache memories, and virtual memory", "- classes and tutorials are cancelled during midterm week", "Computer Organization and Design RISC-V Edition: The Hardware Software Interface (2nd ed), Patterson and Hennessy, 2020.", "Computer Organization and Design RISC-V Edition: The Hardware Software Interface (2nd ed), Patterson and Hennessy, 2020 E-text: https://uwaterloo-store.vitalsource.com/products/computer-organization-and-design-risc-v-edition-david-a-patterson-john-l-v9780128245583 No $99.99", "Lab 3 - Input/Output Interfacing 25%", "They are used to reinforce lecture concepts and to aid in preparation for tests."]}, {"course_id": 43, "course_code": "ECE 224", "course_name": "ECE224 - Embedded Microprocessor Systems (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Embedded Microprocessor Systems Fall 2024", "ECE 224", "ECE 224 001", "Monday, Friday -", "E7 4043", "ECE 224 002", "Monday, Friday -", "08:30AM - 09:50AM E7 4043", "11:30AM - 12:20PM E7 4043", "Rabiul Islam r25islam@uwaterloo.ca", "Emon Sarkar esarkar@uwaterloo.ca", "View requirements for ECE 224", "Course introduction: In this course, you will explore the design of embedded systems and computer interfaces.", "How should data be organized?", "When should data be exchanged?", "What conditions must be satisfied to reliably exchange data?", "Identify system realities (such as noise, jitter, metastability, and transmission line effects) and select suitable approaches for managing these realities in an embedded computer system.", "Compare and critically assess design tradeoffs in an embedded computer system.", "Analyze the effects of synchronization mechanisms on the operational characteristics of an embedded computer system.", "Design hardware and software components to reliably connect devices to an embedded computer system.", "Course Introduction", "An introduction to the teaching team, course expectations, deliverables, marking scheme, and a very brief introduction to interfacing concepts.", "Embedded Systems", "A review of the fundamentals of embedded systems and the terminology associated with embedded systems.", "Interfacing Software, Device Drivers and Synchronization", "A review of embedded software design concepts, followed by a discussion of synchronization concepts and analysis.", "A detailed examination of the design and behavior of drivers for shared and transmission lines, including considerations of signal integrity.", "Buses and Interconnections", "A comparison of the functional behavior and timing behavior of synchronous, asynchronous, partially interlocked asynchronous, semi-synchronous, and split cycle bus systems.", "Arbitration", "A detailed examination of alternatives for interconnection arbitration including both centralized and distributed arbitration techniques.", "Parallel Interfacing", "This includes an examination of the role of the interface in matching bus timing and signaling characteristics with a device's timing and signaling characteristics.", "Serial Interfacing", "This includes a comparison of asynchronous communication techniques and synchronous techniques as well as the protocols for serial communication.", "Error Detection and Correction", "An introduction to error detection and error correction including a discussion of error types, differences in detection and correction, and one example of an error correcting code (the Hamming code).", "Analog Interfacing", "An introduction to digital-to-analog interfacing, analog-to-digital interfacing, and sample-and-hold circuitry.", "This includes a discussion of static and dynamic errors.", "Examples", "You may use these exams to assess your preparation for the exams in the course.", "Assessment Estimated Completion Time Completion Date", "Lab studies: Lab studies are to be completed in groups of two.", "Students then write C software using the Intel Nios II Software Build Tools to control their embedded system to achieve a specified design goal.", "Lab Study 0: This is an introductory lab study that examines the design of a system-on-a-programmable chip (SOPC) design.", "In this lab, students design, build, and test a 32-bit microprocessor system based on the Nios II processor core.", "The hardware design and the board support package serve as a starting point for both Lab Study 1 and Lab Study 2.", "In this lab study, students design a software system that uses pushbuttons, LEDs, 7-segment displays, timers, polling loops, and multiple interrupt handlers to conduct an experiment into servicing a device.", "In this lab study, students design a software system to read a pre-recorded audio file from an SD card, process the audio data, and play it back on a speaker using a DAC.", "Students are given broad latitude to design the system.", "When a lab study builds upon previous submissions, comments such as \"In the previous submission, concerns were expressed related to the number of sample points in the experiment.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm and those who support others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 44, "course_code": "ECE 252", "course_name": "ECE252 - Systems Programming and Concurrency (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Systems Programming and Concurrency Fall 2024", "ECE 252", "ECE 252 001", "Monday, Friday -", "11:30AM -", "E7 4043", "Monday, Friday -", "10:00AM - 11:20AM E7 4043", "M. Cooper-Stachowsky", "11:30AM - 12:20PM E7 4043", "ECE 252 101", "E7 4043", "ECE 252 102", "04:30PM - 05:20PM", "ECE 252 201", "08:30AM - 11:20AM E2 3346", "ECE 252 202", "ECE 252 204", "08:30AM - 11:20AM E2 3346", "Mike Cooper-Stachowsky (Section 2): Mike came to the university of Waterloo in 2014 where he worked in the first year office helping new students transition into university.", "He is particularly interested in operating systems and systems programming, and learned a lot by writing his own kernel for the x86.", "Manavjit Singh Dhindsa -- ms2dhind@uwaterloo.ca", "Sheikh Abrar Tahmid -- sa2tahmi@uwaterloo.ca", "ECE 252:", "Performance and correctness of concurrent systems.", "Deadlock detection and recovery; file systems.", "View requirements for ECE 252", "This course assumes you are comfortable programming in a low level programming language (likely C++ from your Algorithms and Data Structures course).", "Apply standard concurrency scenarios such as producer-consumer, readers-writers, dining philosophers, as well as deadlock and starvation.", "Interact with the Linux operating system through the command-line interface and the C language API.", "Use inter-process communication such as shared memory and message queues.", "Do you need a textbook?", "To request that a question be re-marked, you will need to submit your request in writing via e-mail to the instructor.", "Collaboration and Group Work.", "Please bring this situation to the attention of the course staff as soon as possible so that can be resolved quickly.", "However, each group must submit their own, independently-developed code for each lab.", "Similarly, each person must submit their own, independently-developed code for each assignment.", "I suggest you avoid looking at other people\u2019s code entirely, but if you do, then you should not be doing that anywhere you might be writing your own code.", "The temptation to write your code just like what you see is simply too high.", "However, penalties may be more severe for repeat offenders (see below for information on Academic Integrity).", "All of the above applies to multiple instances \u2014 a student caught in several incidents of academic dishonesty will be subject to the above penalties for each of the incidents.", "Laptop and Device Policy: The human visual system has evolved to perceive saber-toothed tigers in the savannah.", "We encourage everyone to be respectful of their classmates and to not distract them.", "Wise use of computers and the Internet can be helpful for fully engaging in class.", "From the command prompt, you can use compilers and text-mode web browsers (w3m, lynx, links/elinks, etc....) tmux may also be helpful in managing multiple terminal sessions.", "Piazza is a great tool for collaboration and it allows rapid but asynchronous exchange of infor mation.", "It almost goes without saying, but we ask you to be respectful and polite when communicating via this medium and to assume the best about others, as tone can be difficult to interpret on a discussion forum.", "In either case, we will cancel all the in-person lectures and in-class exercises during the relevant period and try to have some online synchronous video lectures during that period.", "The teaching team is keenly aware of the existence of generative AI (e.g., Github Copilot, Chat- GPT) and how such tools can be used to write and test code.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 45, "course_code": "ECE 320", "course_name": "ECE320 - Computer Architecture (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["ECE 320", "Monday, Friday -", "10:00AM - 11:20AM E7 4417", "04:00PM - 05:20PM E7 4053", "* different hours will be announced for reading week, midterm week and the exam period", "Artem Klashtorny <aklashto@uwaterloo.ca>", "Office hours: Thursdays @ 4-5pm in E5-5131 starting in Week 9", "Office hours: Fridays @ 4-5pm in E5-4011 starting in Week 9", "Organization and performance of uniprocessors, pipelined processors, dynamically scheduled processors, parallel processors and multiprocessors; memory and cache structures; multiprocessor algorithms and synchronization techniques; special-purpose architectures.", "View requirements for ECE 320", "Out-of-Order Pipelines", "Dynamic scheduling, register renaming, speculative execution", "Data-Level Parallelism", "GPGPU programming, Many-Core processors", "Domain-Specific Computing", "Design and implement a pipelined scalar processor", "Explain the memory system including concepts of virtual memory, cache coherency and memory consisteny", "Understand trends and in computer architecture and quantitative-based design", "3 Sept 16-20 PD0** Make-up lec", "7 Oct 21-25 Midterm week***", "The lab project is to develop a pipelined RISC-V processor in Verilog and implement it on an FPGA.", "PD1-PD6 are done in groups of two.", "Communication and Q&A: piazza.com/uwaterloo.ca/fall2024/ece320"]}, {"course_id": 46, "course_code": "ECE 327", "course_name": "ECE327 - Digital Hardware Systems (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Digital Hardware Systems Winter 2025", "ECE 327 / ECE 627", "10:00AM - 11:20AM E7 4053", "11:30AM -", "ECE 327 101", "ECE 327 201", "04:30PM - 05:20PM E7 4053", "04:30PM - 05:20PM", "04:30PM - 05:20PM E7 4053", "Maran Ma: E2-3354A Wednesday 1:30-2:30pm", "Design and modelling of digital hardware systems using a hardware description language.", "Power analysis and optimization.", "View requirements for ECE 327", "ECE 627:", "Introduction to power analysis and optimization.", "Introduction to faults and testing.", "View requirements for ECE 627", "The design and engineering of computing chips is an exciting, and valuable skill that spans multiple engineering disciplines including software engineering, parallel programming, verification and reasoning, compilation techniques, down to physical/analog/electrical effects.", "This course will help open the door to careers in the richly-rewarding chip design industry in a variety of roles such as RTL developers, verification engineers, system-level developers, and future leaders and managers.", "ECE327 will be vital to navigate these exciting times.", "We must think about and understand concurrent operations at a cycle-by-cycle level of abstraction.", "There are commonly used paradigms, and design patterns that we must known when organizing the RTL code.", "We will learn how to break down a complex design into these components, and learn how to reason about correctness, and understand their translation to hardware primitives.", "Most digital design are constrained to fit specific cost targets, and the analysis tools help guide the design process with appropriate feedback.", "These compilation iterations are fundamental to digital design and a good designer knows how to direct the tools, rewrite Verilog code, and generate the desired hardware.", "A class project will be used to tie together all the key design lessons we learn in this course.", "We will be developing a large-language model (LLM) solution involving a matrix multiplier as part of the project.", "Describe hardware components at the RTL-level in Verilog, verify these designs through simulation, and map these design to an FPGA fabric.", "Introduction - Introduction to hardware design, quick look at concurrency, debugging, synthesis and entire hardware design flow.", "Reasoning about parallelism in Verilog and drawing timing waveforms/diagrams from the code and vice versa.", "State Machines - Sequential logic design in the form of controllers (or state machines).", "Retiming - Automating pipelining of feed-forward datapaths.", "Strategies and ideas for retiming steps.", "Static Scheduling - Time-shared reuse of hardware resources.", "Construction of static scheduling tables based on resource constraints.", "Design of state machine controllers, and datapaths building blocks.", "Dynamic Scheduling - Dynamic scheduling of resource shared datapaths.", "Timing Analysis - Understanding clock frequency and algorithms for timing analysis.", "Elmore Delay - Simplified high-level model of wire delays.", "Power - Power/energy analysis of hardware components.", "Analytical expressions for power and energy.", "ECE627-only] FPGAs - FPGA Logic, Interconnect, and Architecture, Introduction to reconfigurable hardware/FPGAs, understanding logic design, interconnect and overall composition.", "For relevant labs, the course uses the AMD/Xilinx Pynq FPGA boards available in E2-2356A.", "FPGA board deployment will be done as part of some of the labs, and you will get a chance to rectify errors should this fail.", "Remember, the final exam covers the entire course!", "Precise determination will be done on a case-by-case basis.", "- For any missed graded item, we offer the option of taking a final if you miss it for a legitimate reason as per university guidelines.", "Plagiarism in ECE327 will likely manifest in the form of copying RTL code, scripts, bitstreams as-is or recast with minor modifications.", "We have a MOSS configuration to check code plagiarism and we take this seriously.", "We understand that these circumstances can be troubling, and you may need to speak with someone for emotional support."]}, {"course_id": 47, "course_code": "ECE 350", "course_name": "ECE350 - Real-Time Operating Systems (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Real-Time Operating Systems Winter 2025", "ECE 350", "ECE 350 001", "08:30AM - 09:50AM E7 4053", "11:30AM -", "ECE 350 201", "01:30PM - 04:20PM E2 2356A", "ECE 350 202", "01:30PM - 04:20PM E2 2356A", "01:30PM - 04:20PM E2 2356A", "ECE 350 101", "10:00AM - 11:20AM E7 4053", "About Prof. Zarnett", "8 years industry engineering experience in display & imaging", "Research specialization brain-machine interfacing", "Ahmed Elbaroudy - ammaelba@uwaterloo.ca", "Neeraj Nagar - nnagar@uwaterloo.ca", "Memory and virtual memory and caching; I/O devices, drivers, and permanent storage management; process scheduling; queue management in the kernel; real-time kernel development.", "Aspects of multi-core operating systems.", "View requirements for ECE 350", "Understand the differences between non-real-time and real-time operating system.", "The course notes should be pretty much everything you need for this course.", "I read them so you don\u2019t have to!", "They are neither required nor recommended, but I'll list them here in case you truly wish to look at them.", "Operating Systems Internals and Design Principles (9th Edition).", "Please bring this situation to the attention of the course staff as soon as possible so that can be resolved quickly.", "However, each group must submit their own, independently-developed code for each lab.", "Similarly, each person must submit their own, independently-developed code for each assignment.", "I suggest you avoid looking at other people\u2019s code entirely, but if you do, then you should not be doing that anywhere you might be writing your own code.", "The temptation to write your code just like what you see is simply too high.", "However, penalties may be more severe for repeat offenders (see below for information on Academic Integrity).", "All of the above applies to multiple instances \u2014 a student caught in several incidents of academic dishonesty will be subject to the above penalties for each of the incidents.", "The teaching team is keenly aware of the existence of generative AI (e.g., Github Copilot, ChatGPT) and how such tools can be used to write and test code.", "It almost goes without saying, but we ask you to be respectful and polite when communicating via this medium and to assume the best about others, as tone can be di\ufb03cult to interpret on a discussion forum.", "The human visual system has evolved to perceive saber\u2010toothed tigers in the savannah.", "We encourage everyone to be respectful of their classmates and to not distract them.", "Wise use of computers and the Internet can be helpful for fully engaging in class.", "From the command prompt, you can use compilers and text\u2010mode web browsers (w3m, lynx, links/elinks, etc....) tmux may also be helpful in managing multiple terminal sessions."]}, {"course_id": 48, "course_code": "ECE 351", "course_name": "ECE351 - Compilers (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["ECE 351", "ECE 351 001", "10:00AM - 11:20AM E7 4417", "08:30AM - 09:50AM E7 4417", "View requirements for ECE 351", "Write a circuit synthesizer and a circuit simulator for circuits described in a subset of VHDL.", "Learn the theoretical aspects of compilers and language design.", "Build a practical rudimentary compiler.", "Understand how language design can be seen as a general form of problem solving.", "-", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 49, "course_code": "ECE 356", "course_name": "ECE356 - Database Systems (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Notice of Recording", "Database Systems Fall 2024", "ECE 356", "ECE 356 001", "11:30AM -", "08:30AM - 09:50AM E7 4417", "Data models, file systems, database system architectures, query languages, integrity and security, database design.", "View requirements for ECE 356", "Relational databases empower the vast majority of dynamic websites as well as a variety of information management systems in private and public sector organizations.", "ECE356 explores the concepts and techniques that make such databases convenient, efficient, and reliable.", "The course additionally includes an introduction to data mining and NoSQL.", "model data using entity-relationship (ER) diagrams", "understand the relational model and design a relational schema for a data set", "execute SQL commands against a remote database using Java Database Connectivity (JDBC)", "identify integrity constraints and functional dependencies in data", "apply the theory of database normalization to optimize the design of a relational schema", "understand the basics of transaction execution, concurrency control, and recovery in databases", "understand SQL injection attacks, as well as password hashing and salting", "perform simple data mining and analytics operations on real data sets", "design a denormalized schema for a NoSQL database", "September 4-10 intro, relational model SSH, mysql command line tool     first week of classes", "September 11-17 relational algebra, SQL relational algebra", "October 2-8 normalization normal forms and normalization", "Exams", "A make-up final exam, if offered by the instructor, may be scheduled in a future academic term.", "The instructor will not offer a make-up midterm, and will instead consider shifting the weight of a missed midterm towards the final exam.", "Members of the teaching team may also evaluate students' proficiency in the use of software in connection with lab work.", "If a student's solution differs substantially from the solution recognized by the teaching team, the student may be asked to provide sample inputs and outputs to evaluate the correctness of their solution.", "Collaboration", "Exams may cover both theory and practice, including your ability to read and write SQL code.", "Notice of Recording"]}, {"course_id": 50, "course_code": "ECE 358", "course_name": "ECE358 - Computer Networks (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["ECE 358", "10:00AM - 11:20AM E7 4417", "Email", "Prof. Catherine Rosenberg", "Mike Cooper-Stachowsky", "Substitute Instructor", "Dr. Abdalla Mohamed Hussein", "Maryam Amini", "maryam.amini@uwaterloo.ca", "yuan.quan@uwaterloo.ca", "Mohammad Abuyaghi", "This course is a comprehensive introduction to computer networks.", "View requirements for ECE 358", "Revised Description: This course is a comprehensive introduction to computer networks.", "The lower-level outcomes are:", "Have a good understanding of protocols and networking design concepts.", "Have a working knowledge of socket programming.", "Have a working knowledge of transport protocols with a special emphasis on TCP and retransmission protocols.", "Example of LAN technologies: Ethernet and switches.", "Synthesis: a day in the life of a web request", "LAB1: Development of a simulator of a single transmission system.", "Examination", "If you miss the midterm without a valid reason, that midterm earns a score of zero.", "Lab marking and reports submissions", "Instructions for how to package your files and submit are in the lab manuals."]}, {"course_id": 51, "course_code": "ECE 406", "course_name": "ECE406 - Algorithm Design and Analysis (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Notice of Recording", "Algorithm Design and Analysis Winter 2025", "ECE 406", "ECE 406 001", "11:30AM -", "E. Creager", "04:00PM - 05:20PM", "E. Creager", "04:00PM - 05:20PM", "\u2022 Rushabh Solanki", "ECE 406:", "Design and analysis of efficient, correct algorithms.", "Advanced data structures, divide-and-conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph algorithms, search and backtrack, inherently hard and unsolvable problems, approximation and randomized algorithms, and amortized analysis.", "View requirements for ECE 406", "How to design efficient algorithms using divide and conquer, greedy algorithms, and dynamic programming.", "The kinds of problems that can be solved with linear programming, and why they can be solved efficiently.", "What it means to reduce one problem to another, and how it used in complexity analysis", "Introduction to algorithms Chapter 0 0.5 hours", "Divide and conquer algorithms Chapter 2 5 hours", "Graphs, decompositions and depth-first search Chapter 3 3 hours", "Linear Programming: Simplex algorithm, duality theorem Chapter 7 4 hours", "No lectures during ECE midterms week (Feb 24--28)", "LEC001] Tue 2:30--3:30pm in E7-5353", "Assignments Information and Guidelines: Assignments are given roughly every other week, and their primary goal is to give you practice in designing and analyzing algorithms.", "You must list these collaborators at the top of the first page of your assignment (there is no penalty for listing collaborators, but it ensures we do not falsely identify plagiarism).", "In submitting an assignment, you are \u201csigning off on your work\u201d as described in the academic integrity form at https://uwaterloo.ca/academic-integrity/. The penalty for a first plagiarism offence is -100% for the assignment.", "* Each student must turn in a signed academic integrity form to confirm their understanding of the above policies.", "Notice of Recording"]}, {"course_id": 52, "course_code": "ECE 409", "course_name": "ECE409 - Cryptography and System Security (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Cryptography and System Security Winter 2025", "04:00PM - 05:20PM", "08:30AM - 09:50AM E7 5353", "Introduction to cryptology and computer security, theory of secure communications, points of attack, conventional cryptographic systems, public key cryptographic systems, standards, firewalls, wireless system security, applications.", "View requirements for ECE 409", "This course will provide introduction to  cryptography and system security.", "It covers  basic concepts in cryptography and system security,   types of attacks, trust and threat models,  pseudorandomness, computational security,  symmetric-key  cryptography,  public-key cryptography,   attacks on cryptographic operations,   network security protocols,   wireless system security and privacy,  applications in IoT systems,   special topics on  privacy preserving  AI,   quantum key  distribution and post-quantum cryptography.", "Explain the principles of cryptography and system security.", "Explain how practical schemes of symmetric-key cryptography and public-key cryptography are designed and implemented.", "Analyze the security and privacy protections in wireless systems and their applications in IoT.", "Apply security principles to solve problems in concrete applications.", "Introduction  to Cryptography  and System Security", "Cryptography and cryptanalysis", "Basic protections: encryption and authentication", "Classification of cryptosystems", "Basic  concepts of secure systems.", "Types of attacks,  trust and threat model", "Computational security and one-way functions", "Chapter 3. Symmetric-key Cryptographic Systems", "Arithmetics of binary finite fields", "Secure hash functions: SHA1, SHA2 and SHA3", "MAC and forgery attack", "Time-memory trade-off attacks and attacks by AI", "Public-key Cryptographic Systems", "Arithmetic operations", "Security of public-key cryptography (factorization, DL, LWE)", "Practical public-key systems (DH, RSA, DSA, ECC)", "Fault side-channel attacks", "Network Security Protocols", "Implementing secure systems:  PKI  and  X.509 certificates", "Hop-by-hop versus end-to-end protections and VPN", "Chapter 6. Wireless System Security", "5G security architecture for IoT security and privacy", "Privacy preserving machine learning: secret sharing; securing federate learning", "Basic concepts for quantum cryptography", "Quantum key distribution", "Post-quantum cryptography", "Communication System Security L.L. Chen and G. Gong", "R. Anderson, Security Engineering A Guide to Building Dependable Distributed Systems, Wiley, 2014 (Anderson14).", "Schneier on Security, http://www.schneier.com/blog/. A blog covering current computer security and privacy issues.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 53, "course_code": "ECE 417", "course_name": "ECE417 - Image Processing (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Image Processing Winter 2025", "Monday, Friday -", "Topics include intensity transformations for image enhancement, two-dimensional discrete Fourier transform, spatial and frequency domain linear image filtering, nonlinear image filtering, binary image processing, edge detection, image segmentation, and digital video processing basics.", "View requirements for ECE 417", "This course also includes advanced topics including statistical and perceptual image modeling and processing; and compression, streaming, robustness, and scalability issues in visual communications.", "Understand basic theories and methodologies of digital image processing", "Digital image and video processing: Intensity transformations for image enhancement; spatial domain linear filtering; frequency domain linear filtering; nonlinear image filtering; image sampling and interpolation; motion and digital video processing.", "Image analysis and understanding: Edge detection; image segmentation; energy preserving and energy compaction; principle component analysis and independent component analysis; sparse representations; wavelet and multiresolution image analysis; non-linear image analysis.", "Statistical and perceptual image modeling and processing: Spatial domain image statistics; Fourier domain statistical image models; wavelet domain statistical image models; Markov random field models; computational models of the human visual system; perceptual image quality assessment and processing; data-driven and learning-based image processing algorithms.", "Visual communications: compression, quality, streaming, robustness and scalability: Video compression and standards; quality-of-service and quality-of-experience; adaptive video streaming; error resilient visual coding and communications; scalable image and video coding and communications.", "Electronic copies of lectures and study materials will be provided at course web site.", "Additional references include research papers published in journals, conferences and open-source archives that can be found online.", "Homework assignments are not graded but will be helpful for students to understand basic image processing concepts and algorithms, and will also be helpful for the preparation of the final exam.", "A research project that attempts some new investigations in a specific direction.", "The project presentation slides and reports should be submitted via Dropboxes at LEARN."]}, {"course_id": 54, "course_code": "ECE 423", "course_name": "ECE423 - Embedded Computer Systems (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Embedded Computer Systems Winter 2025", "04:00PM - 05:20PM", "Emon Sarkar esarkar@uwaterloo.ca", "Specification and design of embedded systems, specification languages, hardware/software co-design, performance estimation, co-simulation, verification, validation, embedded architectures, processor architectures and software synthesis, system-on-a-chip paradigm, retargetable code generation and optimization, verification and validation, environmental issues and considerations.", "View requirements for ECE 423", "Part I: Introduction", "Part II: Embedded Systems and SoC Design", "4.5", "Part VII: Embedded Architecture: System Architecture", "4.5", "Part X: System Software for Embedded Multicores", "The deliverables for each assignment consist of a demo and a report.", "Help sessions will be scheduled in the lab room E2 2356A every week, starting on the second week of classes and excluding reading week, on the following day and time: Wednesday 2:00PM-5:00PM.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 55, "course_code": "ECE 451", "course_name": "ECE451 - Software Requirements Specification and Analysis (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Software Requirements Specification and Analysis Winter 2025", "10:00AM - 11:20AM MC 2035", "Email:x784chen@uwaterloo.ca", "Email: ar2elsha@uwaterloo.ca", "Email: d3pang@uwaterloo.ca", "Models, notations, and processes for software requirements identification, representation, analysis, and validation.", "ECE 451: View requirements for ECE 451", "The week of", "Deliverables", "1 Introduction", "3 RE Reference Model", "Jan 13 4 Domain Model 4 Domain Model D0 \u2013 Group members & Project idea", "Jan 27 7 Functional Modelling 8 OCL D1 \u2013 Domain Model & Stakeholders", "Feb 10 10 Quality Requirements 10 Quality Requirements D2 -  Use case Diagram & Description", "Feb 24 11 Requirements Conflict management 12 Prioritizing Requirements D3 \u2013 Functional Model & OCL", "Mar 3 13 Cost Estimation 14 Risk Analysis D4 \u2013 State Diagram", "Mar 17 15 Temporal Logic 16 Validation and Verification D5 \u2013 Cost Estimation & Risk Analysis", "Mar 31 17 Software Project Management 18 Requirement Engineering for AI Systems D6 - Quality Attributes and Temporal Logic", "Ability to separate requirements from specifications from domain assumptions and argue that a specification + domain assumptions satisfy requirements", "Ability to model requirements in a variety of modelling paradigms", "Ability to elicit and document non-functional requirements such that the to-be-developed software can be objectively tested for their satisfaction", "Ability to use tools to manage a Software Development Team.", "Why is requirements analysis complex?", "Functions as a modelling notation.  Pre- and post-conditions.", "Use-case diagrams.", "Functions over a class diagram.", "Modelling dynamic behaviour of a software system.", "UML State Machines.", "Specification patterns.", "7: Model Integration (1 hour)", "The expected contents and organization of a Software Requirements Specification (SRS).", "AI vs non-AI Systems based on what we covered in this course.", "Braek and Haugen, Engineering real-time systems: an object-oriented methodology using SDL, Prentice-Hall, 1993.", "Larman, Applying UML and Patterns, Prentice Hall, 2004.", "Maciaszek, Requirements Analysis and System Design, Addison Wesley, 2001.", "Bray, An Introduction to Requirements Engineering, Addison-Wesley, 2002.", "Nuseibeh and Zave, Software Requirements and Design:", "van Lamsweerde, Requirements Engineering: From System Goals to UML Models to Software Specifications, Wiley, 2009.", "Brooks, The Design of Design, Addison Wesley, 2010.", "Alan Davis, Just Enough Requirements Management: Where Software Development Meets Marketing, Dorset House Publishing, 2005.", "The project can be related to requirements engineering or a more general software engineering topic.", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 56, "course_code": "ECE 452", "course_name": "ECE452 - Software Design and Architectures (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Software Design and Architectures Winter 2025", "10:00AM - 11:20AM MC 1056", "10:00AM - 11:20AM MC 1056", "10:00AM - 11:20AM MC 1056", "- Saarang Agarwal <saarang.agarwal@>", "- Bihui Jin <bihui.jin@>", "- Daniel Phan <daniel.phan@>", "- Amber Wang <jiale.wang@>", "ECE 452: View requirements for ECE 452", "Differentiate how various architectural styles and design patterns enhance and degrade a system\u2019s functional, non-functional and human value properties;", "Create and implement an architecture and design, refining it into a complete system;", "1 Jan 06 Mon Introduction to Class", "Jan 15 Wed Use Cases, Human Values", "Jan 17 Fri **P0** Team Formation", "Jan 31 Fri **P2** Project Proposal", "Feb 12 Wed **P3** Iteration 1 Demo", "Feb 26 Wed Design Patterns 2 - Structural", "9 Mar 03 Mon Design Patterns 3 - Behavioral", "Mar 05 Wed **P4** Iteration 2 Demo", "10 Mar 10 Mon Design Patterns 4", "Mar 19 Wed **P5** Iteration 3 Demo", "Apr 02 Wed **P6** Final Presentation", "Apr 04 Fri **P7** Final Report", "Jan 17 P0: Team Formation -", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 57, "course_code": "ECE 453", "course_name": "ECE453 - Software Testing, Quality Assurance, and Maintenance (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Notice of Recording", "04:00PM - 05:20PM", "Weiyi Shang <wshang@uwaterloo.ca>", "Introduces students to systematic testing of software systems.", "ECE 453: View requirements for ECE 453", "Organized testing can help identify problems in software systems, enabling developers to fix these problems.", "And easier-to-test software is better software.", "\u2022 You will be able to create and evaluate test suites for reasonably-sized software systems.", "\u2022 You will learn how to effectively test during the software engineering process.", "Creating tests", "Test minimization", "Week 12 March 27th Field testing", "Late policy: every person can have a late (max 24 hours) deliverable once", "Notice of Recording"]}, {"course_id": 58, "course_code": "ECE 454", "course_name": "ECE454 - Distributed Computing (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Distributed Computing Spring 2024", "ECE 454", "ECE 454 001", "10:00AM - 11:20AM E7 4043", "08:30AM - 09:50AM E7 4043", "04:00PM - 05:20PM E7 4043", "ECE 454 101", "07:00PM - 07:50PM E7 4043", "Teaching Team Member Role Office Email", "Dr. Tahsin Reza Instructor DC-2536 tahsin.reza@uwaterloo.ca", "ECE 454:", "Principles of distributed computing; architectures and middleware; servers, processes, and virtualization; upper-layer network protocols, interprocess communication and remote procedure calling; concurrency, synchronization and distributed algorithms, dependable distributed systems and fault tolerance.", "Antirequisite: Must not have taken or concurrently enrolled in CS 454/654 - Distributed Systems.", "Understand the architectures, protocols and algorithms underlying modern distributed systems.", "Understand fundamental techniques for making distributed systems scalable and dependable, and reason about design trade-offs.", "Use a scalable data processing framework to solve fundamental analytics problems.", "Use a fault-tolerant coordination service for configuration management, synchronization, and failure detection in a distributed software system.", "Use a stream processing engine to perform real-time analytics.", "Discuss the relative merits of distributed versus centralized systems.", "Distributed Systems 4th", "Unauthorized collaboration and copying of material constitute academic offences under Policy 71.", "If a student\u2019s solution differs substantially from the solution(s) accepted by the teaching team the student may be asked to provide sample inputs and outputs to evaluate the correctness of their solution.", "Alternatively, the teaching team may accept a modified solution for regrading and apply a penalty.", "Unauthorized collaboration and copying of material constitute academic offences under Policy 71.", "Intellectual Property: Learning materials used in this course contain the intellectual property of current and past members of the teaching team.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 59, "course_code": "ECE 455", "course_name": "ECE455 - Embedded Software (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 12, "major_name": "Software Engineering Option", "topics": ["Notice of Recording", "Embedded Software Spring 2024", "ECE 455", "Monday, Friday -", "11:30AM -", "04:00PM - 05:20PM E7 4043", "- Name: Sebastian Fischmeister", "- Email: sfischme@uwaterloo.ca", "- Name: Murray Dunne", "- Email: mdunne@uwaterloo.ca", "- Office hours: on demand in Microsoft Teams", "- Email: mdpintur@uwaterloo.ca", "- Office hours: on demand in Microsoft Teams", "ECE 455:", "This course covers computing elements, structures in embedded software, resource access protocols, uniprocessor scheduling, programming-language support, languages for MDD (model-driven development), worst-case execution time analysis, and overview of embedded distributed systems.", "Explain real-time systems and associated terms and vocabulary", "Perform schedulability checks for task on single-processor systems", "Perform worst-case execution time analysis", "Understand qualification and certification and the application of ISO 26262 in the automotive space", "Understand clock-driven scheduling", "Define and program temporal controls in programs", "Design fault tolerant systems", "M3: Embedded Systems Debugging", "M5: Worst-case Execution Time Analysis", "M6: Clock-driven Scheduling", "M7: Priority-driven Scheduling", "M9b: Failure Mode and Effects Analysis", "M10: Safety-critical Systems Standards", "M12: Embedded System Security", "Computers as Components: Principles of Embedded Computing System Design.", "Introduction to Embedded Systems: A Cyber-physical Systems Approach.", "Dependability: Basic concepts and terminology.", "Dependability: Basic Concepts and Terminology.", "In Handbook of Real-time and Embedded Systems.", "Notice of Recording"]}]