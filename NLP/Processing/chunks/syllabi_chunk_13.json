[{"course_id": 26, "course_code": "MATH 138", "course_name": "MATH138 - Calculus 2 for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "08:30AM - 09:20AM", "09:30AM - 10:20AM MC 4059", "10:30AM - 11:20AM MC 4061", "E. Bembenek", "11:30AM - 12:20PM MC 4021", "cpthowel@uwaterloo.ca", "E. Yalcin", "02:30PM - 03:20PM", "08:30AM - 09:20AM QNC 2502", "Introduction to the Riemann integral and approximations.", "Antiderivatives and the fundamental theorem of calculus.", "Applications of the integral.", "Improper integrals.", "Linear and separable differential equations and applications.", "Binomial series, functions defined as power series and Taylor series.", "The goal of this course is to further expand your knowledge of calculus and its applications for one-variable functions.", "First, we will explore areas under curves and the Fundamental Theorem of Calculus, integration techniques, and applications of integration including finding the area between two curves, volumes of solids of revolution, and the average value of a function.", "We will study how to solve separable differential equations and linear differential equations as well as their applications to population growth and Newton's Law of Cooling.", "Write clear and well-organized mathematical solutions and proofs.", "Solve problems in Calculus through logical thinking and careful analysis.", "Set up and evaluate Riemann integrals for simple functions", "Apply various integration techniques including change of variable, integration by parts, trigonometric substitution, and partial fractions.", "Solve separable and first-order linear differential equations.", "Compute the radius and interval of convergence for power series.", "Compute Taylor Polynomials and Taylor series for many elementary functions.", "1: Jan 6 - 10 1.1 - 1.3 Riemann Sums, Definite Integrals, Average Value", "5: Feb 3 - 7 2.1 - 2.2.2, 2.3 Intro to DEs, Direction Fields, Separable and First-Order Linear DEs Quiz 4", "8: Mar 10 - 14 4.1 - 4.3 Intro to Power Series, Differentiation & Integration of Power Series Quiz 7", "FE: Mar 31 - Apr 4 4.8 Big-O Notation Quiz 10", "Notice of Recording", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 27, "course_code": "MATH 148", "course_name": "MATH148 - Calculus 2 (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["08:30AM - 09:20AM", "Instructor: Michael Brannan", "E-mail: michael.brannan@uwaterloo.ca", "Week of", "3 Jan. 20 Fundamental Theorem of Calculus  A1", "4 Jan. 27 Techniques of Integration  A2", "5 Feb. 3 More Techniques and Improper Integration", "6 Feb. 10 Applications of Integration A3", "8 Mar. 3 Convergence Tests A4", "10 Mar 17 Sequences and Series of Functions A5", "11 Mar. 24 Power Series", "12 Mar. 31 Differential Equations A6", "Principles of Mathematical Analysis."]}, {"course_id": 28, "course_code": "MATH 135", "course_name": "MATH135 - Algebra for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["Algebra for Honours Mathematics Winter 2025", "An introduction to the language of mathematics and proof techniques through a study of the basic algebraic systems of mathematics: the integers, the integers modulo n, the rational numbers, the real numbers, the complex numbers and polynomials.", "Algebra for Honours Mathematics is a study of the basic number systems of mathematics.", "The course has two themes: Number systems and Mathematical language.", "The study of number systems will feel more familiar and will cover the integers, the integers modulo n, the complex numbers and polynomials.", "Gain practice in formulating conjectures and discovering proofs.", "Understand basic algebraic systems of mathematics: the integers, the integers modulo n, the rational numbers, the real numbers, the complex numbers and polynomials.", "MATH 135 Course Notes: Language and Proofs in Algebra, An Introduction Please see the Course Notes page in LEARN for the pdf No Free", "Generative AI: This course includes the independent development and practice of specific skills, such as proof discovery and proof writing.", "Library for research-based assignments", "In particular:"]}, {"course_id": 29, "course_code": "MATH 145", "course_name": "MATH145 - Algebra (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["02:30PM - 03:20PM", "E-mail: bmadill@uwaterloo.ca", "Topics include rings and subrings, integral domains and fields, homomorphism and isomorphism, quotient rings and modular arithmetic, isomorphism and the Chinese Remainder Theorem, irreducibility in integral domains, and field extensions.", "Week of", "1 Sept 5* Rings and Subrings", "3 Sept 19 Integral Domains and Fields A1", "7 Oct 24 FIT and CRT A3", "9 Nov 7 GCD's A4", "11 Nov 21 Field Extensions"]}, {"course_id": 30, "course_code": "MATH 136", "course_name": "MATH136 - Linear Algebra 1 for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "Linear Algebra 1 for Honours Mathematics Winter 2025", "08:30AM - 09:20AM MC 4061", "09:30AM - 10:20AM MC 4061", "10:30AM - 11:20AM QNC 2502", "11:30AM - 12:20PM MC 2065", "02:30PM - 03:20PM", "03:30PM - 04:20PM QNC 2502", "11:30AM - 12:20PM MC 4061", "10:30AM - 11:20AM B1 271", "Systems of linear equations, matrix algebra, elementary matrices, computational issues.", "Real n-space, vector spaces and subspaces, basis and dimension, rank of a matrix, linear transformations, and matrix representations.", "Master computational aspects of linear algebra, including matrix and vectors operations", "Solve systems of m linear equations in n unknowns", "Evaluate the inverse of a square matrix, when it exists", "Obtain the matrix representation of a linear transformation", "Evaluate the determinant of a square matrix", "Change co-ordinates and bases, and understand the effect on matrix representations", "Become familiar with operations and properties of abstract vector spaces", "While collaboration in understanding the material is encouraged, the work submitted must be your own, written independently.", "For example, submitting 60 minutes late will result in a maximum possible score of 40%, assuming a perfect score.", "Accommodation Requests", "Notice of Recording", "Allocate time appropriately towards the completion of the assignment which reduces the procrastination and cramming cycle", "Appreciate the importance of reviewing marked assignments", "In particular:", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as reading and writing proofs.", "Library for research-based assignments"]}, {"course_id": 31, "course_code": "MATH 146", "course_name": "MATH146 - Linear Algebra 1 (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["Linear Algebra 1 (Advanced Level)", "Email: karigiannis@uwaterloo.ca", "This course is a rigorous treatment of the theory of finite dimensional vector spaces over an arbitrary field.", "We also cover the theory of determinants over an arbitrary commutative ring with identity, and some aspects of the theory of polynomials in one variable over a field.", "The ultimate goal is the Primary Decomposition Theorem, which characterizes a linear operator on a finite dimensional vector space in terms of invariant subspaces annihilated by the primary factors of its minimal polynomial.", "We will cover a large amount of difficult material at a fast pace.", "Understand and apply the concepts of the theory of abstract vector spaces and linear operators on finite-dimensional vector spaces.", "fields; systems of linear equations; matrices; row-reduced echelon form; matrix algebra; invertible matrices", "vector spaces; subspaces; bases and dimension; coordinates; row equivalence", "algebra of linear maps; isomorphism; representations by matrices; dual space; transpose of a linear map", "commutative rings; existence and uniqueness of determinants; multilinear maps; the exterior algebra", "eigenvalues; annihilating polynomials; invariant subspaces; simultaneous triangulation and diagonalization", "Much (but not all) of my lectures will closely follow the first six chapters of this book:", "\u201cLinear Algebra: Second Edition\u201d by Kenneth Hoffman and Ray Kunze; Prentice Hall, 1971.", "\u201cLinear Algebra: Fourth Edition\u201d by Friedberg, Insel, and Spence; Prentice-Hall, 2003.", "The assignments are an integral part of your evaluation in this course and I encourage everyone to take them very seriously.", "There will be no opportunity for a make-up midterm test."]}, {"course_id": 32, "course_code": "MATH 239", "course_name": "MATH239 - Introduction to Combinatorics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["Introduction to Combinatorics Winter 2025", "11:30AM - 12:20PM MC 4059", "09:30AM - 10:20AM MC 4021", "P. Nelson", "08:30AM - 09:20AM QNC 1502", "S. Pfannerer-Mittas", "10:30AM - 11:20AM MC 4058", "11:30AM - 12:20PM MC 4058", "09:30AM - 10:20AM MC 4042", "02:30PM - 03:20PM", "10:30AM - 11:20AM PHY 150", "04:30PM - 05:20PM", "You should have no reason to contact them directly, but you can find their email addresses through Learn.", "First name Last name", "Guilherme Zeus Dantas E Moura", "Theodore Morrison", "Matthew Kroeker", "Introduction to graph theory: colourings, matchings, connectivity, planarity.", "Introduction to combinatorial analysis: generating series, recurrence relations, binary strings, plane trees.", "MATH 239 is an introduction to combinatorics with a particular focus on counting techniques and graph theory.", "extract coefficients from rational generating series", "find maximum matchings in bipartite graphs", "understand and use the concepts of paths, cycles, trees, bipartiteness, and planarity in graph theory", "be comfortable writing proofs for results on discrete objects", "2 Jan 13,15,17 Generating series, Sum and Product lemmas, Negative Binomial Theorem, Integer Compositions Part I: 2.1-2.3", "5 Feb 3,5,7 Solving linear recurrence relations, Binary trees, irrational generating series Part I: 4.1, 4.2, 4.4 Assignment 4, Feb 7", "6 Feb 10,12,14 Introduction to graph theory Part II: 4.1-4.6 Assignment 5, Feb 14", "Grading scheme A", "Students are encouraged to collaborate on solving the questions but each student must write their own solutions independently in their own words.", "Please inform of us these at the start of the course.", "Library for research-based assignments"]}, {"course_id": 33, "course_code": "MATH 249", "course_name": "MATH249 - Introduction to Combinatorics (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["Introduction to Combinatorics (Advanced Level)", "09:30AM - 10:20AM MC 2017", "For graph theory, while we will focus on the same topics covered in MATH 239 (planarity and bipartite matching), our coverage of those topics will differ substantially in depth and in the techniques that we employ; in particular, we will see striking applications of algebra.", "extract coefficients from rational generating series", "find maximum matchings in bipartite graphs", "understand and use the concepts of paths, cycles, trees, bipartiteness, and planarity in graph theory", "be comfortable writing proofs for results on discrete objects", "2 Jan 13,15,17 Generating series, Sum and Product lemmas, Negative Binomial Theorem, Integer Compositions Part I: 2.1-2.3", "5 Feb 3,5,7 Solving linear recurrence relations, Binary trees, irrational generating series Part I: 4.1, 4.2, 4.4 Assignment 4, Feb 7", "6 Feb 10,12,14 Introduction to graph theory Part II: 4.1-4.6 Assignment 5, Feb 14", "Grading scheme A", "Students are encouraged to collaborate on solving the questions but each student must write their own solutions independently in their own words.", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 34, "course_code": "STAT 230", "course_name": "STAT230 - Probability (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["03:30PM - 04:20PM MC 4045", "09:30AM - 10:20AM MC 4045", "02:30PM - 03:20PM", "03:30PM - 04:20PM MC 2017", "08:30AM - 09:20AM", "Pavel Shuldiner; E-mail: pavel.shuldiner@uwaterloo.ca; M3 4108", "Come with well-organized questions to make the best use of your time.", "Requests must be emailed to sasugradadv@uwaterloo.ca", "Joint probability functions, marginal probability functions, and conditional probability functions of two or more discrete random variables and functions of random variables are also discussed.", "Post-requisite:", "Define a probability model and determine probabilities of events using counting techniques.", "Define and use probability mass functions, probability density functions, and cumulative distribution functions to determine probabilities of events.", "Use moment generating functions as a tool to determine expected values.", "This learning consists of taking the time to carefully read the lecture notes on your own, ensuring you understand the concepts and steps demonstrated in the lectures to tackle examples, and then solving the end-of-section problems.", "Definitions of Probability", "Mathematical Probability Models", "1.1", "1.2", "Counting in Uniform Probability Models", "Addition and Multiplication Rules for Counting", "Permutations and Combinations", "Counting in Uniform Probability Models", "Addition and Multiplication Rules for Counting", "Permutations and Combinations", "Addition Rules for Unions of Events", "1.3", "2.1", "2.2", "2.3", "Conditional Probability and Product Rules for Intersections of Events", "Probability Mass Functions, Cumulative Distribution Functions", "Functions of Random Variables", "3.2", "Expectation of a Random Variable", "Expectation of a Function of a Random Variable, Properties of Expectation", "Moment Generating Functions", "3.3", "3.4", "3.5", "Basic Terminology and Techniques", "Joint Probability Mass Functions, Marginal Probability Mass Functions", "3.5", "4.1", "Multinomial Distribution", "Linear Combinations of Random Variables", "4.2", "4.4", "Linear Combinations of Random Variables", "Law of Total Expectation", "4.4", "4.5", "4.6", "Law of Total Expectation", "Cumulative Distribution Function, Probability Density Function", "Functions of Random Variables", "4.6", "Expectation of a Random Variable", "Moments of a Distribution, Moment Generating Functions, Mean, Variance, Standard Deviation", "Exponential Distribution", "Normal Distribution", "Exponential Distribution", "Normal Distribution", "Use of the Normal Distribution in Approximations", "Therefore, you should plan to spend between 3 and 6 hours each week in out-of-class learning.", "This learning consists mainly of ensuring you understand the concepts and steps used in class to solve problems and then solving exercises from the Course Notes on your own.", "A 2.5-hour final cumulative examination will be held during the final exam period in April.", "In the case of extenuating circumstances, you must provide sufficient documentation via e-mail to Divya Lala at divya.lala@uwaterloo.ca as soon as possible to verify your absence's circumstances.", "Re-mark Requests:", "Cancellation of In-Person Classes:", "Intellectual property includes items such as:", "Students may not distribute or reproduce these materials for commercial or non-commercial means.", "This course includes the independent development and practice of specific skills for solving real-life problems using introductory probability rules.", "Library for research-based assignments"]}, {"course_id": 36, "course_code": "STAT 231", "course_name": "STAT231 - Statistics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "03:30PM - 04:20PM DC 1350", "02:30PM - 03:20PM", "11:30AM - 12:20PM MC 1085", "03:30PM - 04:20PM", "10:30AM - 11:20AM EIT 1015", "09:30AM - 10:20AM EIT 1015", "Email: aslynko@uwaterloo.ca", "Email: liqun.diao@uwaterloo.ca", "Email: yangjc@uwaterloo.ca", "Email: henan.xu@uwaterloo.ca", "Funmilayo Adeku", "Email: fadeku@uwaterloo.ca", "This course provides a systematic approach to empirical problem solving which will enable students to critically assess the sampling protocol and conclusions of an empirical study including the possible sources of error in the study and whether evidence of a causal relationship can be reasonably concluded.", "The connection between the attributes of a population and the parameters in the named distributions covered in STAT230 will be emphasized.", "Numerical and graphical techniques for summarizing data and checking the fit of a statistical model will be discussed.", "The method of maximum likelihood will be used to obtain point and interval estimates for the parameters of interest as well as testing hypotheses.", "The interpretation of confidence intervals and p-values will be emphasized.", "The Chi-squared and t distributions will be introduced and used to construct confidence intervals and tests of hypotheses including likelihood ratio tests.", "Contingency tables and Gaussian response models including the two sample Gaussian and simple linear regression will be used as examples.", "Course Information Webpage", "Please do not send these questions via email.", "I expect everyone to be respectful to each other, any posts that do not meet the principles in Policy 33: Ethical Behaviour will be removed.", "Email", "Please send emails from uwaterloo.ca email address and include the session number and student ID number.", "Continuity Plans", "Use numerical and graphical summaries of a data set to describe the characteristics of a variate and to check the fit of a statistical model to the data.", "Use the steps of PPDAC to identify both the objectives and possible sources of error in an empirical study, and to critically evaluate the conclusions.", "Identify the connection between attributes of a population and the parameters in the named distributions (Binomial, Poisson, Multinomial, Exponential, Normal).", "Define and use the likelihood function to obtain point estimates of the unknown parameters in a model particularly for the Binomial, Poisson, Multinomial, Exponential and Gaussian (Normal) models.", "Use a pivotal quantity to construct a confidence interval for a parameter in some specific cases, and interpret the confidence interval.", "Use the likelihood function to construct and conduct a test of hypothesis for an unknown parameter in a model.", "Interpret p-values and describe the connection with confidence intervals.", "Define the properties of the Chi-squared and t distribution.", "Define a Gaussian response model including simple linear regression; determine point and interval estimates and conduct tests of hypotheses for the parameters in a Gaussian model.", "Use a Goodness of Fit test to test the fit of a model, independence in a two-way table and equality of proportions for two or more groups", "Describe the importance of randomization and pairing in experimental design and be able to recognize whether a study design allows the researcher to conclude cause and effect.", "This learning consists of taking the time to carefully read the course notes on your own, making sure you understand the concepts and steps demonstrated in the lectures to tackle examples, and then solving the end-of-chapter problems.", "Monday", "Friday", "Welcome", "1.1 Introduction to Statistical Sciences", "1.3 Numerical Data Summaries", "1.3 Graphical Summaries", "1.4 Probability Distributions and Statistical Models", "1.5 Data Analysis and Statistical Inference", "1.6 Introduction to R and RStudio", "2.1 Choosing a Statistical Model", "2.2 Estimation of Parameters", "2.3 Method of Maximum Likelihood", "2.4 Likelihood Functions for Multinomial Models", "2.5 Invariance Property of MLE", "2.6 Checking the Model", "3.1 Planing and Conducting Empirical Studies", "3.2 Steps of PPDAC", "3.3 Case Study", "4.1 Statistical Models and Estimation", "4.2 Estimators and Sampling Distributions", "4.4 Confidence Intervals and Pivotal Quantities", "4.5 The Chi-Squared and t Distributions", "4.6 Likelihood-Based Confidence Intervals", "4.7 Confidence Intervals for Parameters in the Gaussian model", "4.7 Confidence Intervals for Parameters in the Gaussian model (Continued)", "5.1 Introduction to Hypothesis Testing", "5.2 Test of Hypotheses for Parameters in the Gaussian Model", "Relationship Between Hypothesis Testing and Confidence Intervals", "5.3 Likelihood Ratio Test of Hypothesis - One parameter", "6.1 Gaussian Response Models", "6.2 Simple Linear Regression: Maximum Likelihood and Least Squares Estimates", "Confidence Interval for Parameters in the Model", "6.3 Checking Model Assumptions and Residual Plots", "Randomization, Paring, and Experimental Design", "7.1 Likelihood Ratio Test for the Multinomial Model", "7.2 Goodness of Fit Tests", "This learning consists mostly of making sure you understand the concepts and steps that were introduced and used in class to solve examples and then solving problems from the Course Notes on your own.", "R Statistical Software", "R and the RStudio development environment can be downloaded from here.", "All assessments are proctored, in-person, and closed-book exams.", "A 2.5-hour cumulative final examination will be held during the final exam period (April 9 - 25, 2025).", "If you have a question regarding the marking of an assessment, you should first check the posted solutions on LEARN.", "First and last name", "Session number", "Please be specific and explain your rationale for a remark.", "Notice of Recording", "Short-term absence", "COVID-19-related absence", "No limits on number of submissions per term and only available during the formal lecture period", "In particular:", "Please inform us of these at the start of the course.", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments"]}, {"course_id": 37, "course_code": "STAT 241", "course_name": "STAT241 - Statistics (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["RCH 307", "Part I, Talking Probability: The statistical approach to analyzing data begins with a probability model to describe the data generating process; that\u2019s why, to study statistics, one must first learn to speak the language of probability.", "10-11 Some \"standard\" statistical problems: categorical data analysis; two-sample comparisons, confounding factors, randomization, and blocking; simple linear regression.", "Midterms (M) 30 pts @ 15 pts each", "Final (F) (100 - A - M) pts", "Date & Time Location", "Then, his final exam will be worth 100-A-M=100-0-6=94 pts."]}, {"course_id": 0, "course_code": "CS 136L", "course_name": "CS136L - Tools and Techniques for Software Development (0.25)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Tools and Techniques for Software Development Winter 2025", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 3003", "E. Ciklabakkal", "E. Ciklabakkal", "08:30AM - 10:20AM MC 4042", "E. Ciklabakkal", "10:30AM - 12:20PM MC 4042", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 4060", "02:30PM - 04:20PM MC 4060", "E. Ciklabakkal", "10:30AM - 12:20PM MC 3003", "This course introduces students to tools and techniques useful in the software development lifecycle.", "Students learn to navigate and leverage commands and utilities in the Linux Command Line Shell.", "Students gain experience in version control software, writing scripts to automate tasks, and creating effective test cases to identify bugs.", "Students also gain experience in using built-in support for version control, testing, debugging, build automation, etc. in integrated development environments (IDEs).", "Interact with the Linux Operating System using a command line shell and gain familiarity with commands, utilities and tools.", "Create scripts to automate tasks and increase productivity while working on a software project.", "Design test cases and automate the testing process to check a program for functional correctness and incorrect memory usage.", "Use version control systems to share, contribute, manage and track code.", "Separately compile code modules and leverage build automation tools to do so efficiently.", "Module 0: Linux Shell, a first look", "Module 2: Testing and Debugging", "Module 9: Debugging", "Each lab consists of a number of lab problems.", "Each lab problem has two associated values, a lower one called the pass threshold and a higher one called the completion threshold.", "Special note on test cases: if a lab question asks you to submit test cases, you must create these tests yourself.", "Do not directly copy code from GenAI.", "Do not ask GenAI for a step-by-step breakdown of how to solve a lab problem.", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 1, "course_code": "CS 341", "course_name": "CS341 - Algorithms (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Algorithms Winter 2025", "10:00AM - 11:20AM MC 4061", "08:30AM - 09:50AM MC 1056", "The study of efficient algorithms and effective algorithm design techniques.", "Topics include divide and conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph search and backtrack, problems without algorithms, NP-completeness and its implications.", "DPV", "Introduction to Algorithms, by Cormen, Leiserson, Rivest and Stein, MIT Press.", "describe the main idea first,", "Extensions and Other Accommodations on Assignments", "Students can currently self-declare two kinds of absences on Quest: short-term absence and pandemic-related absence.", "Since a short-term absence lasts 2 days, this means the only accommodation we offer for a short-term absence is a 48 hour extension.", "If you request accommodations through AccessAbility Services (AAS) by filling out a Missed Course Component form, the accommodation is determined on a case-by-case basis through consultation with AAS, but will generally be one of the above options unless your situation is unusual.", "If you collaborate with others, you must clearly indicate the collaboration for each problem.", "This is not a software engineering course; we will not test your code against inputs that do not match our specifications.", "Continuity Plan", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 2, "course_code": "CS 350", "course_name": "CS350 - Operating Systems (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Operating Systems Winter 2025", "07:00PM - 08:50PM", "Bernard Wong bernard AT uwaterloo DOT ca", "Hong Zhang honzhang AT uwaterloo DOT ca", "Karen Anderson kaanders@uwaterloo.ca", "An introduction to the fundamentals of operating system function, design, and implementation.", "Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security.", "An introduction to the fundamentals of operating system function, design, and implementation.", "Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security.", "Operating System Introduction (2 hours)", "Historical overview of operating system development.", "Simple memory management techniques: partitioning, dynamic loading, simple segmentation.", "File Systems (6 hours)", "Bonus content on a current topic in computing", "In a general way, understand operating systems: what they do, how they are used, and how they are implemented.", "Introduction Chapters 1-2 Intro  Slides", "Process API    Slides", "Fibers", "Synchronization", "System Calls and Exceptions   Context Switch & Sys Calls  Slides", "Virtual Memory Chapters 8,9 Address Spaces   Memory API", "Smaller Page Tables", "Devices and I/O Chapters 12 and 13 I/O Devices  Hard Disk Drives  Slides Disk", "File Systems Chapters 10 and 11 (excluding 11.8, 11.9) Files and Directories", "File System Implementation", "FSCK & Journaling  Slides Part 1", "Bonus: Debugging     Slides", "A Collection of Tutorials and Useful Information", "An Introduction to Programming with Threads, by Andrew Birrell", "Assignment 3: File Systems", "Operating System Concepts, 8th edition Silberschatz, Galvin and Gagne (John Wiley and Sons) No available free on-line", "We will be using a system for class-related discussions and announcements called Piazza.", "Piazza can generate a large volume of e-mails, and these settings may be modified to reduce the frequency of received notifications (as well as what types of notifications are received).", "Debugging: GDB Online Documentation", "An Introduction to Programming with Threads, by Andrew Birrell", "System V ABI", "COS Source Code and Documentation:", "Source Code Documentation", "OpenGrok Source Code Search", "OpenGrok Source Code Navigation", "Exams", "You are welcome to use these tools to help you understand the course material, but you must not:", "cut-and-paste your assignment code into them for debugging assistance.", "Also, these tools will not be available when you write the exam, so you need to understand how to solve these problems yourself in order to pass the course.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 3, "course_code": "CS 115", "course_name": "CS115 - Introduction to Computer Science 1 (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Introduction to Computer Science 1 Winter 2025", "Diren Swayze", "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming.", "As we are aware of the varied ways in which this material might be of use in the future, we have included concepts that are beautiful and universal.", "Because of the fundamental nature of the concepts taught in CS 115, the course can serve both students whose primary interest in computers is in their use in their chosen areas of study and students intending to minor in CS.", "Module 01: Introduction Monday January 6", "Module 03: Strings and Symbols Monday January 13", "Module 06: Structural Recursion Monday February 3", "Module 08: Local Evaluation Monday February 24", "Module 09: Higher-Order Functions Monday March 3", "Exams", "You can submit each of those files as many times as you like before the deadline.", "Every time you submit a file, we'll run some basic checks on it to make sure it looks valid, and send you preliminary feedback via email.", "Re-marking", "The forms will be in a Survey on Learn for each assignment for two weeks."]}, {"course_id": 4, "course_code": "CS 135", "course_name": "CS135 - Designing Functional Programs (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Designing Functional Programs Winter 2025", "Monday -", "Monday", "07:00PM - 08:50PM", "08:30AM - 09:20AM", "10:30AM - 11:20AM MC 2034", "Charlie Clarke", "Email: claclark@uwaterloo.ca", "Karen Anderson", "Email: kaanders@uwaterloo.ca", "Email: dbwolff@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Sara Nayar", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "CS135 Problem-solving FAQ", "Assignment Marking Error: Submit a re-mark request, due within one week of release of marks.", "Read Me First", "We hope to guide you through a carefully designed curriculum that introduces you to core concepts in computer science.", "In a typical week, you will move through the following activities:", "You should get a feel for what information is where so you can find it quickly in the future.", "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming.", "Syntax and semantics of a functional programming language.", "Linear and nonlinear data structures.", "Abstraction and encapsulation.", "CS 135 Designing Functional Programs", "CS 135 is for students who would prefer a more conceptual treatment of introductory computer science in a simple language that is educationally effective but not commercially relevant.", "Hardware and Software", "Student labs are equipped with the DrRacket integrated development environment running on networked personal computers.", "References", "How To Design Programs by Felleisen, Findler, Flatt, and Krishnamurthi, MIT Press, 2003.", "Definition of lists, designing functions to process and produce lists, recursive definition of natural numbers, recursive data definitions.", "Non-Linear Structures (6 hours)", "Multi-clausal recursive data definitions, trees, mutually referential data definitions, design methods for complex data, iterative refinement, multiplexing.", "Early development of electronic computers and programming languages.", "History of concepts covered in this course.", "have understanding and experience with the topics in the course outline above", "Drop deadline 25", "Reading Week Starts", "Slides Description", "L01 Values and expressions Prefix notation, exact numbers, Boolean expressions, constants", "L04 Lists List values and expressions, composite data, data definitions", "iClicker pilot", "2024-08-26: CS135 is participating in a pilot comparison of iClicker and Vevox.", "The iClicker subscription should be free.", "iClicker Account", "Racket and DrRacket", "It is also simple and clean enough that we cover computer science content many CS students do not see until later in their CS careers.", "If you submit code written under some other system and it does not work in our currently-supported version of DrRacket, then we consider that code incorrect even if it works for you at home.", "Your work in CS135 will be assessed in a variety of ways.", "Coverage", "Using such off-limits material generally results in a significant loss of marks.", "In general, the basic tests will try to warn you if inappropriate functions and special forms are used.", "Submitting a partially completed solution is a good idea, just in case you don\u2019t get back to it before the due date and to serve as a backup in case your computer breaks or is stolen.", "Email Karen Anderson .", "Email the ISAs and ask them to \u201cmark it for feedback\u201d.", "Testing", "We do several kinds of testing on your submissions:", "Basic tests", "Each time you submit before the due date, we run a set of \u201cbasic tests\u201d on your submission.", "It\u2019s amazing how many fatal errors can appear during last-minute tidying up!", "Do not make your last submission immediately before the deadline \u2013 it gives you no time to check the Basic Test results and respond, if needed.", "The numeric mark appearing on the basic test marksheet is only for guidance.", "After the submission deadline we run a second set of tests to assess your code, including:", "These post-deadline tests and hand-marking form your mark for the assignment.", "If you procrastinate long enough, this rule can easily cause you to fail the course.", "We won\u2019t rehash the above policies, but we do want to make them concrete for CS135.", "A specific assignment may give exceptions to the above.", "You are welcome to use these tools to help you understand the course material, but you should not:", "cut-and-paste your assignment code into them for debugging assistance.", "Also, these tools will not be available when you write the exam, so you need to understand how to solve these problems yourself in order to pass the course.", "attempting to run malicious code during the submission or marking process."]}, {"course_id": 5, "course_code": "CS 145", "course_name": "CS145 - Designing Functional Programs (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Designing Functional Programs (Advanced Level)", "10:00AM - 11:20AM MC 2017", "Monday -", "Monday", "07:00PM - 08:50PM", "Email: troy.vasiga@uwaterloo.ca", "Office Hours: Tues and Thur 1:00-2:00pm in MC 6212,", "Email: kaanders@uwaterloo.ca", "Email: cs145@uwaterloo.ca", "Fri 2:30-3:30pm in MC 4065,", "Email: cs145@uwaterloo.ca", "This course introduces students to key concepts in the field of Computer Science, prepares students to complete the CS portion of their Math core requirements and, if desired, continue on to second-year core courses in CS, provides top students with appropriate challenges and enrichment, and explores topics in greater depth than is possible in CS 135.", "Audience", "Demonstrate above-average communication skills (listening, reading, writing) due to the lack of textbook support for much of the enrichment material", "Given a clear and concise statement of a problem or task, write a program from scratch of up to a hundred lines of properly-formatted and documented code in a functional programming language to solve the problem or complete the task", "Use elementary data structures, such as lists and trees, in programs", "Use higher-order functions to improve readability and efficiency of programs", "Analyze the worst-case running time of programs and describe examples of data that demonstrate that the analysis cannot be improved", "Demonstrate their understanding of the implementation of functional programming language features by coding small interpreters for Scheme-like languages", "An introduction to functional programming", "Function application and definition", "Substitution model", "Types in Scheme", "Structures", "Recursion on lists and integers", "Unary representation of integers", "Proving properties of programs", "Algorithm analysis", "Functions as values", "Anonymous functions", "Higher-order functions", "Local definitions", "Simplifying the language", "Binary representation of integers", "Immutable abstract data types", "Association lists", "Leaf-labelled and node-labelled trees", "S-expressions", "Interpreters", "Limits to computation", "Efficiency", "Purely-functional data structures", "Priority Queue ADT and Braun heaps", "Efficient maps: treaps, red-black trees, AA trees", "They will not be due each week on the same day, as is common in the other first-year CS courses and the first-year Math courses.", "Assignment questions are the main way to reinforce and deepen your understanding of the concepts and skills discussed in lecture.", "You will submit program files electronically to the Marmoset system, which runs tests on your code and informs you of the results fairly rapidly.", "You can still get a great mark in the course.", "Questions and concerns can be sent to instructor or ISA emails.", "When asking questions, first check in case the question has already been answered using the search bar above the feed/list of posts.", "Walk-in consulting hours may still be available if course staff are able to book a sufficiently-large room to follow distancing guidelines."]}, {"course_id": 6, "course_code": "CS 136", "course_name": "CS136 - Elementary Algorithm Design and Data Abstraction (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Elementary Algorithm Design and Data Abstraction Winter 2025", "08:30AM - 09:50AM MC 2017", "10:00AM - 11:20AM MC 2038", "10:00AM - 11:20AM MC 4059", "11:30AM -", "Monday -", "Monday", "07:00PM - 08:50PM", "This course builds on the techniques and patterns learned in CS135 while making the transition to use an imperative language.", "Topics discussed include iterative and recursive sorting algorithms; lists, stacks, queues, trees, and their application; abstract data types and their implementations.", "produce well-designed, properly formatted, documented and tested programs of a moderate size (200 lines) that can use basic I/O", "explain and demonstrate the use of the C memory model, including the explicit allocation and deallocation of memory", "explain and demonstrate the principles of modularization and abstraction", "implement, use and compare elementary data structures (structures, arrays, lists and trees) and abstract data type collections (stacks, queues, sequences, sets, dictionaries)", "If both exams are held in person", "If both exams must be held online", "If in-person exams cannot be held then they will be held online (if possible).", "You may also ask on the discussion forums in a private message.", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 7, "course_code": "CS 146", "course_name": "CS146 - Elementary Algorithm Design and Data Abstraction (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Elementary Algorithm Design and Data Abstraction (Advanced Level)", "Monday -", "Monday", "07:00PM - 08:50PM", "02:30PM - 03:20PM", "Brad In-person MC 6427", "On-line Consulting Hours: Microsoft Teams", "CS 146: Elementary Algorithm Design and Data Abstraction (advanced version)", "To familiarize students with key concepts in introductory computer science from an imperative perspective and to contrast this with the functional perspective taken in CS 145;", "To allow students to complete the CS portion of their Math core requirements and, if desired, to continue on to second-year core courses in CS;", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "Introduction to C and elementary mutation in Scheme", "The memory model.", "Variable declaration, assignment and infix expressions in C. Basic I/O in C. Compilation.", "Algorithm analysis in C. File I/O in C and Scheme.", "Program organization and testing methods.", "Space analysis in C and Scheme.", "Mutable lists, queues, deques, and trees in C. Time-space tradeoffs among mutable and immutable ADT implementations.", "Low-level abstractions", "Pointer arithmetic in C. Arrays in C and vectors in Scheme.", "Strings in C. Elementary hashing.", "Libraries in C and Scheme.", "Implementing high-level abstractions", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "The provided slides are not a substitute for attendance in any first-year CS course, but in CS 146, there are no slides, and the lecture summaries made available after lecture are an even worse substitute for attendance.", "Lectures will involve the development of ideas summarized very tersely in the handouts, as well as on-the-fly development of code, analyses, and proofs.", "CS145 and CS146 were originally designed as a year-long unit of curriculum, but eventually the individual courses drifted in their own directions.", "1.1 A note on logistics", "1.2 Review of forms of recursion and associated proof techniques", "1.3 In preparation for side effects", "1.4 Output", "1.5 Input", "1.6 First Introduction to C", "1.8 Memoization", "1.9 Mutation in C", "1.11 Boxes in C", "1.12 Advanced mutation", "1.13 Aliasing in C", "1.14 Memory and vectors", "1.15 Vectors in Racket", "1.16 Arrays in C", "1.18 ADTs in C; Amortized Analysis", "2 SIMPL: a simple imperative language", "2.1 Syntax and informal semantics", "2.2 Examples in several languages", "2.3 Formal semantics", "2.5 Proving imperative programs correct", "A primitive imperative language", "3.1 A primitive imperative language", "3.2 The PRIMPL simulator", "3.4 The SIMPL to A-PRIMPL compiler", "3.6 Strings in C", "3.7 Adding functions to SIMPL", "3.8 Adding both arrays and functions to SIMPL", "3.9 Implementing lists in PRIMPL", "4 MMIX: a realistic instruction set", "4.1 A more realistic processor", "4.2 The MMIX architecture", "4.2.1 Branches and Jumps", "4.2.2 Example", "4.2.3 Software Interrupts", "4.2.5 A Problem with Branches and Jumps", "4.4 Towards a SIMPL to MMIX compiler", "5.1 Storing primitive values", "5.3 Managing memory", "5.4 Structural and pointer equality", "5.5 Function application in a Racket interpreter", "5.7 Justifying the cost of Racket primitives", "5.8 Moving towards implementation in an imperative language", "6.2 Zippers", "6.3 A continuation-passing interpreter", "6.6.2 Mark-and-sweep", "6.6.3 Copying garbage collection", "6.7 Heterogeneous Data in C", "6.8 Multidimensional Arrays in C", "6.10 Variable-length Argument Lists", "7.1 Continuation-passing style", "7.2 Exception handling", "7.3 Undelimited continuations", "7.4 Delimited continuations", "7.5 Racket\u2019s implementation of continuations", "In CS 146, we will examine the imperative paradigm, and compare and contrast the way that efficient algorithms and data structures are designed in imperative and functional languages.", "Racket is a laboratory for current research on aspects of functional programming languages, and we will continue to look at interesting topics in this area, perhaps at the cost of some coherency in the flow of material.", "They will not be due each week on the same day, as is common in the other first-year CS courses and the first-year Math courses.", "Assignment questions are the main way to reinforce and deepen your understanding of the concepts and skills discussed in lecture.", "You will submit program files electronically to the Marmoset system , which runs tests on your code and informs you of the results fairly rapidly.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "(Please also note that we may use the trends in a student's submission history to estimate the likelihood of other forms of cheating as well.)", "Library for research-based assignments"]}, {"course_id": 8, "course_code": "CS 240", "course_name": "CS240 - Data Structures and Data Management (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Data Structures and Data Management Winter 2025", "10:00AM - 11:20AM RCH 112", "11:30AM -", "10:30AM - 11:20AM MC 4040", "11:30AM - 12:20PM MC 4040", "Email: oveksler@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "All of Tom's consulting hours are in-person in MC 4065.", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Instructional Support Coordinator: Karen Anderson", "Email: kaanders@uwaterloo.ca", "Introduction to widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms.", "CS 240: Data Structures and Data Management", "This course introduces widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms.", "Analyze, apply, and use various data structures and data-management techniques in a variety of applications", "Perform rigorous complexity analyses of simple algorithms and data structures, which includes writing correct mathematical proofs on inductively-defined structures and solving simple recurrence relations", "Select a good data structure to solve a specific algorithmic problem", "Apply data structures correctly and efficiently in one or more high-level programming languages, including C++", "Audience", "Successors: Most third-year CS major courses", "Conflicts: Other courses that seriously consider efficiency and correctness of fundamental data structures and their algorithms", "Analytical:", "Define and explain order notation; perform complexity analyses of simple algorithms", "Perform basic computations of discrete probability and expectation", "Use mathematical induction on recursively defined structures, including finding simple errors in inductive arguments", "Prove simple properties of program fragments correct through the use of pre-conditions and post-conditions for loops and recursive calls", "Computational and algorithmic:", "Design, implement, test, and debug C++ programs to solve problems requiring hundreds of lines of code", "Define the ADTs for stacks and queues; write efficient implementations in C/C++", "Describe tree structures, including binary search trees and multi-way trees; use these structures in C/C++ programs", "Describe basic sorting algorithms (including Quicksort) and implement them in C/C++", "Perform rigorous asymptotic analyses of simple algorithms and express the result using order notation; compare algorithms based on their asymptotic complexity; and prove formal results involving order notation", "Apply the priority-queue ADT to solve various application problems, implement a priority queue using heaps, and analyze the complexity of common implementations of heap operations", "Develop best-, worst- and average-case analyses of sorting algorithms, including Quicksort, and explain the ramifications of these analyses in practice; explain the basic principles of randomized algorithms and their potential advantages, specifically in the case of Quicksort; explain the difference between comparison-based sorting and non-comparison-based sorting algorithms, and when and why the latter may run faster; and apply sorting-based techniques to algorithmic problems, such as elimination of duplicates", "Explain the advantages and disadvantages of various hashing techniques; identify the best hashing techniques to use in a particular application scenario; and recognize when hashing techniques are preferable to other dictionary implementations", "Design data structures for real-world data (where keys are often inherently multidimensional) in such a way that common operations (including range search) can be implemented efficiently", "Design special data structures that can efficiently store and process words and strings, and select and apply a suitable technique for data compression in a specific application scenario", "Introduction and review (3 hours)", "Basic computer model: the random-access machine", "Runtime of an algorithm: worst-case, best-case, and average-case", "Review of stacks and queues", "Priority queue ADT and simple implementations", "Sorting and analysis of randomized algorithms (5 hours)", "Quicksort (non-randomized): worst-case, best-case, and average-case complexity", "Randomized quicksort and its analysis; application to selection and its analysis", "Lower bound on comparison-based sorting", "Non-comparison-based sorting algorithms (e.g., Counting Sort and Radix Sort)", "Dictionary ADT and simple implementations", "Binary search trees (insert and delete operations and analysis)", "Key-indexed search, simple hash functions", "Range search in a binary search tree", "Algorithms and data structures for text processing (8 hours)", "Sometimes these include animations/overlays, in case of which there will be both a Display version (with them) and a Print version (omitting them, but otherwise the same content).", "The slides for each module will be posted as the term progresses.", "Module 1 Introduction and Asymptotic Analysis M1.pdf", "Module 3 Sorting, Average-Case and Randomized Algorithms M3.pdf", "Optional: Goodrich & Tamassia   8.3", "Module 8 Range-Searching in Dictionaries of Points   Course notes Chapter 8", "A0.tex", "A1.tex", "The following books are on reserve in the DC library for reference and additional resources:", "Algorithm Design and Applications (2015)", "Also covers cuckoo hashing.", "Sedgewick] Algorithms in C++, Third Edition (1998)", "Computational Geometry: Algorithms and Applications", "CLRS] Introduction to Algorithms, 2nd edition (2001)", "Introduction to Algorithms, 2nd edition is also avaliable online (in campus).", "This website will be the primary means of communication and distribution of materials for the course.", "The course uses a number of different tools for distributing information and receiving submissions.", "These are not worth credit, but may help you in self-testing your understanding of the material.", "Only one programming question can be shifted to the final exam.", "If more than this has verification for non-submittal, then it will be considered on a case-by-case basis.", "A student with a medical reason may not be granted an INC because they have not performed sufficiently well during the academic term.", "An INC will be granted ONLY if there is a strong reason for missing the exam (generally a serious medical issue verified by a doctor's note) AND a satisfactory performance during the term (both assignments and midterm).", "Academic Dishonesty", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "The first criterion for marking is the correctness, the second criterion is efficiency.", "describe the main idea first in words,", "In the case that you are using facts stated in lectures/modules, be sure to cite where you got them from.)", "Files should be named .cpp, where the specific file name will be specified in the assignment.", "You should include sufficiently many comments in your code that the main ideas of design and correctness are clear.", "One-line changes: In the case you passed the public test, and failed some secret tests, if your program works with a one line change, then we may accept it for remarking and give some marks after deducting a penalty (typically 10-20% of the programming question).", "Here are some ways to create PDF files:", "Create your solution in LaTeX. LaTeX is a document preparation system that uses a mark-up language to write/create and co-ordinate different parts of documents, including diagrams and was introduced in Assignment 0.", "The following are least preferred methods since the results may be hard for markers to read and/or the files may be too large.", "Submitting a Re-Mark Request: Please email cs240@uwaterloo.ca in order to submit a request.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 9, "course_code": "CS 240E", "course_name": "CS240E - Data Structures and Data Management (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Data Structures and Data Management (Enriched)", "10:00AM - 11:20AM MC 4041", "Email: biedl [", "Email: cs240e", "All of Tom's consulting hours are in-person in MC 4065.", "Email: cs240", "Instructional Support Coordinator: Karen Anderson", "Email: kaanders [", "Module 1 Introduction and Asymptotic Analysis Course notes Chapter 1 (skip 1.5 for now)", "(updated)  Sorting, Average-Case and Randomized Algorithms Course notes Chapter 3 (and parts of 1.5)", "Optional: Goodrich & Tamassia   8.3", "Module 8 Range-Searching in Dictionaries of Points Course notes Chapter 8", "Tutorial 3 Friday, January 24 Average-case vs expected, sorting", "The following books are on reserve in the DC library for reference and additional resources:", "Algorithm Design and Applications (2015)", "Also covers cuckoo hashing.", "Sedgewick] Algorithms in C++, Third Edition (1998)", "Computational Geometry: Algorithms and Applications", "CLRS] Introduction to Algorithms, 2nd edition (2001)", "Introduction to Algorithms, 2nd edition is also avaliable online (in campus).", "Only one programming question can be shifted to the final exam.", "If more than this has verification for non-submittal, then it will be considered on a case-by-case basis.", "A student with a medical reason may not be granted an INC because they have not performed sufficiently well during the academic term.", "An INC will be granted ONLY if there is a strong reason for missing the exam (generally a serious medical issue verified by a doctor's note) AND a satisfactory performance during the term (both assignments and midterm).", "Academic Dishonesty", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "Communication & Resources in CS 240E", "CS240E uses a variety of platforms in order to communicate and provide course materials to students.", "If your issue is confidential, but not specifically for one member of the course personnel, then a better option might be a private post to piazza.", "You can ignore these if you are comfortable with the material.", "Written assignments are submitted electronically using Crowdmark - a web-based submission and marking system.", "To submit files for Assignments, follow these instructions:", "Under each question, you can select files to add them to your submission for that question.", "You can submit and re-submit files as many times as you want before the deadline.", "Logging In", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 10, "course_code": "CS 241", "course_name": "CS241 - Foundations of Sequential Programs (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["ISA", "Yiwen Dong", "ISC", "The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages.", "Write short machine- and assembly-language programs to perform simple data manipulation", "Write a basic assembler supporting labels", "Give formal specifications for regular languages, including regular expressions and finite-state machines", "Write a scanner capable of dealing with a typical high-level programming language (given the specification)", "Give a grammar for a context-free language and create derivations for strings in a context-free language", "Perform context-sensitive analysis including type checking for high-level languages", "Write a simple code generator for an imperative language, i.e., one doing little or no optimization", "Apply appropriate design decisions when programming in C/C++ based on a detailed understanding of the way memory is used by a running C/C++ program", "Week 1: Introduction and Modules 1, 2", "20M+40F", "This course includes the independent development and practice of specific skills, such as development of large software artifacts.", "Library for research-based assignments"]}, {"course_id": 11, "course_code": "CS 241E", "course_name": "CS241E - Foundations of Sequential Programs (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["03:30PM - 04:20PM MC 1056", "02:30PM - 03:20PM", "07:00PM - 08:50PM", "The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages.", "Non-enriched version: Any CS 241E student may switch to the regular version of CS 241 during the first two weeks of lectures.", "Machine-level implementation of high-level language features (9 hours)", "Introduction to formal languages.", "Regular languages, regular expressions and finite state machines.", "Semantic Analysis and Code generation (6 hours)", "Dynamic Memory Allocation.", "Write short machine- and assembly-language programs to perform simple data manipulation.", "Write a basic assembler supporting labels.", "Give formal specifications for regular languages, including regular expressions and bubble diagrams.", "Write a scanner capable of dealing with a typical high-level programming language (given the specification).", "Give a grammar for a context-free language and, given a grammar, produce a derivation for a given string in the language.", "Write a simple code generator for an imperative language, i.e., one doing little or no optimization.", "Apply appropriate design decisions when programming in C/C++ based on a detailed understanding of the way memory is used by a running C/C++ program.", "I Sept. 5 Introduction", "A link to the Marmoset system and instructions for using it may be found on the course web page.", "Intellectual property includes items such as:", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as implementing and debugging a compiler.", "Library for research-based assignments"]}, {"course_id": 12, "course_code": "CS 245", "course_name": "CS245 - Logic and Computation (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Logic and Computation Winter 2025", "10:30AM - 11:20AM MC 4041", "Formalizing the notions of correct and incorrect reasoning, defining what is computable, and exploring the limits of computation.", "The course covers a variety of topics related to logic and computation that are required as background for other courses in Computer Science.", "It differs both in tone and content from a logic course one would typically find in a mathematics program.", "Develop mathematical reasoning skills", "Improve understanding of propositional and first-order logic, including key notions, such as: expressing natural language statements as logical formulas, distinguishing between correct and incorrect reasoning (between valid and invalid logical arguments), constructing a formal proof, distinguishing between syntax and semantics", "Explore the limits of computers, including decidability and undecidability", "Introduction", "Structural induction and its use in proving statements about formulas", "Adequate sets of connectives", "Soundness and completeness of formal deduction", "Applications of propositional logic to computer science, such as: Automated proofs: Resolution, Davis-Putnam Procedure; Hardware and software veri\ufb01cation", "First-Order Logic", "Limitations of propositional logic, and the necessity of first-order logic for reasoning about objects and properties", "Quanti\ufb01ers, universe of discourse, translation between English and first-order logic formulas", "Syntax of first-order logic: terms, formulas", "Semantics of first-order logic: valuations", "Proving argument validity in first-order logic (semantically)", "Formal deduction in first-order logic; Proving argument validity by formal deduction (syntactically)", "Applications of first-order logic to computer science, such as: Automated theorem provers and veri\ufb01ers; Databases", "Decidability and Peano Arithmetic", "Turing Machine as a model of computation", "Undecidability: Basic notions, undecidability of the Halting Problem and other decision problems", "The Peano axioms for number theory (including the induction axiom), undecidability of Peano Arithmetic", "An Important Application of Logic to Computer Science", "Hoare triples", "partial and total correctness", "Formalize English sentences into properly formed formulas in the propositional and first-order logic and, conversely, interpret such formulas in English", "Formalize the notion of correct reasoning and proof, and be able to construct formal proofs", "Realize the limitation of formal proof systems", "Understand the applications of logic to computer science", "This means that you must decide whether to exercise your option to submit late before the deadline, and refrain from making a partial submission in this case.", "There will be a marked quiz due in each week when there will not be a Crowdmark assignment due or a mid-term examination.", "This course includes the independent development and practice of specific skills, including writing numerous proofs using numerous abstract definitions.", "Library for research-based assignments"]}, {"course_id": 13, "course_code": "CS 245E", "course_name": "CS245E - Logic and Computation (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["10:00AM - 11:20AM MC 2034", "Tuesday -", "This includes:", "Basic sematic notions:", "Truth tables", "A formal proof system for Propositional logic", "Soundness and completeness theorems for the proof system", "Basic sematic notions", "Structures for a vocabulary", "Logical truths and logical implications", "Translations between FOL formulas and English and mathematical statements.", "A formal proof system for Predicate logic", "Soundness theorem for the proof system", "However, the focus of this version of the course is more on fundamental and mathematical concepts (on the expense of developing technical skills, such as designing formal proofs).", "We will use propositional logic as a main tool for demonstration key logical concepts such as", "Structural induction its justification and many applications.", "soundness and completeness theorems", "the expressive power of the logic (what can and what cannot be expressed).", "We will revisit these topics for first order logic.", "Finally, we will discuss applications of logic to computer science, in particular showing limitations of computations (undesirability)."]}, {"course_id": 14, "course_code": "CS 246", "course_name": "CS246 - Object-Oriented Software Development (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Object-Oriented Software Development Winter 2025", "10:00AM - 11:20AM MC 1056", "10:30AM - 11:20AM MC 3003", "11:30AM - 12:20PM MC 3003", "Tuesday -", "Ross Evans rpevans@uwaterloo.ca", "Introduction to object-oriented programming and to tools and techniques for software development.", "Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites.", "This course introduces students to object-oriented programming in C++ to facilitate designing, coding, debugging, testing, and documenting medium-sized programs.", "Students learn to read a specification and design software to implement it.", "Important skills are selecting appropriate data structures and control structures, writing reusable code, reusing existing code, understanding basic performance issues, developing debugging skills, and learning to test a program.", "C++", "Introduction to C++", "I/O and Strings", "Basic language constructs and Functions", "Exceptions", "Introduction to Templates", "Exception safety", "Template functions and algorithms", "Object-Oriented Programming", "UML class models", "Constructors and Destructors", "Encapsulation", "Inheritance", "Design patterns: Iterator, Observer, Decorator, Factory method, Template method, Non-virtual interface (NVI), and the Pimpl idiom", "Inheritance: vtables", "Multiple inheritance", "Design quality", "MVC (model-view-controller) architecture", "Design, implement, test, and debug C++ programs to solve problems requiring hundreds of lines of code, making appropriate use of", "types, variables, arrays, strings, and dynamic memory; loops, conditionals, and other control structures; structures, unions, and enumerations; procedures and functions; the preprocessor; formatted and unformatted I/O", "a subset of the STL, including vector, list, and map", "assertions and exceptions", "test suites for regression testing, white and black box testing", "structured programming, incremental development", "interface design, abstractions, information hiding, cohesion and coupling", "a subset of UML to specify classes, objects and relationships among them", "a selection of design patterns", "Explain the following properties of the memory model used in C++, including their impact on time and space efficiency when designing code: bytes vs. words, memory as an array, run-time stack and stack frames, memory allocation on the heap vs. automatic allocation on the stack, pointers as memory addresses, the representation of objects in memory", "You must complete A0 in order to receive marks for the rest of the course.", "A1 Basic C++ Monday, January 20 Monday, January 27 5", "A2 Introduction to OOP Monday, February 3 Monday, February 10 6", "A4 Design Patterns Monday, March 10 Monday, March 17 8", "Note: Marmoset is not a compiler!", "Do not submit C++ code to Marmoset, without first attempting to compile it yourself.", "Students from different sections can be in the same group.", "Working on a group is an important learning experience for software development in a team.", "Students in a group will be responsible for forming and managing the group.", "Please be very careful in selecting your group as there are always groups that end up having major issues every term.", "Exams", "Examination Date Final Grade Weight", "Each weekly set of problems completed succesfully can be used to replace 0.5% of the final grade from the final exam.", "In the case where both a midterm and final exam can be held, the final course grade will be calculated from the following components and weights:", "To pass the course, you must satisfy these three conditions:", "A grade of at least 45% on the weighted average of assignments A1-A4", "Assignments1to4  = (A1*5 + A2*6 + A3*6 + A4*8) / 25", "Normal = A1*5 + A2*6 + A3*6 + A4*8 + A5*15 + Midterm*20 + Final*(40-0.5*TutorialsCompleted) + 0.5*TutorialsCompleted", "if (MidtermInPerson==TRUE && FinalInPerson==TRUE)", "else", "if (MidtermInPerson==FALSE && FinalInPerson==TRUE)", "else", "if (MidtermInPerson==TRUE && FinalInPerson==FALSE)", "else", "if (MidtermInPerson==FALSE && FinalInPerson==FALSE)", "else", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments"]}, {"course_id": 15, "course_code": "CS 246E", "course_name": "CS246E - Object-Oriented Software Development (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Object-Oriented Software Development (Enriched)", "Tuesday -", "CS246 description: Introduction to object-oriented programming and to tools and techniques for software development.", "Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites.)", "functions and classes as the basic building blocks for abstractions", "function and class templates; exception safety", "object-oriented design principles; design patterns", "language features in combination", "Software library development for general client use.", "Principles of object-oriented software design.", "A selection of software design patterns.", "A1     10%", "Office hours: the list of office hours can be found at https://student.cs.uwaterloo.ca/~cs246e/F24/officehours.shtml", "Note: Marmoset is not a compiler!", "Please do not submit C++ code to Marmoset without first attempting to compile it yourself.", "The release test for a problem gives you the result of running your program on one basic test case (usually a case that appears in the assignment specification).", "So be sure to test your code thoroughly, so that you pass as many of our secret tests as possible.", "Testing", "Hand-Marking", "Note that correctly-working code is only one component of an assignment mark.", "Intellectual property includes items such as:", "CAN I POST MY CODE ONLINE?", "The second complicating factor concerns the question of who actually owns assignment solutions.", "The instructor supplies the question, a framework for the solution (including rules, guidelines, and possibly some starter code or libraries) and has in mind the general structure of what a correct solution ought to look like.", "the instructor(s) may permit posting of only those portions of assignments that were not provided as starter code;", "The instructors' policy for a given offering of a course will be stated in the course outline.", "If you wish to share your code with potential employers, and your instructor does not permit you to publicly post your solutions, you may host your code in a private repository, and provide a password to potential employers (for example, on your resume).", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 16, "course_code": "CS 251", "course_name": "CS251 - Computer Organization and Design (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "Computer Organization and Design Winter 2025", "11:30AM -", "RCH 307", "10:30AM - 11:20AM EV3 1408", "Silvia Zhang cs251@uwaterloo.ca", "Basics of digital logic design.", "Data representation and manipulation.", "Basics of processor design.", "This course enables students to develop an accurate mental model of the architecture and organization of physical computers and it introduces them to theoretical and practical concepts relevant to the structure and design of modern digital computers.", "Design simple combinational and sequential hardware at the logic gate level in order to implement simple algorithms and computations, such as addition, multiplication, and data-path control for processors.", "Describe number systems used by computer hardware, including IEEE floating point and two's complement.", "Analyze how machine language is executed by hardware, and describe a simple pipelined processor architecture for executing a RISC machine language.", "Explain basic cache and virtual-memory architectures, and how they can impact performance.", "Introduction and ARM (~3 hours)", "Combinational logic and basic components.", "Basic Processor Design (~9 hours)", "Processor design using single-cycle control.", "Multi-cycle control.", "Virtual memory.", "Multi-processor systems and core processors.", "Patterson and Hennessy: \"Computer Organization and Design\".", "Students registering their clicker for other sections will receive a grade of zero on clicker questions.", "else", "Notice of Recording", "In general, assignments submitted late and without an approved extension by the course ISC will not be accepted and will be given a grade of zero.", "If a student makes a short-term 48-hour declaration, they may contact the course ISC to obtain a 48-hour extension.", "Note that penalties are significantly higher for exams and for repeat offenders.", "Discussion of assignments is allowed, but each student must hand in their own copy of the assignment and word-for-word copying is not allowed.", "In-Class Discipline", "A student who is found to be disruptive during lectures will be given only one verbal warning for the term.", "Students should attend the section they're enrolled in and only the section they're enrolled in", "Further, a weekly quiz will be given and used in place of clickers in the marking scheme.", "Dropping lowest clickers marks, lowest quiz score", "Online Exams", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:"]}, {"course_id": 18, "course_code": "MATH 127", "course_name": "MATH127 - Calculus 1 for the Sciences (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Functions of a real variable: powers, rational functions, trigonometric, exponential and logarithmic functions, their properties and inverses.", "Intuitive discussion of limits and continuity.", "Definition and interpretation of the derivative, derivatives of elementary functions, derivative rules and applications.", "Fundamental theorems and antiderivatives; change of variable.", "have extensive familiarity with a number of basic but fundamental models that showcase the role of calculus in their respective disciplines.", "have experience describing and interpreting mathematical procedures in precise language (i.e., in complete sentences) within the context of short but formal project reports.", "If you are unable to acquire one of these calculators, you must contact your instructor in the first week or two of the course so an equivalent alternative can be identified and added to the exam proctors' list of permitted aids."]}, {"course_id": 19, "course_code": "MATH 137", "course_name": "MATH137 - Calculus 1 for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "10:30AM - 11:20AM MC 4059", "Monday -", "Monday", "07:00PM - 08:50PM", "Absolute values and inequalities.", "Sequences and their limits.", "Introduction to series.", "Limits of functions and continuity.", "Applications of the Mean Value theorem, Taylor polynomials and Taylor's theorem, Big-O notation.", "We will study these ideas as they relate to sequences and functions.", "First, we will examine sequences and what it means for one to converge.", "Next, we will use our knowledge of sequences to discuss functions, including limits and derivatives.", "Write clear and well-organized mathematical solutions and proofs.", "Solve problems in Calculus through logical thinking and careful analysis.", "Determine if a recursively-defined sequence converges and prove it using mathematical induction.", "Compute the limits of various functions using both the formal definition of the limit, arithmetic rules for limits,and l'Hopital's Rule.", "Find solutions to optimization and related rates problems.", "Sketch curves by first analyzing a given function and its derivatives.", "4: Jan 27 - 31 2.1 - 2.2 Functions and their Limits, Sequential Characterization of Functions, Squeeze Theorem Quiz 3", "7: Mar 3 - 7 3.5 -  3.7 Linear Approximation, Newton's Method, IFT Quiz 6", "8: Mar 10 - 14 3.8 - 4.2 Implicit and Logarithmic Differentiation, Related Rates, Local & Global Extrema, EVT Quiz 7", "9: Mar 17 - 21 \u2021 4.3 - 4.6 MVT and its Applications, Shape of a Function via 1st and 2nd Derivatives Quiz 8", "FE: Mar 31 - Apr 4 4.9 - 4.10 Curve Sketching, Optimization Quiz 10", "Notice of Recording", "Phone: 519-884-0000 extension 213", "Please let us", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 20, "course_code": "MATH 147", "course_name": "MATH147 - Calculus 1 (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["11:30AM - 12:20PM MC 4059", "04:30PM - 05:20PM", "Monday -", "Monday", "07:00PM - 08:50PM", "Introduction to mathematical proofs: Week 1;", "2. Sequences and Limits: Weeks 2 \u2013 4;", "3. Functions and Continuity: Weeks 5\u20138;", "Introduction to Real Analysis, by R. Bartle and D. Sherbert No", "Any missed assignment will be given a score of zero.", "For any missed examination, you must have a valid reason and appropriate supporting documentation.", "In case VIF or STAD covers the midterm, the midterm may be excused, and its weight may be transferred to the final exam."]}, {"course_id": 21, "course_code": "MATH 128", "course_name": "MATH128 - Calculus 2 for the Sciences (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["F. Dunbar", "Instructor: Fiona Dunbar", "Separable and linear first order differential equations and applications.", "Introduction to sequences.", "Parametric/vector representation of curves; particle motion and arc length.", "Polar coordinates in the plane.", "use integration techniques to solve linear first-order equations and improper integrals,", "visualize and approximate higher-order differential equations,", "interpret and derive power series representation of a function,", "use the concept of linear approximation and apply it to Taylor polynomials as well as use techniques for quantifying approximation error,", "understand the relationship between vector-valued functions, polar coordinates, and applications of integration to arc lengths.", "If you are unable to acquire one of these calculators, you must contact your instructor in the first week or two of the course so an equivalent alternative can be identified and added to the exam proctors' list of permitted aids.", "This course includes the independent development and practice of specific skills, such as integration techniques, visualizing/approximating higher-order differential equations, deriving power series, linear approximation and applying to Taylor polynomials, using vector-valued functions, polar coordinates, and applications of integration to arc lengths.", "Library for research-based assignments"]}, {"course_id": 22, "course_code": "MATH 138", "course_name": "MATH138 - Calculus 2 for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "08:30AM - 09:20AM", "09:30AM - 10:20AM MC 4059", "10:30AM - 11:20AM MC 4061", "E. Bembenek", "11:30AM - 12:20PM MC 4021", "cpthowel@uwaterloo.ca", "E. Yalcin", "02:30PM - 03:20PM", "08:30AM - 09:20AM QNC 2502", "Introduction to the Riemann integral and approximations.", "Antiderivatives and the fundamental theorem of calculus.", "Applications of the integral.", "Improper integrals.", "Linear and separable differential equations and applications.", "Binomial series, functions defined as power series and Taylor series.", "The goal of this course is to further expand your knowledge of calculus and its applications for one-variable functions.", "First, we will explore areas under curves and the Fundamental Theorem of Calculus, integration techniques, and applications of integration including finding the area between two curves, volumes of solids of revolution, and the average value of a function.", "We will study how to solve separable differential equations and linear differential equations as well as their applications to population growth and Newton's Law of Cooling.", "Write clear and well-organized mathematical solutions and proofs.", "Solve problems in Calculus through logical thinking and careful analysis.", "Set up and evaluate Riemann integrals for simple functions", "Apply various integration techniques including change of variable, integration by parts, trigonometric substitution, and partial fractions.", "Solve separable and first-order linear differential equations.", "Compute the radius and interval of convergence for power series.", "Compute Taylor Polynomials and Taylor series for many elementary functions.", "1: Jan 6 - 10 1.1 - 1.3 Riemann Sums, Definite Integrals, Average Value", "5: Feb 3 - 7 2.1 - 2.2.2, 2.3 Intro to DEs, Direction Fields, Separable and First-Order Linear DEs Quiz 4", "8: Mar 10 - 14 4.1 - 4.3 Intro to Power Series, Differentiation & Integration of Power Series Quiz 7", "FE: Mar 31 - Apr 4 4.8 Big-O Notation Quiz 10", "Notice of Recording", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 23, "course_code": "MATH 148", "course_name": "MATH148 - Calculus 2 (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["08:30AM - 09:20AM", "Instructor: Michael Brannan", "E-mail: michael.brannan@uwaterloo.ca", "Week of", "3 Jan. 20 Fundamental Theorem of Calculus  A1", "4 Jan. 27 Techniques of Integration  A2", "5 Feb. 3 More Techniques and Improper Integration", "6 Feb. 10 Applications of Integration A3", "8 Mar. 3 Convergence Tests A4", "10 Mar 17 Sequences and Series of Functions A5", "11 Mar. 24 Power Series", "12 Mar. 31 Differential Equations A6", "Principles of Mathematical Analysis."]}, {"course_id": 24, "course_code": "MATH 135", "course_name": "MATH135 - Algebra for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Algebra for Honours Mathematics Winter 2025", "An introduction to the language of mathematics and proof techniques through a study of the basic algebraic systems of mathematics: the integers, the integers modulo n, the rational numbers, the real numbers, the complex numbers and polynomials.", "Algebra for Honours Mathematics is a study of the basic number systems of mathematics.", "The course has two themes: Number systems and Mathematical language.", "The study of number systems will feel more familiar and will cover the integers, the integers modulo n, the complex numbers and polynomials.", "Gain practice in formulating conjectures and discovering proofs.", "Understand basic algebraic systems of mathematics: the integers, the integers modulo n, the rational numbers, the real numbers, the complex numbers and polynomials.", "MATH 135 Course Notes: Language and Proofs in Algebra, An Introduction Please see the Course Notes page in LEARN for the pdf No Free", "Generative AI: This course includes the independent development and practice of specific skills, such as proof discovery and proof writing.", "Library for research-based assignments", "In particular:"]}, {"course_id": 25, "course_code": "MATH 145", "course_name": "MATH145 - Algebra (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["02:30PM - 03:20PM", "E-mail: bmadill@uwaterloo.ca", "Topics include rings and subrings, integral domains and fields, homomorphism and isomorphism, quotient rings and modular arithmetic, isomorphism and the Chinese Remainder Theorem, irreducibility in integral domains, and field extensions.", "Week of", "1 Sept 5* Rings and Subrings", "3 Sept 19 Integral Domains and Fields A1", "7 Oct 24 FIT and CRT A3", "9 Nov 7 GCD's A4", "11 Nov 21 Field Extensions"]}, {"course_id": 26, "course_code": "MATH 136", "course_name": "MATH136 - Linear Algebra 1 for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "Linear Algebra 1 for Honours Mathematics Winter 2025", "08:30AM - 09:20AM MC 4061", "09:30AM - 10:20AM MC 4061", "10:30AM - 11:20AM QNC 2502", "11:30AM - 12:20PM MC 2065", "02:30PM - 03:20PM", "03:30PM - 04:20PM QNC 2502", "11:30AM - 12:20PM MC 4061", "10:30AM - 11:20AM B1 271", "Systems of linear equations, matrix algebra, elementary matrices, computational issues.", "Real n-space, vector spaces and subspaces, basis and dimension, rank of a matrix, linear transformations, and matrix representations.", "Master computational aspects of linear algebra, including matrix and vectors operations", "Solve systems of m linear equations in n unknowns", "Evaluate the inverse of a square matrix, when it exists", "Obtain the matrix representation of a linear transformation", "Evaluate the determinant of a square matrix", "Change co-ordinates and bases, and understand the effect on matrix representations", "Become familiar with operations and properties of abstract vector spaces", "While collaboration in understanding the material is encouraged, the work submitted must be your own, written independently.", "For example, submitting 60 minutes late will result in a maximum possible score of 40%, assuming a perfect score.", "Accommodation Requests", "Notice of Recording", "Allocate time appropriately towards the completion of the assignment which reduces the procrastination and cramming cycle", "Appreciate the importance of reviewing marked assignments", "In particular:", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as reading and writing proofs.", "Library for research-based assignments"]}, {"course_id": 27, "course_code": "MATH 146", "course_name": "MATH146 - Linear Algebra 1 (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Linear Algebra 1 (Advanced Level)", "Email: karigiannis@uwaterloo.ca", "This course is a rigorous treatment of the theory of finite dimensional vector spaces over an arbitrary field.", "We also cover the theory of determinants over an arbitrary commutative ring with identity, and some aspects of the theory of polynomials in one variable over a field.", "The ultimate goal is the Primary Decomposition Theorem, which characterizes a linear operator on a finite dimensional vector space in terms of invariant subspaces annihilated by the primary factors of its minimal polynomial.", "We will cover a large amount of difficult material at a fast pace.", "Understand and apply the concepts of the theory of abstract vector spaces and linear operators on finite-dimensional vector spaces.", "fields; systems of linear equations; matrices; row-reduced echelon form; matrix algebra; invertible matrices", "vector spaces; subspaces; bases and dimension; coordinates; row equivalence", "algebra of linear maps; isomorphism; representations by matrices; dual space; transpose of a linear map", "commutative rings; existence and uniqueness of determinants; multilinear maps; the exterior algebra", "eigenvalues; annihilating polynomials; invariant subspaces; simultaneous triangulation and diagonalization", "Much (but not all) of my lectures will closely follow the first six chapters of this book:", "\u201cLinear Algebra: Second Edition\u201d by Kenneth Hoffman and Ray Kunze; Prentice Hall, 1971.", "\u201cLinear Algebra: Fourth Edition\u201d by Friedberg, Insel, and Spence; Prentice-Hall, 2003.", "The assignments are an integral part of your evaluation in this course and I encourage everyone to take them very seriously.", "There will be no opportunity for a make-up midterm test."]}, {"course_id": 28, "course_code": "MATH 239", "course_name": "MATH239 - Introduction to Combinatorics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Introduction to Combinatorics Winter 2025", "11:30AM - 12:20PM MC 4059", "09:30AM - 10:20AM MC 4021", "P. Nelson", "08:30AM - 09:20AM QNC 1502", "S. Pfannerer-Mittas", "10:30AM - 11:20AM MC 4058", "11:30AM - 12:20PM MC 4058", "09:30AM - 10:20AM MC 4042", "02:30PM - 03:20PM", "10:30AM - 11:20AM PHY 150", "04:30PM - 05:20PM", "You should have no reason to contact them directly, but you can find their email addresses through Learn.", "First name Last name", "Guilherme Zeus Dantas E Moura", "Theodore Morrison", "Matthew Kroeker", "Introduction to graph theory: colourings, matchings, connectivity, planarity.", "Introduction to combinatorial analysis: generating series, recurrence relations, binary strings, plane trees.", "MATH 239 is an introduction to combinatorics with a particular focus on counting techniques and graph theory.", "extract coefficients from rational generating series", "find maximum matchings in bipartite graphs", "understand and use the concepts of paths, cycles, trees, bipartiteness, and planarity in graph theory", "be comfortable writing proofs for results on discrete objects", "2 Jan 13,15,17 Generating series, Sum and Product lemmas, Negative Binomial Theorem, Integer Compositions Part I: 2.1-2.3", "5 Feb 3,5,7 Solving linear recurrence relations, Binary trees, irrational generating series Part I: 4.1, 4.2, 4.4 Assignment 4, Feb 7", "6 Feb 10,12,14 Introduction to graph theory Part II: 4.1-4.6 Assignment 5, Feb 14", "Grading scheme A", "Students are encouraged to collaborate on solving the questions but each student must write their own solutions independently in their own words.", "Please inform of us these at the start of the course.", "Library for research-based assignments"]}, {"course_id": 29, "course_code": "MATH 249", "course_name": "MATH249 - Introduction to Combinatorics (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Introduction to Combinatorics (Advanced Level)", "09:30AM - 10:20AM MC 2017", "For graph theory, while we will focus on the same topics covered in MATH 239 (planarity and bipartite matching), our coverage of those topics will differ substantially in depth and in the techniques that we employ; in particular, we will see striking applications of algebra.", "extract coefficients from rational generating series", "find maximum matchings in bipartite graphs", "understand and use the concepts of paths, cycles, trees, bipartiteness, and planarity in graph theory", "be comfortable writing proofs for results on discrete objects", "2 Jan 13,15,17 Generating series, Sum and Product lemmas, Negative Binomial Theorem, Integer Compositions Part I: 2.1-2.3", "5 Feb 3,5,7 Solving linear recurrence relations, Binary trees, irrational generating series Part I: 4.1, 4.2, 4.4 Assignment 4, Feb 7", "6 Feb 10,12,14 Introduction to graph theory Part II: 4.1-4.6 Assignment 5, Feb 14", "Grading scheme A", "Students are encouraged to collaborate on solving the questions but each student must write their own solutions independently in their own words.", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 30, "course_code": "STAT 230", "course_name": "STAT230 - Probability (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["03:30PM - 04:20PM MC 4045", "09:30AM - 10:20AM MC 4045", "02:30PM - 03:20PM", "03:30PM - 04:20PM MC 2017", "08:30AM - 09:20AM", "Pavel Shuldiner; E-mail: pavel.shuldiner@uwaterloo.ca; M3 4108", "Come with well-organized questions to make the best use of your time.", "Requests must be emailed to sasugradadv@uwaterloo.ca", "Joint probability functions, marginal probability functions, and conditional probability functions of two or more discrete random variables and functions of random variables are also discussed.", "Post-requisite:", "Define a probability model and determine probabilities of events using counting techniques.", "Define and use probability mass functions, probability density functions, and cumulative distribution functions to determine probabilities of events.", "Use moment generating functions as a tool to determine expected values.", "This learning consists of taking the time to carefully read the lecture notes on your own, ensuring you understand the concepts and steps demonstrated in the lectures to tackle examples, and then solving the end-of-section problems.", "Definitions of Probability", "Mathematical Probability Models", "1.1", "1.2", "Counting in Uniform Probability Models", "Addition and Multiplication Rules for Counting", "Permutations and Combinations", "Counting in Uniform Probability Models", "Addition and Multiplication Rules for Counting", "Permutations and Combinations", "Addition Rules for Unions of Events", "1.3", "2.1", "2.2", "2.3", "Conditional Probability and Product Rules for Intersections of Events", "Probability Mass Functions, Cumulative Distribution Functions", "Functions of Random Variables", "3.2", "Expectation of a Random Variable", "Expectation of a Function of a Random Variable, Properties of Expectation", "Moment Generating Functions", "3.3", "3.4", "3.5", "Basic Terminology and Techniques", "Joint Probability Mass Functions, Marginal Probability Mass Functions", "3.5", "4.1", "Multinomial Distribution", "Linear Combinations of Random Variables", "4.2", "4.4", "Linear Combinations of Random Variables", "Law of Total Expectation", "4.4", "4.5", "4.6", "Law of Total Expectation", "Cumulative Distribution Function, Probability Density Function", "Functions of Random Variables", "4.6", "Expectation of a Random Variable", "Moments of a Distribution, Moment Generating Functions, Mean, Variance, Standard Deviation", "Exponential Distribution", "Normal Distribution", "Exponential Distribution", "Normal Distribution", "Use of the Normal Distribution in Approximations", "Therefore, you should plan to spend between 3 and 6 hours each week in out-of-class learning.", "This learning consists mainly of ensuring you understand the concepts and steps used in class to solve problems and then solving exercises from the Course Notes on your own.", "A 2.5-hour final cumulative examination will be held during the final exam period in April.", "In the case of extenuating circumstances, you must provide sufficient documentation via e-mail to Divya Lala at divya.lala@uwaterloo.ca as soon as possible to verify your absence's circumstances.", "Re-mark Requests:", "Cancellation of In-Person Classes:", "Intellectual property includes items such as:", "Students may not distribute or reproduce these materials for commercial or non-commercial means.", "This course includes the independent development and practice of specific skills for solving real-life problems using introductory probability rules.", "Library for research-based assignments"]}, {"course_id": 32, "course_code": "STAT 231", "course_name": "STAT231 - Statistics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "03:30PM - 04:20PM DC 1350", "02:30PM - 03:20PM", "11:30AM - 12:20PM MC 1085", "03:30PM - 04:20PM", "10:30AM - 11:20AM EIT 1015", "09:30AM - 10:20AM EIT 1015", "Email: aslynko@uwaterloo.ca", "Email: liqun.diao@uwaterloo.ca", "Email: yangjc@uwaterloo.ca", "Email: henan.xu@uwaterloo.ca", "Funmilayo Adeku", "Email: fadeku@uwaterloo.ca", "This course provides a systematic approach to empirical problem solving which will enable students to critically assess the sampling protocol and conclusions of an empirical study including the possible sources of error in the study and whether evidence of a causal relationship can be reasonably concluded.", "The connection between the attributes of a population and the parameters in the named distributions covered in STAT230 will be emphasized.", "Numerical and graphical techniques for summarizing data and checking the fit of a statistical model will be discussed.", "The method of maximum likelihood will be used to obtain point and interval estimates for the parameters of interest as well as testing hypotheses.", "The interpretation of confidence intervals and p-values will be emphasized.", "The Chi-squared and t distributions will be introduced and used to construct confidence intervals and tests of hypotheses including likelihood ratio tests.", "Contingency tables and Gaussian response models including the two sample Gaussian and simple linear regression will be used as examples.", "Course Information Webpage", "Please do not send these questions via email.", "I expect everyone to be respectful to each other, any posts that do not meet the principles in Policy 33: Ethical Behaviour will be removed.", "Email", "Please send emails from uwaterloo.ca email address and include the session number and student ID number.", "Continuity Plans", "Use numerical and graphical summaries of a data set to describe the characteristics of a variate and to check the fit of a statistical model to the data.", "Use the steps of PPDAC to identify both the objectives and possible sources of error in an empirical study, and to critically evaluate the conclusions.", "Identify the connection between attributes of a population and the parameters in the named distributions (Binomial, Poisson, Multinomial, Exponential, Normal).", "Define and use the likelihood function to obtain point estimates of the unknown parameters in a model particularly for the Binomial, Poisson, Multinomial, Exponential and Gaussian (Normal) models.", "Use a pivotal quantity to construct a confidence interval for a parameter in some specific cases, and interpret the confidence interval.", "Use the likelihood function to construct and conduct a test of hypothesis for an unknown parameter in a model.", "Interpret p-values and describe the connection with confidence intervals.", "Define the properties of the Chi-squared and t distribution.", "Define a Gaussian response model including simple linear regression; determine point and interval estimates and conduct tests of hypotheses for the parameters in a Gaussian model.", "Use a Goodness of Fit test to test the fit of a model, independence in a two-way table and equality of proportions for two or more groups", "Describe the importance of randomization and pairing in experimental design and be able to recognize whether a study design allows the researcher to conclude cause and effect.", "This learning consists of taking the time to carefully read the course notes on your own, making sure you understand the concepts and steps demonstrated in the lectures to tackle examples, and then solving the end-of-chapter problems.", "Monday", "Friday", "Welcome", "1.1 Introduction to Statistical Sciences", "1.3 Numerical Data Summaries", "1.3 Graphical Summaries", "1.4 Probability Distributions and Statistical Models", "1.5 Data Analysis and Statistical Inference", "1.6 Introduction to R and RStudio", "2.1 Choosing a Statistical Model", "2.2 Estimation of Parameters", "2.3 Method of Maximum Likelihood", "2.4 Likelihood Functions for Multinomial Models", "2.5 Invariance Property of MLE", "2.6 Checking the Model", "3.1 Planing and Conducting Empirical Studies", "3.2 Steps of PPDAC", "3.3 Case Study", "4.1 Statistical Models and Estimation", "4.2 Estimators and Sampling Distributions", "4.4 Confidence Intervals and Pivotal Quantities", "4.5 The Chi-Squared and t Distributions", "4.6 Likelihood-Based Confidence Intervals", "4.7 Confidence Intervals for Parameters in the Gaussian model", "4.7 Confidence Intervals for Parameters in the Gaussian model (Continued)", "5.1 Introduction to Hypothesis Testing", "5.2 Test of Hypotheses for Parameters in the Gaussian Model", "Relationship Between Hypothesis Testing and Confidence Intervals", "5.3 Likelihood Ratio Test of Hypothesis - One parameter", "6.1 Gaussian Response Models", "6.2 Simple Linear Regression: Maximum Likelihood and Least Squares Estimates", "Confidence Interval for Parameters in the Model", "6.3 Checking Model Assumptions and Residual Plots", "Randomization, Paring, and Experimental Design", "7.1 Likelihood Ratio Test for the Multinomial Model", "7.2 Goodness of Fit Tests", "This learning consists mostly of making sure you understand the concepts and steps that were introduced and used in class to solve examples and then solving problems from the Course Notes on your own.", "R Statistical Software", "R and the RStudio development environment can be downloaded from here.", "All assessments are proctored, in-person, and closed-book exams.", "A 2.5-hour cumulative final examination will be held during the final exam period (April 9 - 25, 2025).", "If you have a question regarding the marking of an assessment, you should first check the posted solutions on LEARN.", "First and last name", "Session number", "Please be specific and explain your rationale for a remark.", "Notice of Recording", "Short-term absence", "COVID-19-related absence", "No limits on number of submissions per term and only available during the formal lecture period", "In particular:", "Please inform us of these at the start of the course.", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments"]}, {"course_id": 33, "course_code": "STAT 241", "course_name": "STAT241 - Statistics (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["RCH 307", "Part I, Talking Probability: The statistical approach to analyzing data begins with a probability model to describe the data generating process; that\u2019s why, to study statistics, one must first learn to speak the language of probability.", "10-11 Some \"standard\" statistical problems: categorical data analysis; two-sample comparisons, confounding factors, randomization, and blocking; simple linear regression.", "Midterms (M) 30 pts @ 15 pts each", "Final (F) (100 - A - M) pts", "Date & Time Location", "Then, his final exam will be worth 100-A-M=100-0-6=94 pts."]}, {"course_id": 34, "course_code": "CO 487", "course_name": "CO487 - Applied Cryptography (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Instructor: Samuel Jaques", "Email: sejaques@uwaterloo.ca", "Timothy Miller", "Nicolas Swanson", "A broad introduction to modern cryptography, highlighting the tools and techniques used to secure internet and messaging applications.", "It is one of the core technologies for securing the emerging information infrastructure.", "This course is a comprehensive introduction to modern cryptography that is aimed primarily at those interested in applications.", "In the area of public-key cryptography, topics will include an overview of specific systems (Diffie\u2013Hellman, RSA, DSA, etc.) and a few advanced protocols.", "The security of these schemes and the use of public-key techniques for generating digital signatures will be described.", "Linear and differential cryptanalysis of ciphers.", "Define the main information security goals of confidentiality, integrity, authentication, and availability", "Explain the intended security properties of each cryptographic primitive and analyze relationships between security properties", "Explain mathematical techniques underlying standardized cryptographic algorithms", "Identify flaws in uses of cryptographic algorithms", "Determine which cryptographic algorithms can be used and combined to build systems with desired functionality and security", "Understand and contextualize the cryptography and security around them in daily life", "0 1 (Jan 6-8) Introduction", "Symmetric Encryption", "3.6 9 Elliptic Curve Cryptography 4 Yes", "4   Applications", "Understanding Cryptography: From Established Symmetric and Asymmetric Ciphers to Post-Quantum Algorithms, 2nd edition, Springer, 2024 Primary reference.", "A1: January 23", "A4: March 20", "This will be clearly indicated for each such question.", "In that case you are required to work independently.", "These questions will test your ability to identify the important concepts introduced in lectures, and your understanding of them.", "In particular:", "Please inform us of these at the start of the course.", "Library for research-based assignments"]}, {"course_id": 36, "course_code": "STAT 440", "course_name": "STAT440 - Computational Inference (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 6, "major_name": "Computer Science (Bachelor of Computer Science - Honours)", "topics": ["Computational Inference Winter 2025", "PHY 313", "Introduction to and application of computational methods in statistical inference.", "Monte Carlo evaluation of statistical procedures, exploration of the likelihood function through graphical and optimization techniques.", "Topics include expectation-maximization, Bootstrapping, Markov Chain Monte Carlo, and other computationally intensive methods.", "A1 Feb 4th", "A4 Apr 3rd"]}, {"course_id": 0, "course_code": "CS 136L", "course_name": "CS136L - Tools and Techniques for Software Development (0.25)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Tools and Techniques for Software Development Winter 2025", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 3003", "E. Ciklabakkal", "E. Ciklabakkal", "08:30AM - 10:20AM MC 4042", "E. Ciklabakkal", "10:30AM - 12:20PM MC 4042", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 4060", "02:30PM - 04:20PM MC 4060", "E. Ciklabakkal", "10:30AM - 12:20PM MC 3003", "This course introduces students to tools and techniques useful in the software development lifecycle.", "Students learn to navigate and leverage commands and utilities in the Linux Command Line Shell.", "Students gain experience in version control software, writing scripts to automate tasks, and creating effective test cases to identify bugs.", "Students also gain experience in using built-in support for version control, testing, debugging, build automation, etc. in integrated development environments (IDEs).", "Interact with the Linux Operating System using a command line shell and gain familiarity with commands, utilities and tools.", "Create scripts to automate tasks and increase productivity while working on a software project.", "Design test cases and automate the testing process to check a program for functional correctness and incorrect memory usage.", "Use version control systems to share, contribute, manage and track code.", "Separately compile code modules and leverage build automation tools to do so efficiently.", "Module 0: Linux Shell, a first look", "Module 2: Testing and Debugging", "Module 9: Debugging", "Each lab consists of a number of lab problems.", "Each lab problem has two associated values, a lower one called the pass threshold and a higher one called the completion threshold.", "Special note on test cases: if a lab question asks you to submit test cases, you must create these tests yourself.", "Do not directly copy code from GenAI.", "Do not ask GenAI for a step-by-step breakdown of how to solve a lab problem.", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 1, "course_code": "CS 341", "course_name": "CS341 - Algorithms (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Algorithms Winter 2025", "10:00AM - 11:20AM MC 4061", "08:30AM - 09:50AM MC 1056", "The study of efficient algorithms and effective algorithm design techniques.", "Topics include divide and conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph search and backtrack, problems without algorithms, NP-completeness and its implications.", "DPV", "Introduction to Algorithms, by Cormen, Leiserson, Rivest and Stein, MIT Press.", "describe the main idea first,", "Extensions and Other Accommodations on Assignments", "Students can currently self-declare two kinds of absences on Quest: short-term absence and pandemic-related absence.", "Since a short-term absence lasts 2 days, this means the only accommodation we offer for a short-term absence is a 48 hour extension.", "If you request accommodations through AccessAbility Services (AAS) by filling out a Missed Course Component form, the accommodation is determined on a case-by-case basis through consultation with AAS, but will generally be one of the above options unless your situation is unusual.", "If you collaborate with others, you must clearly indicate the collaboration for each problem.", "This is not a software engineering course; we will not test your code against inputs that do not match our specifications.", "Continuity Plan", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 2, "course_code": "CS 350", "course_name": "CS350 - Operating Systems (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Operating Systems Winter 2025", "07:00PM - 08:50PM", "Bernard Wong bernard AT uwaterloo DOT ca", "Hong Zhang honzhang AT uwaterloo DOT ca", "Karen Anderson kaanders@uwaterloo.ca", "An introduction to the fundamentals of operating system function, design, and implementation.", "Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security.", "An introduction to the fundamentals of operating system function, design, and implementation.", "Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security.", "Operating System Introduction (2 hours)", "Historical overview of operating system development.", "Simple memory management techniques: partitioning, dynamic loading, simple segmentation.", "File Systems (6 hours)", "Bonus content on a current topic in computing", "In a general way, understand operating systems: what they do, how they are used, and how they are implemented.", "Introduction Chapters 1-2 Intro  Slides", "Process API    Slides", "Fibers", "Synchronization", "System Calls and Exceptions   Context Switch & Sys Calls  Slides", "Virtual Memory Chapters 8,9 Address Spaces   Memory API", "Smaller Page Tables", "Devices and I/O Chapters 12 and 13 I/O Devices  Hard Disk Drives  Slides Disk", "File Systems Chapters 10 and 11 (excluding 11.8, 11.9) Files and Directories", "File System Implementation", "FSCK & Journaling  Slides Part 1", "Bonus: Debugging     Slides", "A Collection of Tutorials and Useful Information", "An Introduction to Programming with Threads, by Andrew Birrell", "Assignment 3: File Systems", "Operating System Concepts, 8th edition Silberschatz, Galvin and Gagne (John Wiley and Sons) No available free on-line", "We will be using a system for class-related discussions and announcements called Piazza.", "Piazza can generate a large volume of e-mails, and these settings may be modified to reduce the frequency of received notifications (as well as what types of notifications are received).", "Debugging: GDB Online Documentation", "An Introduction to Programming with Threads, by Andrew Birrell", "System V ABI", "COS Source Code and Documentation:", "Source Code Documentation", "OpenGrok Source Code Search", "OpenGrok Source Code Navigation", "Exams", "You are welcome to use these tools to help you understand the course material, but you must not:", "cut-and-paste your assignment code into them for debugging assistance.", "Also, these tools will not be available when you write the exam, so you need to understand how to solve these problems yourself in order to pass the course.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 3, "course_code": "CS 115", "course_name": "CS115 - Introduction to Computer Science 1 (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Introduction to Computer Science 1 Winter 2025", "Diren Swayze", "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming.", "As we are aware of the varied ways in which this material might be of use in the future, we have included concepts that are beautiful and universal.", "Because of the fundamental nature of the concepts taught in CS 115, the course can serve both students whose primary interest in computers is in their use in their chosen areas of study and students intending to minor in CS.", "Module 01: Introduction Monday January 6", "Module 03: Strings and Symbols Monday January 13", "Module 06: Structural Recursion Monday February 3", "Module 08: Local Evaluation Monday February 24", "Module 09: Higher-Order Functions Monday March 3", "Exams", "You can submit each of those files as many times as you like before the deadline.", "Every time you submit a file, we'll run some basic checks on it to make sure it looks valid, and send you preliminary feedback via email.", "Re-marking", "The forms will be in a Survey on Learn for each assignment for two weeks."]}, {"course_id": 4, "course_code": "CS 135", "course_name": "CS135 - Designing Functional Programs (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Designing Functional Programs Winter 2025", "Monday -", "Monday", "07:00PM - 08:50PM", "08:30AM - 09:20AM", "10:30AM - 11:20AM MC 2034", "Charlie Clarke", "Email: claclark@uwaterloo.ca", "Karen Anderson", "Email: kaanders@uwaterloo.ca", "Email: dbwolff@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Sara Nayar", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "CS135 Problem-solving FAQ", "Assignment Marking Error: Submit a re-mark request, due within one week of release of marks.", "Read Me First", "We hope to guide you through a carefully designed curriculum that introduces you to core concepts in computer science.", "In a typical week, you will move through the following activities:", "You should get a feel for what information is where so you can find it quickly in the future.", "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming.", "Syntax and semantics of a functional programming language.", "Linear and nonlinear data structures.", "Abstraction and encapsulation.", "CS 135 Designing Functional Programs", "CS 135 is for students who would prefer a more conceptual treatment of introductory computer science in a simple language that is educationally effective but not commercially relevant.", "Hardware and Software", "Student labs are equipped with the DrRacket integrated development environment running on networked personal computers.", "References", "How To Design Programs by Felleisen, Findler, Flatt, and Krishnamurthi, MIT Press, 2003.", "Definition of lists, designing functions to process and produce lists, recursive definition of natural numbers, recursive data definitions.", "Non-Linear Structures (6 hours)", "Multi-clausal recursive data definitions, trees, mutually referential data definitions, design methods for complex data, iterative refinement, multiplexing.", "Early development of electronic computers and programming languages.", "History of concepts covered in this course.", "have understanding and experience with the topics in the course outline above", "Drop deadline 25", "Reading Week Starts", "Slides Description", "L01 Values and expressions Prefix notation, exact numbers, Boolean expressions, constants", "L04 Lists List values and expressions, composite data, data definitions", "iClicker pilot", "2024-08-26: CS135 is participating in a pilot comparison of iClicker and Vevox.", "The iClicker subscription should be free.", "iClicker Account", "Racket and DrRacket", "It is also simple and clean enough that we cover computer science content many CS students do not see until later in their CS careers.", "If you submit code written under some other system and it does not work in our currently-supported version of DrRacket, then we consider that code incorrect even if it works for you at home.", "Your work in CS135 will be assessed in a variety of ways.", "Coverage", "Using such off-limits material generally results in a significant loss of marks.", "In general, the basic tests will try to warn you if inappropriate functions and special forms are used.", "Submitting a partially completed solution is a good idea, just in case you don\u2019t get back to it before the due date and to serve as a backup in case your computer breaks or is stolen.", "Email Karen Anderson .", "Email the ISAs and ask them to \u201cmark it for feedback\u201d.", "Testing", "We do several kinds of testing on your submissions:", "Basic tests", "Each time you submit before the due date, we run a set of \u201cbasic tests\u201d on your submission.", "It\u2019s amazing how many fatal errors can appear during last-minute tidying up!", "Do not make your last submission immediately before the deadline \u2013 it gives you no time to check the Basic Test results and respond, if needed.", "The numeric mark appearing on the basic test marksheet is only for guidance.", "After the submission deadline we run a second set of tests to assess your code, including:", "These post-deadline tests and hand-marking form your mark for the assignment.", "If you procrastinate long enough, this rule can easily cause you to fail the course.", "We won\u2019t rehash the above policies, but we do want to make them concrete for CS135.", "A specific assignment may give exceptions to the above.", "You are welcome to use these tools to help you understand the course material, but you should not:", "cut-and-paste your assignment code into them for debugging assistance.", "Also, these tools will not be available when you write the exam, so you need to understand how to solve these problems yourself in order to pass the course.", "attempting to run malicious code during the submission or marking process."]}, {"course_id": 5, "course_code": "CS 145", "course_name": "CS145 - Designing Functional Programs (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Designing Functional Programs (Advanced Level)", "10:00AM - 11:20AM MC 2017", "Monday -", "Monday", "07:00PM - 08:50PM", "Email: troy.vasiga@uwaterloo.ca", "Office Hours: Tues and Thur 1:00-2:00pm in MC 6212,", "Email: kaanders@uwaterloo.ca", "Email: cs145@uwaterloo.ca", "Fri 2:30-3:30pm in MC 4065,", "Email: cs145@uwaterloo.ca", "This course introduces students to key concepts in the field of Computer Science, prepares students to complete the CS portion of their Math core requirements and, if desired, continue on to second-year core courses in CS, provides top students with appropriate challenges and enrichment, and explores topics in greater depth than is possible in CS 135.", "Audience", "Demonstrate above-average communication skills (listening, reading, writing) due to the lack of textbook support for much of the enrichment material", "Given a clear and concise statement of a problem or task, write a program from scratch of up to a hundred lines of properly-formatted and documented code in a functional programming language to solve the problem or complete the task", "Use elementary data structures, such as lists and trees, in programs", "Use higher-order functions to improve readability and efficiency of programs", "Analyze the worst-case running time of programs and describe examples of data that demonstrate that the analysis cannot be improved", "Demonstrate their understanding of the implementation of functional programming language features by coding small interpreters for Scheme-like languages", "An introduction to functional programming", "Function application and definition", "Substitution model", "Types in Scheme", "Structures", "Recursion on lists and integers", "Unary representation of integers", "Proving properties of programs", "Algorithm analysis", "Functions as values", "Anonymous functions", "Higher-order functions", "Local definitions", "Simplifying the language", "Binary representation of integers", "Immutable abstract data types", "Association lists", "Leaf-labelled and node-labelled trees", "S-expressions", "Interpreters", "Limits to computation", "Efficiency", "Purely-functional data structures", "Priority Queue ADT and Braun heaps", "Efficient maps: treaps, red-black trees, AA trees", "They will not be due each week on the same day, as is common in the other first-year CS courses and the first-year Math courses.", "Assignment questions are the main way to reinforce and deepen your understanding of the concepts and skills discussed in lecture.", "You will submit program files electronically to the Marmoset system, which runs tests on your code and informs you of the results fairly rapidly.", "You can still get a great mark in the course.", "Questions and concerns can be sent to instructor or ISA emails.", "When asking questions, first check in case the question has already been answered using the search bar above the feed/list of posts.", "Walk-in consulting hours may still be available if course staff are able to book a sufficiently-large room to follow distancing guidelines."]}, {"course_id": 6, "course_code": "CS 136", "course_name": "CS136 - Elementary Algorithm Design and Data Abstraction (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Elementary Algorithm Design and Data Abstraction Winter 2025", "08:30AM - 09:50AM MC 2017", "10:00AM - 11:20AM MC 2038", "10:00AM - 11:20AM MC 4059", "11:30AM -", "Monday -", "Monday", "07:00PM - 08:50PM", "This course builds on the techniques and patterns learned in CS135 while making the transition to use an imperative language.", "Topics discussed include iterative and recursive sorting algorithms; lists, stacks, queues, trees, and their application; abstract data types and their implementations.", "produce well-designed, properly formatted, documented and tested programs of a moderate size (200 lines) that can use basic I/O", "explain and demonstrate the use of the C memory model, including the explicit allocation and deallocation of memory", "explain and demonstrate the principles of modularization and abstraction", "implement, use and compare elementary data structures (structures, arrays, lists and trees) and abstract data type collections (stacks, queues, sequences, sets, dictionaries)", "If both exams are held in person", "If both exams must be held online", "If in-person exams cannot be held then they will be held online (if possible).", "You may also ask on the discussion forums in a private message.", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 7, "course_code": "CS 146", "course_name": "CS146 - Elementary Algorithm Design and Data Abstraction (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Elementary Algorithm Design and Data Abstraction (Advanced Level)", "Monday -", "Monday", "07:00PM - 08:50PM", "02:30PM - 03:20PM", "Brad In-person MC 6427", "On-line Consulting Hours: Microsoft Teams", "CS 146: Elementary Algorithm Design and Data Abstraction (advanced version)", "To familiarize students with key concepts in introductory computer science from an imperative perspective and to contrast this with the functional perspective taken in CS 145;", "To allow students to complete the CS portion of their Math core requirements and, if desired, to continue on to second-year core courses in CS;", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "Introduction to C and elementary mutation in Scheme", "The memory model.", "Variable declaration, assignment and infix expressions in C. Basic I/O in C. Compilation.", "Algorithm analysis in C. File I/O in C and Scheme.", "Program organization and testing methods.", "Space analysis in C and Scheme.", "Mutable lists, queues, deques, and trees in C. Time-space tradeoffs among mutable and immutable ADT implementations.", "Low-level abstractions", "Pointer arithmetic in C. Arrays in C and vectors in Scheme.", "Strings in C. Elementary hashing.", "Libraries in C and Scheme.", "Implementing high-level abstractions", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "The provided slides are not a substitute for attendance in any first-year CS course, but in CS 146, there are no slides, and the lecture summaries made available after lecture are an even worse substitute for attendance.", "Lectures will involve the development of ideas summarized very tersely in the handouts, as well as on-the-fly development of code, analyses, and proofs.", "CS145 and CS146 were originally designed as a year-long unit of curriculum, but eventually the individual courses drifted in their own directions.", "1.1 A note on logistics", "1.2 Review of forms of recursion and associated proof techniques", "1.3 In preparation for side effects", "1.4 Output", "1.5 Input", "1.6 First Introduction to C", "1.8 Memoization", "1.9 Mutation in C", "1.11 Boxes in C", "1.12 Advanced mutation", "1.13 Aliasing in C", "1.14 Memory and vectors", "1.15 Vectors in Racket", "1.16 Arrays in C", "1.18 ADTs in C; Amortized Analysis", "2 SIMPL: a simple imperative language", "2.1 Syntax and informal semantics", "2.2 Examples in several languages", "2.3 Formal semantics", "2.5 Proving imperative programs correct", "A primitive imperative language", "3.1 A primitive imperative language", "3.2 The PRIMPL simulator", "3.4 The SIMPL to A-PRIMPL compiler", "3.6 Strings in C", "3.7 Adding functions to SIMPL", "3.8 Adding both arrays and functions to SIMPL", "3.9 Implementing lists in PRIMPL", "4 MMIX: a realistic instruction set", "4.1 A more realistic processor", "4.2 The MMIX architecture", "4.2.1 Branches and Jumps", "4.2.2 Example", "4.2.3 Software Interrupts", "4.2.5 A Problem with Branches and Jumps", "4.4 Towards a SIMPL to MMIX compiler", "5.1 Storing primitive values", "5.3 Managing memory", "5.4 Structural and pointer equality", "5.5 Function application in a Racket interpreter", "5.7 Justifying the cost of Racket primitives", "5.8 Moving towards implementation in an imperative language", "6.2 Zippers", "6.3 A continuation-passing interpreter", "6.6.2 Mark-and-sweep", "6.6.3 Copying garbage collection", "6.7 Heterogeneous Data in C", "6.8 Multidimensional Arrays in C", "6.10 Variable-length Argument Lists", "7.1 Continuation-passing style", "7.2 Exception handling", "7.3 Undelimited continuations", "7.4 Delimited continuations", "7.5 Racket\u2019s implementation of continuations", "In CS 146, we will examine the imperative paradigm, and compare and contrast the way that efficient algorithms and data structures are designed in imperative and functional languages.", "Racket is a laboratory for current research on aspects of functional programming languages, and we will continue to look at interesting topics in this area, perhaps at the cost of some coherency in the flow of material.", "They will not be due each week on the same day, as is common in the other first-year CS courses and the first-year Math courses.", "Assignment questions are the main way to reinforce and deepen your understanding of the concepts and skills discussed in lecture.", "You will submit program files electronically to the Marmoset system , which runs tests on your code and informs you of the results fairly rapidly.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "(Please also note that we may use the trends in a student's submission history to estimate the likelihood of other forms of cheating as well.)", "Library for research-based assignments"]}, {"course_id": 8, "course_code": "CS 240", "course_name": "CS240 - Data Structures and Data Management (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Data Structures and Data Management Winter 2025", "10:00AM - 11:20AM RCH 112", "11:30AM -", "10:30AM - 11:20AM MC 4040", "11:30AM - 12:20PM MC 4040", "Email: oveksler@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "All of Tom's consulting hours are in-person in MC 4065.", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Instructional Support Coordinator: Karen Anderson", "Email: kaanders@uwaterloo.ca", "Introduction to widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms.", "CS 240: Data Structures and Data Management", "This course introduces widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms.", "Analyze, apply, and use various data structures and data-management techniques in a variety of applications", "Perform rigorous complexity analyses of simple algorithms and data structures, which includes writing correct mathematical proofs on inductively-defined structures and solving simple recurrence relations", "Select a good data structure to solve a specific algorithmic problem", "Apply data structures correctly and efficiently in one or more high-level programming languages, including C++", "Audience", "Successors: Most third-year CS major courses", "Conflicts: Other courses that seriously consider efficiency and correctness of fundamental data structures and their algorithms", "Analytical:", "Define and explain order notation; perform complexity analyses of simple algorithms", "Perform basic computations of discrete probability and expectation", "Use mathematical induction on recursively defined structures, including finding simple errors in inductive arguments", "Prove simple properties of program fragments correct through the use of pre-conditions and post-conditions for loops and recursive calls", "Computational and algorithmic:", "Design, implement, test, and debug C++ programs to solve problems requiring hundreds of lines of code", "Define the ADTs for stacks and queues; write efficient implementations in C/C++", "Describe tree structures, including binary search trees and multi-way trees; use these structures in C/C++ programs", "Describe basic sorting algorithms (including Quicksort) and implement them in C/C++", "Perform rigorous asymptotic analyses of simple algorithms and express the result using order notation; compare algorithms based on their asymptotic complexity; and prove formal results involving order notation", "Apply the priority-queue ADT to solve various application problems, implement a priority queue using heaps, and analyze the complexity of common implementations of heap operations", "Develop best-, worst- and average-case analyses of sorting algorithms, including Quicksort, and explain the ramifications of these analyses in practice; explain the basic principles of randomized algorithms and their potential advantages, specifically in the case of Quicksort; explain the difference between comparison-based sorting and non-comparison-based sorting algorithms, and when and why the latter may run faster; and apply sorting-based techniques to algorithmic problems, such as elimination of duplicates", "Explain the advantages and disadvantages of various hashing techniques; identify the best hashing techniques to use in a particular application scenario; and recognize when hashing techniques are preferable to other dictionary implementations", "Design data structures for real-world data (where keys are often inherently multidimensional) in such a way that common operations (including range search) can be implemented efficiently", "Design special data structures that can efficiently store and process words and strings, and select and apply a suitable technique for data compression in a specific application scenario", "Introduction and review (3 hours)", "Basic computer model: the random-access machine", "Runtime of an algorithm: worst-case, best-case, and average-case", "Review of stacks and queues", "Priority queue ADT and simple implementations", "Sorting and analysis of randomized algorithms (5 hours)", "Quicksort (non-randomized): worst-case, best-case, and average-case complexity", "Randomized quicksort and its analysis; application to selection and its analysis", "Lower bound on comparison-based sorting", "Non-comparison-based sorting algorithms (e.g., Counting Sort and Radix Sort)", "Dictionary ADT and simple implementations", "Binary search trees (insert and delete operations and analysis)", "Key-indexed search, simple hash functions", "Range search in a binary search tree", "Algorithms and data structures for text processing (8 hours)", "Sometimes these include animations/overlays, in case of which there will be both a Display version (with them) and a Print version (omitting them, but otherwise the same content).", "The slides for each module will be posted as the term progresses.", "Module 1 Introduction and Asymptotic Analysis M1.pdf", "Module 3 Sorting, Average-Case and Randomized Algorithms M3.pdf", "Optional: Goodrich & Tamassia   8.3", "Module 8 Range-Searching in Dictionaries of Points   Course notes Chapter 8", "A0.tex", "A1.tex", "The following books are on reserve in the DC library for reference and additional resources:", "Algorithm Design and Applications (2015)", "Also covers cuckoo hashing.", "Sedgewick] Algorithms in C++, Third Edition (1998)", "Computational Geometry: Algorithms and Applications", "CLRS] Introduction to Algorithms, 2nd edition (2001)", "Introduction to Algorithms, 2nd edition is also avaliable online (in campus).", "This website will be the primary means of communication and distribution of materials for the course.", "The course uses a number of different tools for distributing information and receiving submissions.", "These are not worth credit, but may help you in self-testing your understanding of the material.", "Only one programming question can be shifted to the final exam.", "If more than this has verification for non-submittal, then it will be considered on a case-by-case basis.", "A student with a medical reason may not be granted an INC because they have not performed sufficiently well during the academic term.", "An INC will be granted ONLY if there is a strong reason for missing the exam (generally a serious medical issue verified by a doctor's note) AND a satisfactory performance during the term (both assignments and midterm).", "Academic Dishonesty", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "The first criterion for marking is the correctness, the second criterion is efficiency.", "describe the main idea first in words,", "In the case that you are using facts stated in lectures/modules, be sure to cite where you got them from.)", "Files should be named .cpp, where the specific file name will be specified in the assignment.", "You should include sufficiently many comments in your code that the main ideas of design and correctness are clear.", "One-line changes: In the case you passed the public test, and failed some secret tests, if your program works with a one line change, then we may accept it for remarking and give some marks after deducting a penalty (typically 10-20% of the programming question).", "Here are some ways to create PDF files:", "Create your solution in LaTeX. LaTeX is a document preparation system that uses a mark-up language to write/create and co-ordinate different parts of documents, including diagrams and was introduced in Assignment 0.", "The following are least preferred methods since the results may be hard for markers to read and/or the files may be too large.", "Submitting a Re-Mark Request: Please email cs240@uwaterloo.ca in order to submit a request.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 9, "course_code": "CS 240E", "course_name": "CS240E - Data Structures and Data Management (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Data Structures and Data Management (Enriched)", "10:00AM - 11:20AM MC 4041", "Email: biedl [", "Email: cs240e", "All of Tom's consulting hours are in-person in MC 4065.", "Email: cs240", "Instructional Support Coordinator: Karen Anderson", "Email: kaanders [", "Module 1 Introduction and Asymptotic Analysis Course notes Chapter 1 (skip 1.5 for now)", "(updated)  Sorting, Average-Case and Randomized Algorithms Course notes Chapter 3 (and parts of 1.5)", "Optional: Goodrich & Tamassia   8.3", "Module 8 Range-Searching in Dictionaries of Points Course notes Chapter 8", "Tutorial 3 Friday, January 24 Average-case vs expected, sorting", "The following books are on reserve in the DC library for reference and additional resources:", "Algorithm Design and Applications (2015)", "Also covers cuckoo hashing.", "Sedgewick] Algorithms in C++, Third Edition (1998)", "Computational Geometry: Algorithms and Applications", "CLRS] Introduction to Algorithms, 2nd edition (2001)", "Introduction to Algorithms, 2nd edition is also avaliable online (in campus).", "Only one programming question can be shifted to the final exam.", "If more than this has verification for non-submittal, then it will be considered on a case-by-case basis.", "A student with a medical reason may not be granted an INC because they have not performed sufficiently well during the academic term.", "An INC will be granted ONLY if there is a strong reason for missing the exam (generally a serious medical issue verified by a doctor's note) AND a satisfactory performance during the term (both assignments and midterm).", "Academic Dishonesty", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "Communication & Resources in CS 240E", "CS240E uses a variety of platforms in order to communicate and provide course materials to students.", "If your issue is confidential, but not specifically for one member of the course personnel, then a better option might be a private post to piazza.", "You can ignore these if you are comfortable with the material.", "Written assignments are submitted electronically using Crowdmark - a web-based submission and marking system.", "To submit files for Assignments, follow these instructions:", "Under each question, you can select files to add them to your submission for that question.", "You can submit and re-submit files as many times as you want before the deadline.", "Logging In", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 10, "course_code": "CS 241", "course_name": "CS241 - Foundations of Sequential Programs (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["ISA", "Yiwen Dong", "ISC", "The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages.", "Write short machine- and assembly-language programs to perform simple data manipulation", "Write a basic assembler supporting labels", "Give formal specifications for regular languages, including regular expressions and finite-state machines", "Write a scanner capable of dealing with a typical high-level programming language (given the specification)", "Give a grammar for a context-free language and create derivations for strings in a context-free language", "Perform context-sensitive analysis including type checking for high-level languages", "Write a simple code generator for an imperative language, i.e., one doing little or no optimization", "Apply appropriate design decisions when programming in C/C++ based on a detailed understanding of the way memory is used by a running C/C++ program", "Week 1: Introduction and Modules 1, 2", "20M+40F", "This course includes the independent development and practice of specific skills, such as development of large software artifacts.", "Library for research-based assignments"]}, {"course_id": 11, "course_code": "CS 241E", "course_name": "CS241E - Foundations of Sequential Programs (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["03:30PM - 04:20PM MC 1056", "02:30PM - 03:20PM", "07:00PM - 08:50PM", "The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages.", "Non-enriched version: Any CS 241E student may switch to the regular version of CS 241 during the first two weeks of lectures.", "Machine-level implementation of high-level language features (9 hours)", "Introduction to formal languages.", "Regular languages, regular expressions and finite state machines.", "Semantic Analysis and Code generation (6 hours)", "Dynamic Memory Allocation.", "Write short machine- and assembly-language programs to perform simple data manipulation.", "Write a basic assembler supporting labels.", "Give formal specifications for regular languages, including regular expressions and bubble diagrams.", "Write a scanner capable of dealing with a typical high-level programming language (given the specification).", "Give a grammar for a context-free language and, given a grammar, produce a derivation for a given string in the language.", "Write a simple code generator for an imperative language, i.e., one doing little or no optimization.", "Apply appropriate design decisions when programming in C/C++ based on a detailed understanding of the way memory is used by a running C/C++ program.", "I Sept. 5 Introduction", "A link to the Marmoset system and instructions for using it may be found on the course web page.", "Intellectual property includes items such as:", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as implementing and debugging a compiler.", "Library for research-based assignments"]}, {"course_id": 12, "course_code": "CS 245", "course_name": "CS245 - Logic and Computation (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Logic and Computation Winter 2025", "10:30AM - 11:20AM MC 4041", "Formalizing the notions of correct and incorrect reasoning, defining what is computable, and exploring the limits of computation.", "The course covers a variety of topics related to logic and computation that are required as background for other courses in Computer Science.", "It differs both in tone and content from a logic course one would typically find in a mathematics program.", "Develop mathematical reasoning skills", "Improve understanding of propositional and first-order logic, including key notions, such as: expressing natural language statements as logical formulas, distinguishing between correct and incorrect reasoning (between valid and invalid logical arguments), constructing a formal proof, distinguishing between syntax and semantics", "Explore the limits of computers, including decidability and undecidability", "Introduction", "Structural induction and its use in proving statements about formulas", "Adequate sets of connectives", "Soundness and completeness of formal deduction", "Applications of propositional logic to computer science, such as: Automated proofs: Resolution, Davis-Putnam Procedure; Hardware and software veri\ufb01cation", "First-Order Logic", "Limitations of propositional logic, and the necessity of first-order logic for reasoning about objects and properties", "Quanti\ufb01ers, universe of discourse, translation between English and first-order logic formulas", "Syntax of first-order logic: terms, formulas", "Semantics of first-order logic: valuations", "Proving argument validity in first-order logic (semantically)", "Formal deduction in first-order logic; Proving argument validity by formal deduction (syntactically)", "Applications of first-order logic to computer science, such as: Automated theorem provers and veri\ufb01ers; Databases", "Decidability and Peano Arithmetic", "Turing Machine as a model of computation", "Undecidability: Basic notions, undecidability of the Halting Problem and other decision problems", "The Peano axioms for number theory (including the induction axiom), undecidability of Peano Arithmetic", "An Important Application of Logic to Computer Science", "Hoare triples", "partial and total correctness", "Formalize English sentences into properly formed formulas in the propositional and first-order logic and, conversely, interpret such formulas in English", "Formalize the notion of correct reasoning and proof, and be able to construct formal proofs", "Realize the limitation of formal proof systems", "Understand the applications of logic to computer science", "This means that you must decide whether to exercise your option to submit late before the deadline, and refrain from making a partial submission in this case.", "There will be a marked quiz due in each week when there will not be a Crowdmark assignment due or a mid-term examination.", "This course includes the independent development and practice of specific skills, including writing numerous proofs using numerous abstract definitions.", "Library for research-based assignments"]}, {"course_id": 13, "course_code": "CS 245E", "course_name": "CS245E - Logic and Computation (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["10:00AM - 11:20AM MC 2034", "Tuesday -", "This includes:", "Basic sematic notions:", "Truth tables", "A formal proof system for Propositional logic", "Soundness and completeness theorems for the proof system", "Basic sematic notions", "Structures for a vocabulary", "Logical truths and logical implications", "Translations between FOL formulas and English and mathematical statements.", "A formal proof system for Predicate logic", "Soundness theorem for the proof system", "However, the focus of this version of the course is more on fundamental and mathematical concepts (on the expense of developing technical skills, such as designing formal proofs).", "We will use propositional logic as a main tool for demonstration key logical concepts such as", "Structural induction its justification and many applications.", "soundness and completeness theorems", "the expressive power of the logic (what can and what cannot be expressed).", "We will revisit these topics for first order logic.", "Finally, we will discuss applications of logic to computer science, in particular showing limitations of computations (undesirability)."]}, {"course_id": 14, "course_code": "CS 246", "course_name": "CS246 - Object-Oriented Software Development (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Object-Oriented Software Development Winter 2025", "10:00AM - 11:20AM MC 1056", "10:30AM - 11:20AM MC 3003", "11:30AM - 12:20PM MC 3003", "Tuesday -", "Ross Evans rpevans@uwaterloo.ca", "Introduction to object-oriented programming and to tools and techniques for software development.", "Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites.", "This course introduces students to object-oriented programming in C++ to facilitate designing, coding, debugging, testing, and documenting medium-sized programs.", "Students learn to read a specification and design software to implement it.", "Important skills are selecting appropriate data structures and control structures, writing reusable code, reusing existing code, understanding basic performance issues, developing debugging skills, and learning to test a program.", "C++", "Introduction to C++", "I/O and Strings", "Basic language constructs and Functions", "Exceptions", "Introduction to Templates", "Exception safety", "Template functions and algorithms", "Object-Oriented Programming", "UML class models", "Constructors and Destructors", "Encapsulation", "Inheritance", "Design patterns: Iterator, Observer, Decorator, Factory method, Template method, Non-virtual interface (NVI), and the Pimpl idiom", "Inheritance: vtables", "Multiple inheritance", "Design quality", "MVC (model-view-controller) architecture", "Design, implement, test, and debug C++ programs to solve problems requiring hundreds of lines of code, making appropriate use of", "types, variables, arrays, strings, and dynamic memory; loops, conditionals, and other control structures; structures, unions, and enumerations; procedures and functions; the preprocessor; formatted and unformatted I/O", "a subset of the STL, including vector, list, and map", "assertions and exceptions", "test suites for regression testing, white and black box testing", "structured programming, incremental development", "interface design, abstractions, information hiding, cohesion and coupling", "a subset of UML to specify classes, objects and relationships among them", "a selection of design patterns", "Explain the following properties of the memory model used in C++, including their impact on time and space efficiency when designing code: bytes vs. words, memory as an array, run-time stack and stack frames, memory allocation on the heap vs. automatic allocation on the stack, pointers as memory addresses, the representation of objects in memory", "You must complete A0 in order to receive marks for the rest of the course.", "A1 Basic C++ Monday, January 20 Monday, January 27 5", "A2 Introduction to OOP Monday, February 3 Monday, February 10 6", "A4 Design Patterns Monday, March 10 Monday, March 17 8", "Note: Marmoset is not a compiler!", "Do not submit C++ code to Marmoset, without first attempting to compile it yourself.", "Students from different sections can be in the same group.", "Working on a group is an important learning experience for software development in a team.", "Students in a group will be responsible for forming and managing the group.", "Please be very careful in selecting your group as there are always groups that end up having major issues every term.", "Exams", "Examination Date Final Grade Weight", "Each weekly set of problems completed succesfully can be used to replace 0.5% of the final grade from the final exam.", "In the case where both a midterm and final exam can be held, the final course grade will be calculated from the following components and weights:", "To pass the course, you must satisfy these three conditions:", "A grade of at least 45% on the weighted average of assignments A1-A4", "Assignments1to4  = (A1*5 + A2*6 + A3*6 + A4*8) / 25", "Normal = A1*5 + A2*6 + A3*6 + A4*8 + A5*15 + Midterm*20 + Final*(40-0.5*TutorialsCompleted) + 0.5*TutorialsCompleted", "if (MidtermInPerson==TRUE && FinalInPerson==TRUE)", "else", "if (MidtermInPerson==FALSE && FinalInPerson==TRUE)", "else", "if (MidtermInPerson==TRUE && FinalInPerson==FALSE)", "else", "if (MidtermInPerson==FALSE && FinalInPerson==FALSE)", "else", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments"]}, {"course_id": 15, "course_code": "CS 246E", "course_name": "CS246E - Object-Oriented Software Development (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Object-Oriented Software Development (Enriched)", "Tuesday -", "CS246 description: Introduction to object-oriented programming and to tools and techniques for software development.", "Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites.)", "functions and classes as the basic building blocks for abstractions", "function and class templates; exception safety", "object-oriented design principles; design patterns", "language features in combination", "Software library development for general client use.", "Principles of object-oriented software design.", "A selection of software design patterns.", "A1     10%", "Office hours: the list of office hours can be found at https://student.cs.uwaterloo.ca/~cs246e/F24/officehours.shtml", "Note: Marmoset is not a compiler!", "Please do not submit C++ code to Marmoset without first attempting to compile it yourself.", "The release test for a problem gives you the result of running your program on one basic test case (usually a case that appears in the assignment specification).", "So be sure to test your code thoroughly, so that you pass as many of our secret tests as possible.", "Testing", "Hand-Marking", "Note that correctly-working code is only one component of an assignment mark.", "Intellectual property includes items such as:", "CAN I POST MY CODE ONLINE?", "The second complicating factor concerns the question of who actually owns assignment solutions.", "The instructor supplies the question, a framework for the solution (including rules, guidelines, and possibly some starter code or libraries) and has in mind the general structure of what a correct solution ought to look like.", "the instructor(s) may permit posting of only those portions of assignments that were not provided as starter code;", "The instructors' policy for a given offering of a course will be stated in the course outline.", "If you wish to share your code with potential employers, and your instructor does not permit you to publicly post your solutions, you may host your code in a private repository, and provide a password to potential employers (for example, on your resume).", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 16, "course_code": "CS 251", "course_name": "CS251 - Computer Organization and Design (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Notice of Recording", "Computer Organization and Design Winter 2025", "11:30AM -", "RCH 307", "10:30AM - 11:20AM EV3 1408", "Silvia Zhang cs251@uwaterloo.ca", "Basics of digital logic design.", "Data representation and manipulation.", "Basics of processor design.", "This course enables students to develop an accurate mental model of the architecture and organization of physical computers and it introduces them to theoretical and practical concepts relevant to the structure and design of modern digital computers.", "Design simple combinational and sequential hardware at the logic gate level in order to implement simple algorithms and computations, such as addition, multiplication, and data-path control for processors.", "Describe number systems used by computer hardware, including IEEE floating point and two's complement.", "Analyze how machine language is executed by hardware, and describe a simple pipelined processor architecture for executing a RISC machine language.", "Explain basic cache and virtual-memory architectures, and how they can impact performance.", "Introduction and ARM (~3 hours)", "Combinational logic and basic components.", "Basic Processor Design (~9 hours)", "Processor design using single-cycle control.", "Multi-cycle control.", "Virtual memory.", "Multi-processor systems and core processors.", "Patterson and Hennessy: \"Computer Organization and Design\".", "Students registering their clicker for other sections will receive a grade of zero on clicker questions.", "else", "Notice of Recording", "In general, assignments submitted late and without an approved extension by the course ISC will not be accepted and will be given a grade of zero.", "If a student makes a short-term 48-hour declaration, they may contact the course ISC to obtain a 48-hour extension.", "Note that penalties are significantly higher for exams and for repeat offenders.", "Discussion of assignments is allowed, but each student must hand in their own copy of the assignment and word-for-word copying is not allowed.", "In-Class Discipline", "A student who is found to be disruptive during lectures will be given only one verbal warning for the term.", "Students should attend the section they're enrolled in and only the section they're enrolled in", "Further, a weekly quiz will be given and used in place of clickers in the marking scheme.", "Dropping lowest clickers marks, lowest quiz score", "Online Exams", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:"]}, {"course_id": 18, "course_code": "MATH 127", "course_name": "MATH127 - Calculus 1 for the Sciences (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Functions of a real variable: powers, rational functions, trigonometric, exponential and logarithmic functions, their properties and inverses.", "Intuitive discussion of limits and continuity.", "Definition and interpretation of the derivative, derivatives of elementary functions, derivative rules and applications.", "Fundamental theorems and antiderivatives; change of variable.", "have extensive familiarity with a number of basic but fundamental models that showcase the role of calculus in their respective disciplines.", "have experience describing and interpreting mathematical procedures in precise language (i.e., in complete sentences) within the context of short but formal project reports.", "If you are unable to acquire one of these calculators, you must contact your instructor in the first week or two of the course so an equivalent alternative can be identified and added to the exam proctors' list of permitted aids."]}, {"course_id": 19, "course_code": "MATH 137", "course_name": "MATH137 - Calculus 1 for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Notice of Recording", "10:30AM - 11:20AM MC 4059", "Monday -", "Monday", "07:00PM - 08:50PM", "Absolute values and inequalities.", "Sequences and their limits.", "Introduction to series.", "Limits of functions and continuity.", "Applications of the Mean Value theorem, Taylor polynomials and Taylor's theorem, Big-O notation.", "We will study these ideas as they relate to sequences and functions.", "First, we will examine sequences and what it means for one to converge.", "Next, we will use our knowledge of sequences to discuss functions, including limits and derivatives.", "Write clear and well-organized mathematical solutions and proofs.", "Solve problems in Calculus through logical thinking and careful analysis.", "Determine if a recursively-defined sequence converges and prove it using mathematical induction.", "Compute the limits of various functions using both the formal definition of the limit, arithmetic rules for limits,and l'Hopital's Rule.", "Find solutions to optimization and related rates problems.", "Sketch curves by first analyzing a given function and its derivatives.", "4: Jan 27 - 31 2.1 - 2.2 Functions and their Limits, Sequential Characterization of Functions, Squeeze Theorem Quiz 3", "7: Mar 3 - 7 3.5 -  3.7 Linear Approximation, Newton's Method, IFT Quiz 6", "8: Mar 10 - 14 3.8 - 4.2 Implicit and Logarithmic Differentiation, Related Rates, Local & Global Extrema, EVT Quiz 7", "9: Mar 17 - 21 \u2021 4.3 - 4.6 MVT and its Applications, Shape of a Function via 1st and 2nd Derivatives Quiz 8", "FE: Mar 31 - Apr 4 4.9 - 4.10 Curve Sketching, Optimization Quiz 10", "Notice of Recording", "Phone: 519-884-0000 extension 213", "Please let us", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 20, "course_code": "MATH 147", "course_name": "MATH147 - Calculus 1 (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["11:30AM - 12:20PM MC 4059", "04:30PM - 05:20PM", "Monday -", "Monday", "07:00PM - 08:50PM", "Introduction to mathematical proofs: Week 1;", "2. Sequences and Limits: Weeks 2 \u2013 4;", "3. Functions and Continuity: Weeks 5\u20138;", "Introduction to Real Analysis, by R. Bartle and D. Sherbert No", "Any missed assignment will be given a score of zero.", "For any missed examination, you must have a valid reason and appropriate supporting documentation.", "In case VIF or STAD covers the midterm, the midterm may be excused, and its weight may be transferred to the final exam."]}, {"course_id": 21, "course_code": "MATH 128", "course_name": "MATH128 - Calculus 2 for the Sciences (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["F. Dunbar", "Instructor: Fiona Dunbar", "Separable and linear first order differential equations and applications.", "Introduction to sequences.", "Parametric/vector representation of curves; particle motion and arc length.", "Polar coordinates in the plane.", "use integration techniques to solve linear first-order equations and improper integrals,", "visualize and approximate higher-order differential equations,", "interpret and derive power series representation of a function,", "use the concept of linear approximation and apply it to Taylor polynomials as well as use techniques for quantifying approximation error,", "understand the relationship between vector-valued functions, polar coordinates, and applications of integration to arc lengths.", "If you are unable to acquire one of these calculators, you must contact your instructor in the first week or two of the course so an equivalent alternative can be identified and added to the exam proctors' list of permitted aids.", "This course includes the independent development and practice of specific skills, such as integration techniques, visualizing/approximating higher-order differential equations, deriving power series, linear approximation and applying to Taylor polynomials, using vector-valued functions, polar coordinates, and applications of integration to arc lengths.", "Library for research-based assignments"]}, {"course_id": 22, "course_code": "MATH 138", "course_name": "MATH138 - Calculus 2 for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Notice of Recording", "08:30AM - 09:20AM", "09:30AM - 10:20AM MC 4059", "10:30AM - 11:20AM MC 4061", "E. Bembenek", "11:30AM - 12:20PM MC 4021", "cpthowel@uwaterloo.ca", "E. Yalcin", "02:30PM - 03:20PM", "08:30AM - 09:20AM QNC 2502", "Introduction to the Riemann integral and approximations.", "Antiderivatives and the fundamental theorem of calculus.", "Applications of the integral.", "Improper integrals.", "Linear and separable differential equations and applications.", "Binomial series, functions defined as power series and Taylor series.", "The goal of this course is to further expand your knowledge of calculus and its applications for one-variable functions.", "First, we will explore areas under curves and the Fundamental Theorem of Calculus, integration techniques, and applications of integration including finding the area between two curves, volumes of solids of revolution, and the average value of a function.", "We will study how to solve separable differential equations and linear differential equations as well as their applications to population growth and Newton's Law of Cooling.", "Write clear and well-organized mathematical solutions and proofs.", "Solve problems in Calculus through logical thinking and careful analysis.", "Set up and evaluate Riemann integrals for simple functions", "Apply various integration techniques including change of variable, integration by parts, trigonometric substitution, and partial fractions.", "Solve separable and first-order linear differential equations.", "Compute the radius and interval of convergence for power series.", "Compute Taylor Polynomials and Taylor series for many elementary functions.", "1: Jan 6 - 10 1.1 - 1.3 Riemann Sums, Definite Integrals, Average Value", "5: Feb 3 - 7 2.1 - 2.2.2, 2.3 Intro to DEs, Direction Fields, Separable and First-Order Linear DEs Quiz 4", "8: Mar 10 - 14 4.1 - 4.3 Intro to Power Series, Differentiation & Integration of Power Series Quiz 7", "FE: Mar 31 - Apr 4 4.8 Big-O Notation Quiz 10", "Notice of Recording", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 23, "course_code": "MATH 148", "course_name": "MATH148 - Calculus 2 (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["08:30AM - 09:20AM", "Instructor: Michael Brannan", "E-mail: michael.brannan@uwaterloo.ca", "Week of", "3 Jan. 20 Fundamental Theorem of Calculus  A1", "4 Jan. 27 Techniques of Integration  A2", "5 Feb. 3 More Techniques and Improper Integration", "6 Feb. 10 Applications of Integration A3", "8 Mar. 3 Convergence Tests A4", "10 Mar 17 Sequences and Series of Functions A5", "11 Mar. 24 Power Series", "12 Mar. 31 Differential Equations A6", "Principles of Mathematical Analysis."]}, {"course_id": 24, "course_code": "MATH 135", "course_name": "MATH135 - Algebra for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Algebra for Honours Mathematics Winter 2025", "An introduction to the language of mathematics and proof techniques through a study of the basic algebraic systems of mathematics: the integers, the integers modulo n, the rational numbers, the real numbers, the complex numbers and polynomials.", "Algebra for Honours Mathematics is a study of the basic number systems of mathematics.", "The course has two themes: Number systems and Mathematical language.", "The study of number systems will feel more familiar and will cover the integers, the integers modulo n, the complex numbers and polynomials.", "Gain practice in formulating conjectures and discovering proofs.", "Understand basic algebraic systems of mathematics: the integers, the integers modulo n, the rational numbers, the real numbers, the complex numbers and polynomials.", "MATH 135 Course Notes: Language and Proofs in Algebra, An Introduction Please see the Course Notes page in LEARN for the pdf No Free", "Generative AI: This course includes the independent development and practice of specific skills, such as proof discovery and proof writing.", "Library for research-based assignments", "In particular:"]}, {"course_id": 25, "course_code": "MATH 145", "course_name": "MATH145 - Algebra (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["02:30PM - 03:20PM", "E-mail: bmadill@uwaterloo.ca", "Topics include rings and subrings, integral domains and fields, homomorphism and isomorphism, quotient rings and modular arithmetic, isomorphism and the Chinese Remainder Theorem, irreducibility in integral domains, and field extensions.", "Week of", "1 Sept 5* Rings and Subrings", "3 Sept 19 Integral Domains and Fields A1", "7 Oct 24 FIT and CRT A3", "9 Nov 7 GCD's A4", "11 Nov 21 Field Extensions"]}, {"course_id": 26, "course_code": "MATH 136", "course_name": "MATH136 - Linear Algebra 1 for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Notice of Recording", "Linear Algebra 1 for Honours Mathematics Winter 2025", "08:30AM - 09:20AM MC 4061", "09:30AM - 10:20AM MC 4061", "10:30AM - 11:20AM QNC 2502", "11:30AM - 12:20PM MC 2065", "02:30PM - 03:20PM", "03:30PM - 04:20PM QNC 2502", "11:30AM - 12:20PM MC 4061", "10:30AM - 11:20AM B1 271", "Systems of linear equations, matrix algebra, elementary matrices, computational issues.", "Real n-space, vector spaces and subspaces, basis and dimension, rank of a matrix, linear transformations, and matrix representations.", "Master computational aspects of linear algebra, including matrix and vectors operations", "Solve systems of m linear equations in n unknowns", "Evaluate the inverse of a square matrix, when it exists", "Obtain the matrix representation of a linear transformation", "Evaluate the determinant of a square matrix", "Change co-ordinates and bases, and understand the effect on matrix representations", "Become familiar with operations and properties of abstract vector spaces", "While collaboration in understanding the material is encouraged, the work submitted must be your own, written independently.", "For example, submitting 60 minutes late will result in a maximum possible score of 40%, assuming a perfect score.", "Accommodation Requests", "Notice of Recording", "Allocate time appropriately towards the completion of the assignment which reduces the procrastination and cramming cycle", "Appreciate the importance of reviewing marked assignments", "In particular:", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as reading and writing proofs.", "Library for research-based assignments"]}, {"course_id": 27, "course_code": "MATH 146", "course_name": "MATH146 - Linear Algebra 1 (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Linear Algebra 1 (Advanced Level)", "Email: karigiannis@uwaterloo.ca", "This course is a rigorous treatment of the theory of finite dimensional vector spaces over an arbitrary field.", "We also cover the theory of determinants over an arbitrary commutative ring with identity, and some aspects of the theory of polynomials in one variable over a field.", "The ultimate goal is the Primary Decomposition Theorem, which characterizes a linear operator on a finite dimensional vector space in terms of invariant subspaces annihilated by the primary factors of its minimal polynomial.", "We will cover a large amount of difficult material at a fast pace.", "Understand and apply the concepts of the theory of abstract vector spaces and linear operators on finite-dimensional vector spaces.", "fields; systems of linear equations; matrices; row-reduced echelon form; matrix algebra; invertible matrices", "vector spaces; subspaces; bases and dimension; coordinates; row equivalence", "algebra of linear maps; isomorphism; representations by matrices; dual space; transpose of a linear map", "commutative rings; existence and uniqueness of determinants; multilinear maps; the exterior algebra", "eigenvalues; annihilating polynomials; invariant subspaces; simultaneous triangulation and diagonalization", "Much (but not all) of my lectures will closely follow the first six chapters of this book:", "\u201cLinear Algebra: Second Edition\u201d by Kenneth Hoffman and Ray Kunze; Prentice Hall, 1971.", "\u201cLinear Algebra: Fourth Edition\u201d by Friedberg, Insel, and Spence; Prentice-Hall, 2003.", "The assignments are an integral part of your evaluation in this course and I encourage everyone to take them very seriously.", "There will be no opportunity for a make-up midterm test."]}, {"course_id": 28, "course_code": "MATH 239", "course_name": "MATH239 - Introduction to Combinatorics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Introduction to Combinatorics Winter 2025", "11:30AM - 12:20PM MC 4059", "09:30AM - 10:20AM MC 4021", "P. Nelson", "08:30AM - 09:20AM QNC 1502", "S. Pfannerer-Mittas", "10:30AM - 11:20AM MC 4058", "11:30AM - 12:20PM MC 4058", "09:30AM - 10:20AM MC 4042", "02:30PM - 03:20PM", "10:30AM - 11:20AM PHY 150", "04:30PM - 05:20PM", "You should have no reason to contact them directly, but you can find their email addresses through Learn.", "First name Last name", "Guilherme Zeus Dantas E Moura", "Theodore Morrison", "Matthew Kroeker", "Introduction to graph theory: colourings, matchings, connectivity, planarity.", "Introduction to combinatorial analysis: generating series, recurrence relations, binary strings, plane trees.", "MATH 239 is an introduction to combinatorics with a particular focus on counting techniques and graph theory.", "extract coefficients from rational generating series", "find maximum matchings in bipartite graphs", "understand and use the concepts of paths, cycles, trees, bipartiteness, and planarity in graph theory", "be comfortable writing proofs for results on discrete objects", "2 Jan 13,15,17 Generating series, Sum and Product lemmas, Negative Binomial Theorem, Integer Compositions Part I: 2.1-2.3", "5 Feb 3,5,7 Solving linear recurrence relations, Binary trees, irrational generating series Part I: 4.1, 4.2, 4.4 Assignment 4, Feb 7", "6 Feb 10,12,14 Introduction to graph theory Part II: 4.1-4.6 Assignment 5, Feb 14", "Grading scheme A", "Students are encouraged to collaborate on solving the questions but each student must write their own solutions independently in their own words.", "Please inform of us these at the start of the course.", "Library for research-based assignments"]}, {"course_id": 29, "course_code": "MATH 249", "course_name": "MATH249 - Introduction to Combinatorics (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Introduction to Combinatorics (Advanced Level)", "09:30AM - 10:20AM MC 2017", "For graph theory, while we will focus on the same topics covered in MATH 239 (planarity and bipartite matching), our coverage of those topics will differ substantially in depth and in the techniques that we employ; in particular, we will see striking applications of algebra.", "extract coefficients from rational generating series", "find maximum matchings in bipartite graphs", "understand and use the concepts of paths, cycles, trees, bipartiteness, and planarity in graph theory", "be comfortable writing proofs for results on discrete objects", "2 Jan 13,15,17 Generating series, Sum and Product lemmas, Negative Binomial Theorem, Integer Compositions Part I: 2.1-2.3", "5 Feb 3,5,7 Solving linear recurrence relations, Binary trees, irrational generating series Part I: 4.1, 4.2, 4.4 Assignment 4, Feb 7", "6 Feb 10,12,14 Introduction to graph theory Part II: 4.1-4.6 Assignment 5, Feb 14", "Grading scheme A", "Students are encouraged to collaborate on solving the questions but each student must write their own solutions independently in their own words.", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 30, "course_code": "STAT 230", "course_name": "STAT230 - Probability (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["03:30PM - 04:20PM MC 4045", "09:30AM - 10:20AM MC 4045", "02:30PM - 03:20PM", "03:30PM - 04:20PM MC 2017", "08:30AM - 09:20AM", "Pavel Shuldiner; E-mail: pavel.shuldiner@uwaterloo.ca; M3 4108", "Come with well-organized questions to make the best use of your time.", "Requests must be emailed to sasugradadv@uwaterloo.ca", "Joint probability functions, marginal probability functions, and conditional probability functions of two or more discrete random variables and functions of random variables are also discussed.", "Post-requisite:", "Define a probability model and determine probabilities of events using counting techniques.", "Define and use probability mass functions, probability density functions, and cumulative distribution functions to determine probabilities of events.", "Use moment generating functions as a tool to determine expected values.", "This learning consists of taking the time to carefully read the lecture notes on your own, ensuring you understand the concepts and steps demonstrated in the lectures to tackle examples, and then solving the end-of-section problems.", "Definitions of Probability", "Mathematical Probability Models", "1.1", "1.2", "Counting in Uniform Probability Models", "Addition and Multiplication Rules for Counting", "Permutations and Combinations", "Counting in Uniform Probability Models", "Addition and Multiplication Rules for Counting", "Permutations and Combinations", "Addition Rules for Unions of Events", "1.3", "2.1", "2.2", "2.3", "Conditional Probability and Product Rules for Intersections of Events", "Probability Mass Functions, Cumulative Distribution Functions", "Functions of Random Variables", "3.2", "Expectation of a Random Variable", "Expectation of a Function of a Random Variable, Properties of Expectation", "Moment Generating Functions", "3.3", "3.4", "3.5", "Basic Terminology and Techniques", "Joint Probability Mass Functions, Marginal Probability Mass Functions", "3.5", "4.1", "Multinomial Distribution", "Linear Combinations of Random Variables", "4.2", "4.4", "Linear Combinations of Random Variables", "Law of Total Expectation", "4.4", "4.5", "4.6", "Law of Total Expectation", "Cumulative Distribution Function, Probability Density Function", "Functions of Random Variables", "4.6", "Expectation of a Random Variable", "Moments of a Distribution, Moment Generating Functions, Mean, Variance, Standard Deviation", "Exponential Distribution", "Normal Distribution", "Exponential Distribution", "Normal Distribution", "Use of the Normal Distribution in Approximations", "Therefore, you should plan to spend between 3 and 6 hours each week in out-of-class learning.", "This learning consists mainly of ensuring you understand the concepts and steps used in class to solve problems and then solving exercises from the Course Notes on your own.", "A 2.5-hour final cumulative examination will be held during the final exam period in April.", "In the case of extenuating circumstances, you must provide sufficient documentation via e-mail to Divya Lala at divya.lala@uwaterloo.ca as soon as possible to verify your absence's circumstances.", "Re-mark Requests:", "Cancellation of In-Person Classes:", "Intellectual property includes items such as:", "Students may not distribute or reproduce these materials for commercial or non-commercial means.", "This course includes the independent development and practice of specific skills for solving real-life problems using introductory probability rules.", "Library for research-based assignments"]}, {"course_id": 32, "course_code": "STAT 231", "course_name": "STAT231 - Statistics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["Notice of Recording", "03:30PM - 04:20PM DC 1350", "02:30PM - 03:20PM", "11:30AM - 12:20PM MC 1085", "03:30PM - 04:20PM", "10:30AM - 11:20AM EIT 1015", "09:30AM - 10:20AM EIT 1015", "Email: aslynko@uwaterloo.ca", "Email: liqun.diao@uwaterloo.ca", "Email: yangjc@uwaterloo.ca", "Email: henan.xu@uwaterloo.ca", "Funmilayo Adeku", "Email: fadeku@uwaterloo.ca", "This course provides a systematic approach to empirical problem solving which will enable students to critically assess the sampling protocol and conclusions of an empirical study including the possible sources of error in the study and whether evidence of a causal relationship can be reasonably concluded.", "The connection between the attributes of a population and the parameters in the named distributions covered in STAT230 will be emphasized.", "Numerical and graphical techniques for summarizing data and checking the fit of a statistical model will be discussed.", "The method of maximum likelihood will be used to obtain point and interval estimates for the parameters of interest as well as testing hypotheses.", "The interpretation of confidence intervals and p-values will be emphasized.", "The Chi-squared and t distributions will be introduced and used to construct confidence intervals and tests of hypotheses including likelihood ratio tests.", "Contingency tables and Gaussian response models including the two sample Gaussian and simple linear regression will be used as examples.", "Course Information Webpage", "Please do not send these questions via email.", "I expect everyone to be respectful to each other, any posts that do not meet the principles in Policy 33: Ethical Behaviour will be removed.", "Email", "Please send emails from uwaterloo.ca email address and include the session number and student ID number.", "Continuity Plans", "Use numerical and graphical summaries of a data set to describe the characteristics of a variate and to check the fit of a statistical model to the data.", "Use the steps of PPDAC to identify both the objectives and possible sources of error in an empirical study, and to critically evaluate the conclusions.", "Identify the connection between attributes of a population and the parameters in the named distributions (Binomial, Poisson, Multinomial, Exponential, Normal).", "Define and use the likelihood function to obtain point estimates of the unknown parameters in a model particularly for the Binomial, Poisson, Multinomial, Exponential and Gaussian (Normal) models.", "Use a pivotal quantity to construct a confidence interval for a parameter in some specific cases, and interpret the confidence interval.", "Use the likelihood function to construct and conduct a test of hypothesis for an unknown parameter in a model.", "Interpret p-values and describe the connection with confidence intervals.", "Define the properties of the Chi-squared and t distribution.", "Define a Gaussian response model including simple linear regression; determine point and interval estimates and conduct tests of hypotheses for the parameters in a Gaussian model.", "Use a Goodness of Fit test to test the fit of a model, independence in a two-way table and equality of proportions for two or more groups", "Describe the importance of randomization and pairing in experimental design and be able to recognize whether a study design allows the researcher to conclude cause and effect.", "This learning consists of taking the time to carefully read the course notes on your own, making sure you understand the concepts and steps demonstrated in the lectures to tackle examples, and then solving the end-of-chapter problems.", "Monday", "Friday", "Welcome", "1.1 Introduction to Statistical Sciences", "1.3 Numerical Data Summaries", "1.3 Graphical Summaries", "1.4 Probability Distributions and Statistical Models", "1.5 Data Analysis and Statistical Inference", "1.6 Introduction to R and RStudio", "2.1 Choosing a Statistical Model", "2.2 Estimation of Parameters", "2.3 Method of Maximum Likelihood", "2.4 Likelihood Functions for Multinomial Models", "2.5 Invariance Property of MLE", "2.6 Checking the Model", "3.1 Planing and Conducting Empirical Studies", "3.2 Steps of PPDAC", "3.3 Case Study", "4.1 Statistical Models and Estimation", "4.2 Estimators and Sampling Distributions", "4.4 Confidence Intervals and Pivotal Quantities", "4.5 The Chi-Squared and t Distributions", "4.6 Likelihood-Based Confidence Intervals", "4.7 Confidence Intervals for Parameters in the Gaussian model", "4.7 Confidence Intervals for Parameters in the Gaussian model (Continued)", "5.1 Introduction to Hypothesis Testing", "5.2 Test of Hypotheses for Parameters in the Gaussian Model", "Relationship Between Hypothesis Testing and Confidence Intervals", "5.3 Likelihood Ratio Test of Hypothesis - One parameter", "6.1 Gaussian Response Models", "6.2 Simple Linear Regression: Maximum Likelihood and Least Squares Estimates", "Confidence Interval for Parameters in the Model", "6.3 Checking Model Assumptions and Residual Plots", "Randomization, Paring, and Experimental Design", "7.1 Likelihood Ratio Test for the Multinomial Model", "7.2 Goodness of Fit Tests", "This learning consists mostly of making sure you understand the concepts and steps that were introduced and used in class to solve examples and then solving problems from the Course Notes on your own.", "R Statistical Software", "R and the RStudio development environment can be downloaded from here.", "All assessments are proctored, in-person, and closed-book exams.", "A 2.5-hour cumulative final examination will be held during the final exam period (April 9 - 25, 2025).", "If you have a question regarding the marking of an assessment, you should first check the posted solutions on LEARN.", "First and last name", "Session number", "Please be specific and explain your rationale for a remark.", "Notice of Recording", "Short-term absence", "COVID-19-related absence", "No limits on number of submissions per term and only available during the formal lecture period", "In particular:", "Please inform us of these at the start of the course.", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments"]}, {"course_id": 33, "course_code": "STAT 241", "course_name": "STAT241 - Statistics (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 7, "major_name": "Computer Science (Bachelor of Computer Science - Joint Honours)", "topics": ["RCH 307", "Part I, Talking Probability: The statistical approach to analyzing data begins with a probability model to describe the data generating process; that\u2019s why, to study statistics, one must first learn to speak the language of probability.", "10-11 Some \"standard\" statistical problems: categorical data analysis; two-sample comparisons, confounding factors, randomization, and blocking; simple linear regression.", "Midterms (M) 30 pts @ 15 pts each", "Final (F) (100 - A - M) pts", "Date & Time Location", "Then, his final exam will be worth 100-A-M=100-0-6=94 pts."]}]