[{"course_id": 0, "course_code": "CS 136L", "course_name": "CS136L - Tools and Techniques for Software Development (0.25)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Tools and Techniques for Software Development Winter 2025", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 3003", "E. Ciklabakkal", "E. Ciklabakkal", "08:30AM - 10:20AM MC 4042", "E. Ciklabakkal", "10:30AM - 12:20PM MC 4042", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 4060", "02:30PM - 04:20PM MC 4060", "E. Ciklabakkal", "10:30AM - 12:20PM MC 3003", "This course introduces students to tools and techniques useful in the software development lifecycle.", "Students learn to navigate and leverage commands and utilities in the Linux Command Line Shell.", "Students gain experience in version control software, writing scripts to automate tasks, and creating effective test cases to identify bugs.", "Students also gain experience in using built-in support for version control, testing, debugging, build automation, etc. in integrated development environments (IDEs).", "Interact with the Linux Operating System using a command line shell and gain familiarity with commands, utilities and tools.", "Create scripts to automate tasks and increase productivity while working on a software project.", "Design test cases and automate the testing process to check a program for functional correctness and incorrect memory usage.", "Use version control systems to share, contribute, manage and track code.", "Separately compile code modules and leverage build automation tools to do so efficiently.", "Module 0: Linux Shell, a first look", "Module 2: Testing and Debugging", "Module 9: Debugging", "Each lab consists of a number of lab problems.", "Each lab problem has two associated values, a lower one called the pass threshold and a higher one called the completion threshold.", "Special note on test cases: if a lab question asks you to submit test cases, you must create these tests yourself.", "Do not directly copy code from GenAI.", "Do not ask GenAI for a step-by-step breakdown of how to solve a lab problem.", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 1, "course_code": "CS 341", "course_name": "CS341 - Algorithms (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Algorithms Winter 2025", "10:00AM - 11:20AM MC 4061", "08:30AM - 09:50AM MC 1056", "The study of efficient algorithms and effective algorithm design techniques.", "Topics include divide and conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph search and backtrack, problems without algorithms, NP-completeness and its implications.", "DPV", "Introduction to Algorithms, by Cormen, Leiserson, Rivest and Stein, MIT Press.", "describe the main idea first,", "Extensions and Other Accommodations on Assignments", "Students can currently self-declare two kinds of absences on Quest: short-term absence and pandemic-related absence.", "Since a short-term absence lasts 2 days, this means the only accommodation we offer for a short-term absence is a 48 hour extension.", "If you request accommodations through AccessAbility Services (AAS) by filling out a Missed Course Component form, the accommodation is determined on a case-by-case basis through consultation with AAS, but will generally be one of the above options unless your situation is unusual.", "If you collaborate with others, you must clearly indicate the collaboration for each problem.", "This is not a software engineering course; we will not test your code against inputs that do not match our specifications.", "Continuity Plan", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 2, "course_code": "CS 350", "course_name": "CS350 - Operating Systems (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Operating Systems Winter 2025", "07:00PM - 08:50PM", "Bernard Wong bernard AT uwaterloo DOT ca", "Hong Zhang honzhang AT uwaterloo DOT ca", "Karen Anderson kaanders@uwaterloo.ca", "An introduction to the fundamentals of operating system function, design, and implementation.", "Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security.", "An introduction to the fundamentals of operating system function, design, and implementation.", "Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security.", "Operating System Introduction (2 hours)", "Historical overview of operating system development.", "Simple memory management techniques: partitioning, dynamic loading, simple segmentation.", "File Systems (6 hours)", "Bonus content on a current topic in computing", "In a general way, understand operating systems: what they do, how they are used, and how they are implemented.", "Introduction Chapters 1-2 Intro  Slides", "Process API    Slides", "Fibers", "Synchronization", "System Calls and Exceptions   Context Switch & Sys Calls  Slides", "Virtual Memory Chapters 8,9 Address Spaces   Memory API", "Smaller Page Tables", "Devices and I/O Chapters 12 and 13 I/O Devices  Hard Disk Drives  Slides Disk", "File Systems Chapters 10 and 11 (excluding 11.8, 11.9) Files and Directories", "File System Implementation", "FSCK & Journaling  Slides Part 1", "Bonus: Debugging     Slides", "A Collection of Tutorials and Useful Information", "An Introduction to Programming with Threads, by Andrew Birrell", "Assignment 3: File Systems", "Operating System Concepts, 8th edition Silberschatz, Galvin and Gagne (John Wiley and Sons) No available free on-line", "We will be using a system for class-related discussions and announcements called Piazza.", "Piazza can generate a large volume of e-mails, and these settings may be modified to reduce the frequency of received notifications (as well as what types of notifications are received).", "Debugging: GDB Online Documentation", "An Introduction to Programming with Threads, by Andrew Birrell", "System V ABI", "COS Source Code and Documentation:", "Source Code Documentation", "OpenGrok Source Code Search", "OpenGrok Source Code Navigation", "Exams", "You are welcome to use these tools to help you understand the course material, but you must not:", "cut-and-paste your assignment code into them for debugging assistance.", "Also, these tools will not be available when you write the exam, so you need to understand how to solve these problems yourself in order to pass the course.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 3, "course_code": "AMATH 242", "course_name": "AMATH242 - Introduction to Computational Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Introduction to Computational Mathematics Winter 2025", "10:00AM - 11:20AM MC 1085", "A rigorous introduction to the field of computational mathematics.", "The focus is on the interplay between continuous models and their solution via discrete processes.", "Topics include pitfalls in computation, solution of linear systems, interpolation, discrete Fourier transforms, and numerical integration.", "Explain the shortcomings of finite precision arithmetic", "Analyze problems in terms of conditioning, and algorithms in terms of stability", "Know some common and basic algorithms in computational mathematics, e.g. Numerical solution of linear systems, Numerical Integration, etc.", "Apply these algorithms to solve problems from various domains", "Errors and Error Propagation(Chapter 1)", "Floating point numbers and operations (1.2)", "Standard floating point systems (1.2.2)", "Condition of a Mathematical Problem (1.3)", "Four Algorithms for Root Finding (2.2)", "Numerical Linear Algebra(Chapter 3)", "Algorithm and computational cost (3.2.3)", "Week of February 3(V)", "Condition and stability(3.3)", "Iterative Methods for solving Ax = b (3.4)", "Jacobi and Gauss-Seidel Methods (3.4.1)", "Week of February 24(VII)", "Piecewise Linear Interpolation (5.2.1)", "Week of March 3(VIII)", "Integration (chapter 6)", "Integration of an Interpolating Polynomial (6.1)", "Accuracy, Truncation Error and Degree of Precision", "Gaussian Integration (6.3)", "Week of March 17(X)", "Introduction to Scientific Computing, Van Loan, Prentice Hall, 2000 No", "Introduction to Scientific Computing and Data Analysis by Mark Holmes Available on the library website No", "Students are expected to provide well commented code with the expectation that what a code is doing can be well understood (there will be a small number of marks for each coding programming question set aside for this).", "Most of the marks for the computational problems will be given for the description of the algorithm and the explanation of results and/or outputs.", "Submitting \"raw code\" will earn very few marks.", "Figures and graphs should be carefully created to present the data and conclusions in an effective and clear manner.", "Requests related to the missed materials are handled by the instructor on a case-by-case basis, except when they fall under the Faculty of Mathematics guidelines (see https://uwaterloo.ca/math/accommodations)."]}, {"course_id": 4, "course_code": "CS 370", "course_name": "CS370 - Numerical Computation (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["10:00AM - 11:20AM MC 2034", "Monday -", "Monday", "Principles and practices of basic numerical computation as a key aspect of scientific computation.", "Approximation by splines, fast Fourier transforms, solution of linear and nonlinear equations, differential equations, floating point number systems, error, stability.", "Understand floating point number representations and their limitations", "Analyze rounding error in a floating point calculation", "Perform stability and trunction error analyses of time integrators", "Understand and perform the fast Fourier transform for 1D and 2D numerical data", "Solve linear systems and perform basic linear algebra manipulations using LU factorizations", "Evaluate asymptotic behavior of numerical linear algebra operations in terms of floating point operations", "Use power iteration to find the dominant eigenvalue of a matrix", "Week of Jan 20: Splines & Parameterized Curves", "Week of Mar 3: FFT Applications", "Week of Mar 10: Google Page Rank / Power iteration", "Week of Mar 17: Gaussian Elimination & LU factorization", "Week of Mar 23: Numerical Linear Algebra Norms and Conditioning", "Week of Mar 31: More Numerical Linear Algebra, End of classes", "You should start the first assignment as soon as possible to begin setting up and getting familiar with these tools.", "The official guide for installing and using Jupyter is here: https://docs.jupyter.org/en/latest/install.html", "There are a huge number of online sources of introductory material for working with Jupyter/Python.", "The focus of this course is on learning general numerical computing concepts, rather than the syntax of a particular programming language.", "Please inform the instructor to make the deadline adjustment.", "Your code is an important part of the assignment, and as such it should be readable and well-commented.", "Assignment figures and graphs should be carefully thought out and labelled to present the data and your conclusions in an effective and clear manner.", "Any code and algorithms you write should be sufficiently well documented through code comments or descriptions as to be readily understood.", "This code submission should allow the TAs to run your code if and when necessary to verify the results that your code produces.", "Collaboration and Plagiarism", "We encourage you to discuss general concepts and problems with classmates, TAs, and instructors.", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments", "Intellectual property includes items such as:", "Avoiding Academic Offenses", "With these facts in mind, one way that everyone in our class can contribute to a safer and more equitable learning environment is to  stay home when you are ill and, at minimum, wear a mask if you suspect you might be contagious.", "A range of on- and off-campus resources are available including:"]}, {"course_id": 5, "course_code": "CS 371", "course_name": "CS371 - Introduction to Computational Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Introduction to Computational Mathematics Winter 2025", "10:00AM - 11:20AM MC 1085", "A rigorous introduction to the field of computational mathematics.", "The focus is on the interplay between continuous models and their solution via discrete processes.", "Topics include pitfalls in computation, solution of linear systems, interpolation, discrete Fourier transforms, and numerical integration.", "Explain the shortcomings of finite precision arithmetic", "Analyze problems in terms of conditioning, and algorithms in terms of stability", "Know some common and basic algorithms in computational mathematics, e.g. Numerical solution of linear systems, Numerical Integration, etc.", "Apply these algorithms to solve problems from various domains", "Errors and Error Propagation(Chapter 1)", "Floating point numbers and operations (1.2)", "Standard floating point systems (1.2.2)", "Condition of a Mathematical Problem (1.3)", "Four Algorithms for Root Finding (2.2)", "Numerical Linear Algebra(Chapter 3)", "Algorithm and computational cost (3.2.3)", "Week of February 3(V)", "Condition and stability(3.3)", "Iterative Methods for solving Ax = b (3.4)", "Jacobi and Gauss-Seidel Methods (3.4.1)", "Week of February 24(VII)", "Piecewise Linear Interpolation (5.2.1)", "Week of March 3(VIII)", "Integration (chapter 6)", "Integration of an Interpolating Polynomial (6.1)", "Accuracy, Truncation Error and Degree of Precision", "Gaussian Integration (6.3)", "Week of March 17(X)", "Introduction to Scientific Computing, Van Loan, Prentice Hall, 2000 No", "Introduction to Scientific Computing and Data Analysis by Mark Holmes Available on the library website No", "Students are expected to provide well commented code with the expectation that what a code is doing can be well understood (there will be a small number of marks for each coding programming question set aside for this).", "Most of the marks for the computational problems will be given for the description of the algorithm and the explanation of results and/or outputs.", "Submitting \"raw code\" will earn very few marks.", "Figures and graphs should be carefully created to present the data and conclusions in an effective and clear manner.", "Requests related to the missed materials are handled by the instructor on a case-by-case basis, except when they fall under the Faculty of Mathematics guidelines (see https://uwaterloo.ca/math/accommodations)."]}, {"course_id": 6, "course_code": "CS 240", "course_name": "CS240 - Data Structures and Data Management (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Data Structures and Data Management Winter 2025", "10:00AM - 11:20AM RCH 112", "11:30AM -", "10:30AM - 11:20AM MC 4040", "11:30AM - 12:20PM MC 4040", "Email: oveksler@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "All of Tom's consulting hours are in-person in MC 4065.", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Instructional Support Coordinator: Karen Anderson", "Email: kaanders@uwaterloo.ca", "Introduction to widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms.", "CS 240: Data Structures and Data Management", "This course introduces widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms.", "Analyze, apply, and use various data structures and data-management techniques in a variety of applications", "Perform rigorous complexity analyses of simple algorithms and data structures, which includes writing correct mathematical proofs on inductively-defined structures and solving simple recurrence relations", "Select a good data structure to solve a specific algorithmic problem", "Apply data structures correctly and efficiently in one or more high-level programming languages, including C++", "Audience", "Successors: Most third-year CS major courses", "Conflicts: Other courses that seriously consider efficiency and correctness of fundamental data structures and their algorithms", "Analytical:", "Define and explain order notation; perform complexity analyses of simple algorithms", "Perform basic computations of discrete probability and expectation", "Use mathematical induction on recursively defined structures, including finding simple errors in inductive arguments", "Prove simple properties of program fragments correct through the use of pre-conditions and post-conditions for loops and recursive calls", "Computational and algorithmic:", "Design, implement, test, and debug C++ programs to solve problems requiring hundreds of lines of code", "Define the ADTs for stacks and queues; write efficient implementations in C/C++", "Describe tree structures, including binary search trees and multi-way trees; use these structures in C/C++ programs", "Describe basic sorting algorithms (including Quicksort) and implement them in C/C++", "Perform rigorous asymptotic analyses of simple algorithms and express the result using order notation; compare algorithms based on their asymptotic complexity; and prove formal results involving order notation", "Apply the priority-queue ADT to solve various application problems, implement a priority queue using heaps, and analyze the complexity of common implementations of heap operations", "Develop best-, worst- and average-case analyses of sorting algorithms, including Quicksort, and explain the ramifications of these analyses in practice; explain the basic principles of randomized algorithms and their potential advantages, specifically in the case of Quicksort; explain the difference between comparison-based sorting and non-comparison-based sorting algorithms, and when and why the latter may run faster; and apply sorting-based techniques to algorithmic problems, such as elimination of duplicates", "Explain the advantages and disadvantages of various hashing techniques; identify the best hashing techniques to use in a particular application scenario; and recognize when hashing techniques are preferable to other dictionary implementations", "Design data structures for real-world data (where keys are often inherently multidimensional) in such a way that common operations (including range search) can be implemented efficiently", "Design special data structures that can efficiently store and process words and strings, and select and apply a suitable technique for data compression in a specific application scenario", "Introduction and review (3 hours)", "Basic computer model: the random-access machine", "Runtime of an algorithm: worst-case, best-case, and average-case", "Review of stacks and queues", "Priority queue ADT and simple implementations", "Sorting and analysis of randomized algorithms (5 hours)", "Quicksort (non-randomized): worst-case, best-case, and average-case complexity", "Randomized quicksort and its analysis; application to selection and its analysis", "Lower bound on comparison-based sorting", "Non-comparison-based sorting algorithms (e.g., Counting Sort and Radix Sort)", "Dictionary ADT and simple implementations", "Binary search trees (insert and delete operations and analysis)", "Key-indexed search, simple hash functions", "Range search in a binary search tree", "Algorithms and data structures for text processing (8 hours)", "Sometimes these include animations/overlays, in case of which there will be both a Display version (with them) and a Print version (omitting them, but otherwise the same content).", "The slides for each module will be posted as the term progresses.", "Module 1 Introduction and Asymptotic Analysis M1.pdf", "Module 3 Sorting, Average-Case and Randomized Algorithms M3.pdf", "Optional: Goodrich & Tamassia   8.3", "Module 8 Range-Searching in Dictionaries of Points   Course notes Chapter 8", "A0.tex", "A1.tex", "The following books are on reserve in the DC library for reference and additional resources:", "Algorithm Design and Applications (2015)", "Also covers cuckoo hashing.", "Sedgewick] Algorithms in C++, Third Edition (1998)", "Computational Geometry: Algorithms and Applications", "CLRS] Introduction to Algorithms, 2nd edition (2001)", "Introduction to Algorithms, 2nd edition is also avaliable online (in campus).", "This website will be the primary means of communication and distribution of materials for the course.", "The course uses a number of different tools for distributing information and receiving submissions.", "These are not worth credit, but may help you in self-testing your understanding of the material.", "Only one programming question can be shifted to the final exam.", "If more than this has verification for non-submittal, then it will be considered on a case-by-case basis.", "A student with a medical reason may not be granted an INC because they have not performed sufficiently well during the academic term.", "An INC will be granted ONLY if there is a strong reason for missing the exam (generally a serious medical issue verified by a doctor's note) AND a satisfactory performance during the term (both assignments and midterm).", "Academic Dishonesty", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "The first criterion for marking is the correctness, the second criterion is efficiency.", "describe the main idea first in words,", "In the case that you are using facts stated in lectures/modules, be sure to cite where you got them from.)", "Files should be named .cpp, where the specific file name will be specified in the assignment.", "You should include sufficiently many comments in your code that the main ideas of design and correctness are clear.", "One-line changes: In the case you passed the public test, and failed some secret tests, if your program works with a one line change, then we may accept it for remarking and give some marks after deducting a penalty (typically 10-20% of the programming question).", "Here are some ways to create PDF files:", "Create your solution in LaTeX. LaTeX is a document preparation system that uses a mark-up language to write/create and co-ordinate different parts of documents, including diagrams and was introduced in Assignment 0.", "The following are least preferred methods since the results may be hard for markers to read and/or the files may be too large.", "Submitting a Re-Mark Request: Please email cs240@uwaterloo.ca in order to submit a request.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 7, "course_code": "CS 240E", "course_name": "CS240E - Data Structures and Data Management (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Data Structures and Data Management (Enriched)", "10:00AM - 11:20AM MC 4041", "Email: biedl [", "Email: cs240e", "All of Tom's consulting hours are in-person in MC 4065.", "Email: cs240", "Instructional Support Coordinator: Karen Anderson", "Email: kaanders [", "Module 1 Introduction and Asymptotic Analysis Course notes Chapter 1 (skip 1.5 for now)", "(updated)  Sorting, Average-Case and Randomized Algorithms Course notes Chapter 3 (and parts of 1.5)", "Optional: Goodrich & Tamassia   8.3", "Module 8 Range-Searching in Dictionaries of Points Course notes Chapter 8", "Tutorial 3 Friday, January 24 Average-case vs expected, sorting", "The following books are on reserve in the DC library for reference and additional resources:", "Algorithm Design and Applications (2015)", "Also covers cuckoo hashing.", "Sedgewick] Algorithms in C++, Third Edition (1998)", "Computational Geometry: Algorithms and Applications", "CLRS] Introduction to Algorithms, 2nd edition (2001)", "Introduction to Algorithms, 2nd edition is also avaliable online (in campus).", "Only one programming question can be shifted to the final exam.", "If more than this has verification for non-submittal, then it will be considered on a case-by-case basis.", "A student with a medical reason may not be granted an INC because they have not performed sufficiently well during the academic term.", "An INC will be granted ONLY if there is a strong reason for missing the exam (generally a serious medical issue verified by a doctor's note) AND a satisfactory performance during the term (both assignments and midterm).", "Academic Dishonesty", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "Communication & Resources in CS 240E", "CS240E uses a variety of platforms in order to communicate and provide course materials to students.", "If your issue is confidential, but not specifically for one member of the course personnel, then a better option might be a private post to piazza.", "You can ignore these if you are comfortable with the material.", "Written assignments are submitted electronically using Crowdmark - a web-based submission and marking system.", "To submit files for Assignments, follow these instructions:", "Under each question, you can select files to add them to your submission for that question.", "You can submit and re-submit files as many times as you want before the deadline.", "Logging In", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 8, "course_code": "CS 241", "course_name": "CS241 - Foundations of Sequential Programs (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["ISA", "Yiwen Dong", "ISC", "The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages.", "Write short machine- and assembly-language programs to perform simple data manipulation", "Write a basic assembler supporting labels", "Give formal specifications for regular languages, including regular expressions and finite-state machines", "Write a scanner capable of dealing with a typical high-level programming language (given the specification)", "Give a grammar for a context-free language and create derivations for strings in a context-free language", "Perform context-sensitive analysis including type checking for high-level languages", "Write a simple code generator for an imperative language, i.e., one doing little or no optimization", "Apply appropriate design decisions when programming in C/C++ based on a detailed understanding of the way memory is used by a running C/C++ program", "Week 1: Introduction and Modules 1, 2", "20M+40F", "This course includes the independent development and practice of specific skills, such as development of large software artifacts.", "Library for research-based assignments"]}, {"course_id": 9, "course_code": "CS 241E", "course_name": "CS241E - Foundations of Sequential Programs (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["03:30PM - 04:20PM MC 1056", "02:30PM - 03:20PM", "07:00PM - 08:50PM", "The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages.", "Non-enriched version: Any CS 241E student may switch to the regular version of CS 241 during the first two weeks of lectures.", "Machine-level implementation of high-level language features (9 hours)", "Introduction to formal languages.", "Regular languages, regular expressions and finite state machines.", "Semantic Analysis and Code generation (6 hours)", "Dynamic Memory Allocation.", "Write short machine- and assembly-language programs to perform simple data manipulation.", "Write a basic assembler supporting labels.", "Give formal specifications for regular languages, including regular expressions and bubble diagrams.", "Write a scanner capable of dealing with a typical high-level programming language (given the specification).", "Give a grammar for a context-free language and, given a grammar, produce a derivation for a given string in the language.", "Write a simple code generator for an imperative language, i.e., one doing little or no optimization.", "Apply appropriate design decisions when programming in C/C++ based on a detailed understanding of the way memory is used by a running C/C++ program.", "I Sept. 5 Introduction", "A link to the Marmoset system and instructions for using it may be found on the course web page.", "Intellectual property includes items such as:", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as implementing and debugging a compiler.", "Library for research-based assignments"]}, {"course_id": 10, "course_code": "CS 245", "course_name": "CS245 - Logic and Computation (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Logic and Computation Winter 2025", "10:30AM - 11:20AM MC 4041", "Formalizing the notions of correct and incorrect reasoning, defining what is computable, and exploring the limits of computation.", "The course covers a variety of topics related to logic and computation that are required as background for other courses in Computer Science.", "It differs both in tone and content from a logic course one would typically find in a mathematics program.", "Develop mathematical reasoning skills", "Improve understanding of propositional and first-order logic, including key notions, such as: expressing natural language statements as logical formulas, distinguishing between correct and incorrect reasoning (between valid and invalid logical arguments), constructing a formal proof, distinguishing between syntax and semantics", "Explore the limits of computers, including decidability and undecidability", "Introduction", "Structural induction and its use in proving statements about formulas", "Adequate sets of connectives", "Soundness and completeness of formal deduction", "Applications of propositional logic to computer science, such as: Automated proofs: Resolution, Davis-Putnam Procedure; Hardware and software veri\ufb01cation", "First-Order Logic", "Limitations of propositional logic, and the necessity of first-order logic for reasoning about objects and properties", "Quanti\ufb01ers, universe of discourse, translation between English and first-order logic formulas", "Syntax of first-order logic: terms, formulas", "Semantics of first-order logic: valuations", "Proving argument validity in first-order logic (semantically)", "Formal deduction in first-order logic; Proving argument validity by formal deduction (syntactically)", "Applications of first-order logic to computer science, such as: Automated theorem provers and veri\ufb01ers; Databases", "Decidability and Peano Arithmetic", "Turing Machine as a model of computation", "Undecidability: Basic notions, undecidability of the Halting Problem and other decision problems", "The Peano axioms for number theory (including the induction axiom), undecidability of Peano Arithmetic", "An Important Application of Logic to Computer Science", "Hoare triples", "partial and total correctness", "Formalize English sentences into properly formed formulas in the propositional and first-order logic and, conversely, interpret such formulas in English", "Formalize the notion of correct reasoning and proof, and be able to construct formal proofs", "Realize the limitation of formal proof systems", "Understand the applications of logic to computer science", "This means that you must decide whether to exercise your option to submit late before the deadline, and refrain from making a partial submission in this case.", "There will be a marked quiz due in each week when there will not be a Crowdmark assignment due or a mid-term examination.", "This course includes the independent development and practice of specific skills, including writing numerous proofs using numerous abstract definitions.", "Library for research-based assignments"]}, {"course_id": 11, "course_code": "CS 245E", "course_name": "CS245E - Logic and Computation (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["10:00AM - 11:20AM MC 2034", "Tuesday -", "This includes:", "Basic sematic notions:", "Truth tables", "A formal proof system for Propositional logic", "Soundness and completeness theorems for the proof system", "Basic sematic notions", "Structures for a vocabulary", "Logical truths and logical implications", "Translations between FOL formulas and English and mathematical statements.", "A formal proof system for Predicate logic", "Soundness theorem for the proof system", "However, the focus of this version of the course is more on fundamental and mathematical concepts (on the expense of developing technical skills, such as designing formal proofs).", "We will use propositional logic as a main tool for demonstration key logical concepts such as", "Structural induction its justification and many applications.", "soundness and completeness theorems", "the expressive power of the logic (what can and what cannot be expressed).", "We will revisit these topics for first order logic.", "Finally, we will discuss applications of logic to computer science, in particular showing limitations of computations (undesirability)."]}, {"course_id": 12, "course_code": "CS 246", "course_name": "CS246 - Object-Oriented Software Development (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Object-Oriented Software Development Winter 2025", "10:00AM - 11:20AM MC 1056", "10:30AM - 11:20AM MC 3003", "11:30AM - 12:20PM MC 3003", "Tuesday -", "Ross Evans rpevans@uwaterloo.ca", "Introduction to object-oriented programming and to tools and techniques for software development.", "Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites.", "This course introduces students to object-oriented programming in C++ to facilitate designing, coding, debugging, testing, and documenting medium-sized programs.", "Students learn to read a specification and design software to implement it.", "Important skills are selecting appropriate data structures and control structures, writing reusable code, reusing existing code, understanding basic performance issues, developing debugging skills, and learning to test a program.", "C++", "Introduction to C++", "I/O and Strings", "Basic language constructs and Functions", "Exceptions", "Introduction to Templates", "Exception safety", "Template functions and algorithms", "Object-Oriented Programming", "UML class models", "Constructors and Destructors", "Encapsulation", "Inheritance", "Design patterns: Iterator, Observer, Decorator, Factory method, Template method, Non-virtual interface (NVI), and the Pimpl idiom", "Inheritance: vtables", "Multiple inheritance", "Design quality", "MVC (model-view-controller) architecture", "Design, implement, test, and debug C++ programs to solve problems requiring hundreds of lines of code, making appropriate use of", "types, variables, arrays, strings, and dynamic memory; loops, conditionals, and other control structures; structures, unions, and enumerations; procedures and functions; the preprocessor; formatted and unformatted I/O", "a subset of the STL, including vector, list, and map", "assertions and exceptions", "test suites for regression testing, white and black box testing", "structured programming, incremental development", "interface design, abstractions, information hiding, cohesion and coupling", "a subset of UML to specify classes, objects and relationships among them", "a selection of design patterns", "Explain the following properties of the memory model used in C++, including their impact on time and space efficiency when designing code: bytes vs. words, memory as an array, run-time stack and stack frames, memory allocation on the heap vs. automatic allocation on the stack, pointers as memory addresses, the representation of objects in memory", "You must complete A0 in order to receive marks for the rest of the course.", "A1 Basic C++ Monday, January 20 Monday, January 27 5", "A2 Introduction to OOP Monday, February 3 Monday, February 10 6", "A4 Design Patterns Monday, March 10 Monday, March 17 8", "Note: Marmoset is not a compiler!", "Do not submit C++ code to Marmoset, without first attempting to compile it yourself.", "Students from different sections can be in the same group.", "Working on a group is an important learning experience for software development in a team.", "Students in a group will be responsible for forming and managing the group.", "Please be very careful in selecting your group as there are always groups that end up having major issues every term.", "Exams", "Examination Date Final Grade Weight", "Each weekly set of problems completed succesfully can be used to replace 0.5% of the final grade from the final exam.", "In the case where both a midterm and final exam can be held, the final course grade will be calculated from the following components and weights:", "To pass the course, you must satisfy these three conditions:", "A grade of at least 45% on the weighted average of assignments A1-A4", "Assignments1to4  = (A1*5 + A2*6 + A3*6 + A4*8) / 25", "Normal = A1*5 + A2*6 + A3*6 + A4*8 + A5*15 + Midterm*20 + Final*(40-0.5*TutorialsCompleted) + 0.5*TutorialsCompleted", "if (MidtermInPerson==TRUE && FinalInPerson==TRUE)", "else", "if (MidtermInPerson==FALSE && FinalInPerson==TRUE)", "else", "if (MidtermInPerson==TRUE && FinalInPerson==FALSE)", "else", "if (MidtermInPerson==FALSE && FinalInPerson==FALSE)", "else", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments"]}, {"course_id": 13, "course_code": "CS 246E", "course_name": "CS246E - Object-Oriented Software Development (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Object-Oriented Software Development (Enriched)", "Tuesday -", "CS246 description: Introduction to object-oriented programming and to tools and techniques for software development.", "Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites.)", "functions and classes as the basic building blocks for abstractions", "function and class templates; exception safety", "object-oriented design principles; design patterns", "language features in combination", "Software library development for general client use.", "Principles of object-oriented software design.", "A selection of software design patterns.", "A1     10%", "Office hours: the list of office hours can be found at https://student.cs.uwaterloo.ca/~cs246e/F24/officehours.shtml", "Note: Marmoset is not a compiler!", "Please do not submit C++ code to Marmoset without first attempting to compile it yourself.", "The release test for a problem gives you the result of running your program on one basic test case (usually a case that appears in the assignment specification).", "So be sure to test your code thoroughly, so that you pass as many of our secret tests as possible.", "Testing", "Hand-Marking", "Note that correctly-working code is only one component of an assignment mark.", "Intellectual property includes items such as:", "CAN I POST MY CODE ONLINE?", "The second complicating factor concerns the question of who actually owns assignment solutions.", "The instructor supplies the question, a framework for the solution (including rules, guidelines, and possibly some starter code or libraries) and has in mind the general structure of what a correct solution ought to look like.", "the instructor(s) may permit posting of only those portions of assignments that were not provided as starter code;", "The instructors' policy for a given offering of a course will be stated in the course outline.", "If you wish to share your code with potential employers, and your instructor does not permit you to publicly post your solutions, you may host your code in a private repository, and provide a password to potential employers (for example, on your resume).", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 14, "course_code": "CS 251", "course_name": "CS251 - Computer Organization and Design (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Notice of Recording", "Computer Organization and Design Winter 2025", "11:30AM -", "RCH 307", "10:30AM - 11:20AM EV3 1408", "Silvia Zhang cs251@uwaterloo.ca", "Basics of digital logic design.", "Data representation and manipulation.", "Basics of processor design.", "This course enables students to develop an accurate mental model of the architecture and organization of physical computers and it introduces them to theoretical and practical concepts relevant to the structure and design of modern digital computers.", "Design simple combinational and sequential hardware at the logic gate level in order to implement simple algorithms and computations, such as addition, multiplication, and data-path control for processors.", "Describe number systems used by computer hardware, including IEEE floating point and two's complement.", "Analyze how machine language is executed by hardware, and describe a simple pipelined processor architecture for executing a RISC machine language.", "Explain basic cache and virtual-memory architectures, and how they can impact performance.", "Introduction and ARM (~3 hours)", "Combinational logic and basic components.", "Basic Processor Design (~9 hours)", "Processor design using single-cycle control.", "Multi-cycle control.", "Virtual memory.", "Multi-processor systems and core processors.", "Patterson and Hennessy: \"Computer Organization and Design\".", "Students registering their clicker for other sections will receive a grade of zero on clicker questions.", "else", "Notice of Recording", "In general, assignments submitted late and without an approved extension by the course ISC will not be accepted and will be given a grade of zero.", "If a student makes a short-term 48-hour declaration, they may contact the course ISC to obtain a 48-hour extension.", "Note that penalties are significantly higher for exams and for repeat offenders.", "Discussion of assignments is allowed, but each student must hand in their own copy of the assignment and word-for-word copying is not allowed.", "In-Class Discipline", "A student who is found to be disruptive during lectures will be given only one verbal warning for the term.", "Students should attend the section they're enrolled in and only the section they're enrolled in", "Further, a weekly quiz will be given and used in place of clickers in the marking scheme.", "Dropping lowest clickers marks, lowest quiz score", "Online Exams", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:"]}, {"course_id": 16, "course_code": "CS 360", "course_name": "CS360 - Introduction to the Theory of Computing (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Introduction to the Theory of Computing Fall 2024", "07:00PM - 08:50PM", "Models of computers including finite automata and Turing machines.", "Alternate characterizations of language classes.", "Introduction to the theory of computation.", "Provide students with the necessary tools and a solid foundation to understand the main concepts in the field.", "Lecture 0 Sep 4th Introduction & Course Overview", "Lecture 7 Sep 27th Boolean Circuits & Formulas", "Lecture 11 Oct 9th Randomized Computation & BPP", "Throughout the course webpage, we will refer to these resources in the following format:", "P", "Prof. Blais\u2019 CS 365", "Average-Case Complexity", "B", "The homework LaTeX template will have a field for each problem for you to fill in.", "Intellectual property includes items such as:"]}, {"course_id": 17, "course_code": "CS 365", "course_name": "CS365 - Models of Computation (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Models of Computation Winter 2025", "10:00AM - 11:20AM MC 2066", "E. Blais", "Eric Blais", "Diagonalization and hierarchies.", "CS365 covers the material in CS360 at an accelerated pace plus additional topics in computational complexity.", "Significant emphasis is placed on the additional topics in complexity theory in this year's offering of CS 365, with correspondingly less emphasis on finite and pushdown automata.", "The final exam will be a written examination held during the official exam period."]}, {"course_id": 18, "course_code": "MATH 237", "course_name": "MATH237 - Calculus 3 for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["The gradient vector and the directional derivative.", "Multiple integrals in various co-ordinate systems.", "Choose appropriate techniques from differential multivariable calculus to solve optimization problems both with and without constraints.", "Choose appropriate coordinate systems, build linear mappings, and apply the Change of Variable Theorem to evaluate double and triple integrals.", "Unit 1: Graphs of Scalar Functions", "Unit 3: Continuous Functions", "Week 3 Unit 4: The Linear Approximation and Partial Derivatives MA Unit 4", "Unit 7: Directional Derivatives and the Gradient Vector", "Unit 11: Coordinate Systems", "Unit 13: Jacobians and Inverse Mappings", "Beyond this, no extensions will be given without a timely and documented justified cause, including opportunely and officially reporting absences to the university.", "Communication Etiquette", "Avoiding Academic Offences", "If you are unable to acquire one of these calculators, you must contact your instructor in the first week or two of the course so an equivalent alternative can be identified and added to the exam proctors' list of permitted aids.", "This course includes the independent development and practice of specific skills, such as: analyze functions of two or more variables with respect to limits, continuity, differentiability, and linear approximation; choose appropriate techniques from differential multivariable calculus to solve optimization problems; choose appropriate coordinate systems, build linear mappings, and apply the Change of Variable Theorem to evaluate double and triple integrals.", "Library for research-based assignments"]}, {"course_id": 19, "course_code": "MATH 247", "course_name": "MATH247 - Calculus 3 (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Topology on RN: completeness, closed and open sets, connectivity, compact sets, continuity, uniform continuity. (~3 weeks)", "Differentiation: partial differentiability, differentiability, chain rule, [midterm likely here], Taylor polynomials, extreme value problems. (~4 weeks)", "Integration: Jordan content, integrability criteria, Fubini's theorem, change of variables. (~3 weeks)", "Local properties of continuously differentiable functions:  open mapping theorem, inverse function theorem, implicit function theorem. (~2 weeks)", "11:30AM - 12:20PM QNC 2501", "Local properties of continuously differentiable functions: open mapping theorem, inverse function theorem, implicit function theorem.", "Topology of real n-dimensional space: completeness, closed and open sets, connectivity, compact sets, continuity, uniform continuity. Differential calculus on multivariable functions: partial differentiability, differentiability, chain rule, Taylor polynomials, extreme value problems. Riemann integration: Jordan content, integrability criteria, Fubini's theorem, change of variables. Local properties of continuously differentiable functions: open mapping theorem, inverse function theorem, implicit function theorem."]}, {"course_id": 20, "course_code": "MATH 239", "course_name": "MATH239 - Introduction to Combinatorics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Introduction to Combinatorics Winter 2025", "11:30AM - 12:20PM MC 4059", "09:30AM - 10:20AM MC 4021", "P. Nelson", "08:30AM - 09:20AM QNC 1502", "S. Pfannerer-Mittas", "10:30AM - 11:20AM MC 4058", "11:30AM - 12:20PM MC 4058", "09:30AM - 10:20AM MC 4042", "02:30PM - 03:20PM", "10:30AM - 11:20AM PHY 150", "04:30PM - 05:20PM", "You should have no reason to contact them directly, but you can find their email addresses through Learn.", "First name Last name", "Guilherme Zeus Dantas E Moura", "Theodore Morrison", "Matthew Kroeker", "Introduction to graph theory: colourings, matchings, connectivity, planarity.", "Introduction to combinatorial analysis: generating series, recurrence relations, binary strings, plane trees.", "MATH 239 is an introduction to combinatorics with a particular focus on counting techniques and graph theory.", "extract coefficients from rational generating series", "find maximum matchings in bipartite graphs", "understand and use the concepts of paths, cycles, trees, bipartiteness, and planarity in graph theory", "be comfortable writing proofs for results on discrete objects", "2 Jan 13,15,17 Generating series, Sum and Product lemmas, Negative Binomial Theorem, Integer Compositions Part I: 2.1-2.3", "5 Feb 3,5,7 Solving linear recurrence relations, Binary trees, irrational generating series Part I: 4.1, 4.2, 4.4 Assignment 4, Feb 7", "6 Feb 10,12,14 Introduction to graph theory Part II: 4.1-4.6 Assignment 5, Feb 14", "Grading scheme A", "Students are encouraged to collaborate on solving the questions but each student must write their own solutions independently in their own words.", "Please inform of us these at the start of the course.", "Library for research-based assignments"]}, {"course_id": 21, "course_code": "MATH 249", "course_name": "MATH249 - Introduction to Combinatorics (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Introduction to Combinatorics (Advanced Level)", "09:30AM - 10:20AM MC 2017", "For graph theory, while we will focus on the same topics covered in MATH 239 (planarity and bipartite matching), our coverage of those topics will differ substantially in depth and in the techniques that we employ; in particular, we will see striking applications of algebra.", "extract coefficients from rational generating series", "find maximum matchings in bipartite graphs", "understand and use the concepts of paths, cycles, trees, bipartiteness, and planarity in graph theory", "be comfortable writing proofs for results on discrete objects", "2 Jan 13,15,17 Generating series, Sum and Product lemmas, Negative Binomial Theorem, Integer Compositions Part I: 2.1-2.3", "5 Feb 3,5,7 Solving linear recurrence relations, Binary trees, irrational generating series Part I: 4.1, 4.2, 4.4 Assignment 4, Feb 7", "6 Feb 10,12,14 Introduction to graph theory Part II: 4.1-4.6 Assignment 5, Feb 14", "Grading scheme A", "Students are encouraged to collaborate on solving the questions but each student must write their own solutions independently in their own words.", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 22, "course_code": "ACTSC 221", "course_name": "ACTSC221 - Introductory Financial Mathematics (Non-Specialist Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["ACTSC 221", "ACTSC 221 001", "I work from home on Tuesday and Thursday and I will have some availability on those days for Teams-based meetings.", "Email: bmatheson@uwaterloo.ca", "The theory of rates of interest and discount; annuities and sinking funds with practical applications to mortgage and bond questions.", "View requirements for ACTSC 221", "Be able to understand the basics of what drives the price of a stock using the Dividend Discount Model (DDM).", "Day", "Test Date & Coverage", "Module 1: Introduction to Interest: Sections a to d", "Module 1: Introduction to Interest: Sections e to i", "A1", "A2", "Family Day - No Lecture", "Module 3: Loans and Debts: Sections a and b", "Module 3: Loans and Debts: Sections c and d", "A4", "These dates largely correspond to when you should be done a given week\u2019s work.", "I feel that you should attempt them after you finish the week\u2019s studying to see how you are grasping the materials."]}, {"course_id": 23, "course_code": "CO 353", "course_name": "CO353 - Computational Discrete Optimization (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Notice of Recording", "Computational Discrete Optimization Winter 2025", "08:30AM - 09:50AM E2 1732", "Formulations of combinatorial optimization problems, greedy algorithms, dynamic programming, branch-and-bound, cutting plane algorithms, decomposition techniques in integer programming, approximation algorithms.", "A discrete optimization problem, broadly speaking, involves a discrete set of feasible solutions and a real-valued objective function that assigns a value to each solution.", "Discrete optimization problems are of immense practical importance, are solved every day (sometimes each hour or more frequently) by many Fortune 500 companies;  well-known problems in the class include", "This course provides an introduction to the broad field of discrete optimization and covers several classes of commonly used techniques for the design of algorithms, including:", "Dynamic programming,", "We will discuss algorithmic efficiency and introduce the basics of complexity theory.", "For NP-hard problems, we will explore the field of approximation algorithms, which provides efficient methods for computing solutions with guaranteed quality.", "Students will complete two practical projects as part of the course, where they will develop, implement, and test algorithms for specific discrete optimization problems.", "formulate discrete optimization problems;", "identify and apply algorithms that can be used to solve selected discrete optimization problems;", "prove correctness of above algorithms and results related to the structures of discrete optimization problems.", "\"The Design of Approximation Algorithms\" by David Williamson, David Shmoys No", "\"Approximation Algorithms\" by Vijay Vazirani No", "\"The Design of Approximation Algorithm\" by David Williamson, David Shmoys;", "\"Approximation Algorithms\" by Vijay Vazirani.", "Each collaboration and resource used to prepare the submission should be appropriately acknowledged in the submission.", "Projects are to be done in groups of two-three.", "Submissions not following the specified format might be assessed based only on their performance and correctness of their output without providing feedback.", "In case you are not able to participate in some of the assessments please visit this webpage to submit the required information.", "Notice of Recording", "If due to changes in regulations and guidelines, it becomes impossible for us to hold in-person lectures and office hours, the lectures and office hours will be held over Zoom."]}, {"course_id": 24, "course_code": "CO 380", "course_name": "CO380 - Mathematical Discovery and Invention (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Mathematical Discovery and Invention Spring 2024", "Email: sejaques@uwaterloo.ca", "Teaching assistants available for drop-in help and discussion:", "List roughly a dozen standard problem solving techniques and provide examples in which each is useful", "Select and apply standard problem solving techniques as appropriate to a given problem", "Exception: each student can use one 72-hour extension they can apply to one assignment."]}, {"course_id": 25, "course_code": "CO 480", "course_name": "CO480 - History of Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["History of Mathematics Spring 2023", "09:30AM - 10:20AM STC 0010", "logan.crew@uwaterloo.ca", "Understand and solve a variety of basic mathematical problems of historical interest.", "Compare and contrast modern mathematics with its historical development.", "Examine equity, diversity, and inclusion in historical and modern mathematics.", "Tutte Introduction Discussion     Friday, May 19, 2023, at 11:55 PM Ungraded", "5/15-5/19", "Egypt", "Euclid: The Elements", "5/23-5/26", "6/12-6/16", "Al-Khwarizmi", "6/19-6/23", "Al-Andalus", "6/26-6/30", "7/4-7/7", "7/10-7/14", "7/17-7/21", "7/24-7/28", "7/31", "Introduction Discussion Ungraded", "The First Edition is a complete version of your project.", "In the Editorial Review, your group will be randomly and anonymously assigned the First Edition of another equally-sized group for peer review using PEAR.", "In such a situation, we might consider flexible options, such as changing project requirements, and providing a mechanism for groups to break apart that no longer have the capability to meet in a suitable work environment.", "If you would require further assistance because of multiple required absences, contact me via email and we can discuss on a case-by-case basis.", "Late submissions for projects cannot be accepted, particularly due to the timely nature required for distributing First Editions for editorial review, and the necessity of preparing timely reviews for your peers.", "You are always welcome to email the course instructor with questions, and some extreme circumstances may be handled separately on a case-by-case basis, but do not depend on this."]}, {"course_id": 26, "course_code": "CO 487", "course_name": "CO487 - Applied Cryptography (0.50)", "term_name": "List 1", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Instructor: Samuel Jaques", "Email: sejaques@uwaterloo.ca", "Timothy Miller", "Nicolas Swanson", "A broad introduction to modern cryptography, highlighting the tools and techniques used to secure internet and messaging applications.", "It is one of the core technologies for securing the emerging information infrastructure.", "This course is a comprehensive introduction to modern cryptography that is aimed primarily at those interested in applications.", "In the area of public-key cryptography, topics will include an overview of specific systems (Diffie\u2013Hellman, RSA, DSA, etc.) and a few advanced protocols.", "The security of these schemes and the use of public-key techniques for generating digital signatures will be described.", "Linear and differential cryptanalysis of ciphers.", "Define the main information security goals of confidentiality, integrity, authentication, and availability", "Explain the intended security properties of each cryptographic primitive and analyze relationships between security properties", "Explain mathematical techniques underlying standardized cryptographic algorithms", "Identify flaws in uses of cryptographic algorithms", "Determine which cryptographic algorithms can be used and combined to build systems with desired functionality and security", "Understand and contextualize the cryptography and security around them in daily life", "0 1 (Jan 6-8) Introduction", "Symmetric Encryption", "3.6 9 Elliptic Curve Cryptography 4 Yes", "4   Applications", "Understanding Cryptography: From Established Symmetric and Asymmetric Ciphers to Post-Quantum Algorithms, 2nd edition, Springer, 2024 Primary reference.", "A1: January 23", "A4: March 20", "This will be clearly indicated for each such question.", "In that case you are required to work independently.", "These questions will test your ability to identify the important concepts introduced in lectures, and your understanding of them.", "In particular:", "Please inform us of these at the start of the course.", "Library for research-based assignments"]}, {"course_id": 28, "course_code": "STAT 440", "course_name": "STAT440 - Computational Inference (0.50)", "term_name": "List 1", "program_name": "Computer Science", "program_id": 40, "major_id": 8, "major_name": "Computer Science (Bachelor of Mathematics - Honours)", "topics": ["Computational Inference Winter 2025", "PHY 313", "Introduction to and application of computational methods in statistical inference.", "Monte Carlo evaluation of statistical procedures, exploration of the likelihood function through graphical and optimization techniques.", "Topics include expectation-maximization, Bootstrapping, Markov Chain Monte Carlo, and other computationally intensive methods.", "A1 Feb 4th", "A4 Apr 3rd"]}, {"course_id": 0, "course_code": "CS 136L", "course_name": "CS136L - Tools and Techniques for Software Development (0.25)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["Tools and Techniques for Software Development Winter 2025", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 3003", "E. Ciklabakkal", "E. Ciklabakkal", "08:30AM - 10:20AM MC 4042", "E. Ciklabakkal", "10:30AM - 12:20PM MC 4042", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 4060", "02:30PM - 04:20PM MC 4060", "E. Ciklabakkal", "10:30AM - 12:20PM MC 3003", "This course introduces students to tools and techniques useful in the software development lifecycle.", "Students learn to navigate and leverage commands and utilities in the Linux Command Line Shell.", "Students gain experience in version control software, writing scripts to automate tasks, and creating effective test cases to identify bugs.", "Students also gain experience in using built-in support for version control, testing, debugging, build automation, etc. in integrated development environments (IDEs).", "Interact with the Linux Operating System using a command line shell and gain familiarity with commands, utilities and tools.", "Create scripts to automate tasks and increase productivity while working on a software project.", "Design test cases and automate the testing process to check a program for functional correctness and incorrect memory usage.", "Use version control systems to share, contribute, manage and track code.", "Separately compile code modules and leverage build automation tools to do so efficiently.", "Module 0: Linux Shell, a first look", "Module 2: Testing and Debugging", "Module 9: Debugging", "Each lab consists of a number of lab problems.", "Each lab problem has two associated values, a lower one called the pass threshold and a higher one called the completion threshold.", "Special note on test cases: if a lab question asks you to submit test cases, you must create these tests yourself.", "Do not directly copy code from GenAI.", "Do not ask GenAI for a step-by-step breakdown of how to solve a lab problem.", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 1, "course_code": "CS 341", "course_name": "CS341 - Algorithms (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["Algorithms Winter 2025", "10:00AM - 11:20AM MC 4061", "08:30AM - 09:50AM MC 1056", "The study of efficient algorithms and effective algorithm design techniques.", "Topics include divide and conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph search and backtrack, problems without algorithms, NP-completeness and its implications.", "DPV", "Introduction to Algorithms, by Cormen, Leiserson, Rivest and Stein, MIT Press.", "describe the main idea first,", "Extensions and Other Accommodations on Assignments", "Students can currently self-declare two kinds of absences on Quest: short-term absence and pandemic-related absence.", "Since a short-term absence lasts 2 days, this means the only accommodation we offer for a short-term absence is a 48 hour extension.", "If you request accommodations through AccessAbility Services (AAS) by filling out a Missed Course Component form, the accommodation is determined on a case-by-case basis through consultation with AAS, but will generally be one of the above options unless your situation is unusual.", "If you collaborate with others, you must clearly indicate the collaboration for each problem.", "This is not a software engineering course; we will not test your code against inputs that do not match our specifications.", "Continuity Plan", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 2, "course_code": "CS 350", "course_name": "CS350 - Operating Systems (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["Operating Systems Winter 2025", "07:00PM - 08:50PM", "Bernard Wong bernard AT uwaterloo DOT ca", "Hong Zhang honzhang AT uwaterloo DOT ca", "Karen Anderson kaanders@uwaterloo.ca", "An introduction to the fundamentals of operating system function, design, and implementation.", "Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security.", "An introduction to the fundamentals of operating system function, design, and implementation.", "Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security.", "Operating System Introduction (2 hours)", "Historical overview of operating system development.", "Simple memory management techniques: partitioning, dynamic loading, simple segmentation.", "File Systems (6 hours)", "Bonus content on a current topic in computing", "In a general way, understand operating systems: what they do, how they are used, and how they are implemented.", "Introduction Chapters 1-2 Intro  Slides", "Process API    Slides", "Fibers", "Synchronization", "System Calls and Exceptions   Context Switch & Sys Calls  Slides", "Virtual Memory Chapters 8,9 Address Spaces   Memory API", "Smaller Page Tables", "Devices and I/O Chapters 12 and 13 I/O Devices  Hard Disk Drives  Slides Disk", "File Systems Chapters 10 and 11 (excluding 11.8, 11.9) Files and Directories", "File System Implementation", "FSCK & Journaling  Slides Part 1", "Bonus: Debugging     Slides", "A Collection of Tutorials and Useful Information", "An Introduction to Programming with Threads, by Andrew Birrell", "Assignment 3: File Systems", "Operating System Concepts, 8th edition Silberschatz, Galvin and Gagne (John Wiley and Sons) No available free on-line", "We will be using a system for class-related discussions and announcements called Piazza.", "Piazza can generate a large volume of e-mails, and these settings may be modified to reduce the frequency of received notifications (as well as what types of notifications are received).", "Debugging: GDB Online Documentation", "An Introduction to Programming with Threads, by Andrew Birrell", "System V ABI", "COS Source Code and Documentation:", "Source Code Documentation", "OpenGrok Source Code Search", "OpenGrok Source Code Navigation", "Exams", "You are welcome to use these tools to help you understand the course material, but you must not:", "cut-and-paste your assignment code into them for debugging assistance.", "Also, these tools will not be available when you write the exam, so you need to understand how to solve these problems yourself in order to pass the course.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 3, "course_code": "CS 136", "course_name": "CS136 - Elementary Algorithm Design and Data Abstraction (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["Elementary Algorithm Design and Data Abstraction Winter 2025", "08:30AM - 09:50AM MC 2017", "10:00AM - 11:20AM MC 2038", "10:00AM - 11:20AM MC 4059", "11:30AM -", "Monday -", "Monday", "07:00PM - 08:50PM", "This course builds on the techniques and patterns learned in CS135 while making the transition to use an imperative language.", "Topics discussed include iterative and recursive sorting algorithms; lists, stacks, queues, trees, and their application; abstract data types and their implementations.", "produce well-designed, properly formatted, documented and tested programs of a moderate size (200 lines) that can use basic I/O", "explain and demonstrate the use of the C memory model, including the explicit allocation and deallocation of memory", "explain and demonstrate the principles of modularization and abstraction", "implement, use and compare elementary data structures (structures, arrays, lists and trees) and abstract data type collections (stacks, queues, sequences, sets, dictionaries)", "If both exams are held in person", "If both exams must be held online", "If in-person exams cannot be held then they will be held online (if possible).", "You may also ask on the discussion forums in a private message.", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 4, "course_code": "CS 146", "course_name": "CS146 - Elementary Algorithm Design and Data Abstraction (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["Elementary Algorithm Design and Data Abstraction (Advanced Level)", "Monday -", "Monday", "07:00PM - 08:50PM", "02:30PM - 03:20PM", "Brad In-person MC 6427", "On-line Consulting Hours: Microsoft Teams", "CS 146: Elementary Algorithm Design and Data Abstraction (advanced version)", "To familiarize students with key concepts in introductory computer science from an imperative perspective and to contrast this with the functional perspective taken in CS 145;", "To allow students to complete the CS portion of their Math core requirements and, if desired, to continue on to second-year core courses in CS;", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "Introduction to C and elementary mutation in Scheme", "The memory model.", "Variable declaration, assignment and infix expressions in C. Basic I/O in C. Compilation.", "Algorithm analysis in C. File I/O in C and Scheme.", "Program organization and testing methods.", "Space analysis in C and Scheme.", "Mutable lists, queues, deques, and trees in C. Time-space tradeoffs among mutable and immutable ADT implementations.", "Low-level abstractions", "Pointer arithmetic in C. Arrays in C and vectors in Scheme.", "Strings in C. Elementary hashing.", "Libraries in C and Scheme.", "Implementing high-level abstractions", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "The provided slides are not a substitute for attendance in any first-year CS course, but in CS 146, there are no slides, and the lecture summaries made available after lecture are an even worse substitute for attendance.", "Lectures will involve the development of ideas summarized very tersely in the handouts, as well as on-the-fly development of code, analyses, and proofs.", "CS145 and CS146 were originally designed as a year-long unit of curriculum, but eventually the individual courses drifted in their own directions.", "1.1 A note on logistics", "1.2 Review of forms of recursion and associated proof techniques", "1.3 In preparation for side effects", "1.4 Output", "1.5 Input", "1.6 First Introduction to C", "1.8 Memoization", "1.9 Mutation in C", "1.11 Boxes in C", "1.12 Advanced mutation", "1.13 Aliasing in C", "1.14 Memory and vectors", "1.15 Vectors in Racket", "1.16 Arrays in C", "1.18 ADTs in C; Amortized Analysis", "2 SIMPL: a simple imperative language", "2.1 Syntax and informal semantics", "2.2 Examples in several languages", "2.3 Formal semantics", "2.5 Proving imperative programs correct", "A primitive imperative language", "3.1 A primitive imperative language", "3.2 The PRIMPL simulator", "3.4 The SIMPL to A-PRIMPL compiler", "3.6 Strings in C", "3.7 Adding functions to SIMPL", "3.8 Adding both arrays and functions to SIMPL", "3.9 Implementing lists in PRIMPL", "4 MMIX: a realistic instruction set", "4.1 A more realistic processor", "4.2 The MMIX architecture", "4.2.1 Branches and Jumps", "4.2.2 Example", "4.2.3 Software Interrupts", "4.2.5 A Problem with Branches and Jumps", "4.4 Towards a SIMPL to MMIX compiler", "5.1 Storing primitive values", "5.3 Managing memory", "5.4 Structural and pointer equality", "5.5 Function application in a Racket interpreter", "5.7 Justifying the cost of Racket primitives", "5.8 Moving towards implementation in an imperative language", "6.2 Zippers", "6.3 A continuation-passing interpreter", "6.6.2 Mark-and-sweep", "6.6.3 Copying garbage collection", "6.7 Heterogeneous Data in C", "6.8 Multidimensional Arrays in C", "6.10 Variable-length Argument Lists", "7.1 Continuation-passing style", "7.2 Exception handling", "7.3 Undelimited continuations", "7.4 Delimited continuations", "7.5 Racket\u2019s implementation of continuations", "In CS 146, we will examine the imperative paradigm, and compare and contrast the way that efficient algorithms and data structures are designed in imperative and functional languages.", "Racket is a laboratory for current research on aspects of functional programming languages, and we will continue to look at interesting topics in this area, perhaps at the cost of some coherency in the flow of material.", "They will not be due each week on the same day, as is common in the other first-year CS courses and the first-year Math courses.", "Assignment questions are the main way to reinforce and deepen your understanding of the concepts and skills discussed in lecture.", "You will submit program files electronically to the Marmoset system , which runs tests on your code and informs you of the results fairly rapidly.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "(Please also note that we may use the trends in a student's submission history to estimate the likelihood of other forms of cheating as well.)", "Library for research-based assignments"]}, {"course_id": 5, "course_code": "CS 240", "course_name": "CS240 - Data Structures and Data Management (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["Data Structures and Data Management Winter 2025", "10:00AM - 11:20AM RCH 112", "11:30AM -", "10:30AM - 11:20AM MC 4040", "11:30AM - 12:20PM MC 4040", "Email: oveksler@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "All of Tom's consulting hours are in-person in MC 4065.", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Instructional Support Coordinator: Karen Anderson", "Email: kaanders@uwaterloo.ca", "Introduction to widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms.", "CS 240: Data Structures and Data Management", "This course introduces widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms.", "Analyze, apply, and use various data structures and data-management techniques in a variety of applications", "Perform rigorous complexity analyses of simple algorithms and data structures, which includes writing correct mathematical proofs on inductively-defined structures and solving simple recurrence relations", "Select a good data structure to solve a specific algorithmic problem", "Apply data structures correctly and efficiently in one or more high-level programming languages, including C++", "Audience", "Successors: Most third-year CS major courses", "Conflicts: Other courses that seriously consider efficiency and correctness of fundamental data structures and their algorithms", "Analytical:", "Define and explain order notation; perform complexity analyses of simple algorithms", "Perform basic computations of discrete probability and expectation", "Use mathematical induction on recursively defined structures, including finding simple errors in inductive arguments", "Prove simple properties of program fragments correct through the use of pre-conditions and post-conditions for loops and recursive calls", "Computational and algorithmic:", "Design, implement, test, and debug C++ programs to solve problems requiring hundreds of lines of code", "Define the ADTs for stacks and queues; write efficient implementations in C/C++", "Describe tree structures, including binary search trees and multi-way trees; use these structures in C/C++ programs", "Describe basic sorting algorithms (including Quicksort) and implement them in C/C++", "Perform rigorous asymptotic analyses of simple algorithms and express the result using order notation; compare algorithms based on their asymptotic complexity; and prove formal results involving order notation", "Apply the priority-queue ADT to solve various application problems, implement a priority queue using heaps, and analyze the complexity of common implementations of heap operations", "Develop best-, worst- and average-case analyses of sorting algorithms, including Quicksort, and explain the ramifications of these analyses in practice; explain the basic principles of randomized algorithms and their potential advantages, specifically in the case of Quicksort; explain the difference between comparison-based sorting and non-comparison-based sorting algorithms, and when and why the latter may run faster; and apply sorting-based techniques to algorithmic problems, such as elimination of duplicates", "Explain the advantages and disadvantages of various hashing techniques; identify the best hashing techniques to use in a particular application scenario; and recognize when hashing techniques are preferable to other dictionary implementations", "Design data structures for real-world data (where keys are often inherently multidimensional) in such a way that common operations (including range search) can be implemented efficiently", "Design special data structures that can efficiently store and process words and strings, and select and apply a suitable technique for data compression in a specific application scenario", "Introduction and review (3 hours)", "Basic computer model: the random-access machine", "Runtime of an algorithm: worst-case, best-case, and average-case", "Review of stacks and queues", "Priority queue ADT and simple implementations", "Sorting and analysis of randomized algorithms (5 hours)", "Quicksort (non-randomized): worst-case, best-case, and average-case complexity", "Randomized quicksort and its analysis; application to selection and its analysis", "Lower bound on comparison-based sorting", "Non-comparison-based sorting algorithms (e.g., Counting Sort and Radix Sort)", "Dictionary ADT and simple implementations", "Binary search trees (insert and delete operations and analysis)", "Key-indexed search, simple hash functions", "Range search in a binary search tree", "Algorithms and data structures for text processing (8 hours)", "Sometimes these include animations/overlays, in case of which there will be both a Display version (with them) and a Print version (omitting them, but otherwise the same content).", "The slides for each module will be posted as the term progresses.", "Module 1 Introduction and Asymptotic Analysis M1.pdf", "Module 3 Sorting, Average-Case and Randomized Algorithms M3.pdf", "Optional: Goodrich & Tamassia   8.3", "Module 8 Range-Searching in Dictionaries of Points   Course notes Chapter 8", "A0.tex", "A1.tex", "The following books are on reserve in the DC library for reference and additional resources:", "Algorithm Design and Applications (2015)", "Also covers cuckoo hashing.", "Sedgewick] Algorithms in C++, Third Edition (1998)", "Computational Geometry: Algorithms and Applications", "CLRS] Introduction to Algorithms, 2nd edition (2001)", "Introduction to Algorithms, 2nd edition is also avaliable online (in campus).", "This website will be the primary means of communication and distribution of materials for the course.", "The course uses a number of different tools for distributing information and receiving submissions.", "These are not worth credit, but may help you in self-testing your understanding of the material.", "Only one programming question can be shifted to the final exam.", "If more than this has verification for non-submittal, then it will be considered on a case-by-case basis.", "A student with a medical reason may not be granted an INC because they have not performed sufficiently well during the academic term.", "An INC will be granted ONLY if there is a strong reason for missing the exam (generally a serious medical issue verified by a doctor's note) AND a satisfactory performance during the term (both assignments and midterm).", "Academic Dishonesty", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "The first criterion for marking is the correctness, the second criterion is efficiency.", "describe the main idea first in words,", "In the case that you are using facts stated in lectures/modules, be sure to cite where you got them from.)", "Files should be named .cpp, where the specific file name will be specified in the assignment.", "You should include sufficiently many comments in your code that the main ideas of design and correctness are clear.", "One-line changes: In the case you passed the public test, and failed some secret tests, if your program works with a one line change, then we may accept it for remarking and give some marks after deducting a penalty (typically 10-20% of the programming question).", "Here are some ways to create PDF files:", "Create your solution in LaTeX. LaTeX is a document preparation system that uses a mark-up language to write/create and co-ordinate different parts of documents, including diagrams and was introduced in Assignment 0.", "The following are least preferred methods since the results may be hard for markers to read and/or the files may be too large.", "Submitting a Re-Mark Request: Please email cs240@uwaterloo.ca in order to submit a request.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 6, "course_code": "CS 240E", "course_name": "CS240E - Data Structures and Data Management (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["Data Structures and Data Management (Enriched)", "10:00AM - 11:20AM MC 4041", "Email: biedl [", "Email: cs240e", "All of Tom's consulting hours are in-person in MC 4065.", "Email: cs240", "Instructional Support Coordinator: Karen Anderson", "Email: kaanders [", "Module 1 Introduction and Asymptotic Analysis Course notes Chapter 1 (skip 1.5 for now)", "(updated)  Sorting, Average-Case and Randomized Algorithms Course notes Chapter 3 (and parts of 1.5)", "Optional: Goodrich & Tamassia   8.3", "Module 8 Range-Searching in Dictionaries of Points Course notes Chapter 8", "Tutorial 3 Friday, January 24 Average-case vs expected, sorting", "The following books are on reserve in the DC library for reference and additional resources:", "Algorithm Design and Applications (2015)", "Also covers cuckoo hashing.", "Sedgewick] Algorithms in C++, Third Edition (1998)", "Computational Geometry: Algorithms and Applications", "CLRS] Introduction to Algorithms, 2nd edition (2001)", "Introduction to Algorithms, 2nd edition is also avaliable online (in campus).", "Only one programming question can be shifted to the final exam.", "If more than this has verification for non-submittal, then it will be considered on a case-by-case basis.", "A student with a medical reason may not be granted an INC because they have not performed sufficiently well during the academic term.", "An INC will be granted ONLY if there is a strong reason for missing the exam (generally a serious medical issue verified by a doctor's note) AND a satisfactory performance during the term (both assignments and midterm).", "Academic Dishonesty", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "Communication & Resources in CS 240E", "CS240E uses a variety of platforms in order to communicate and provide course materials to students.", "If your issue is confidential, but not specifically for one member of the course personnel, then a better option might be a private post to piazza.", "You can ignore these if you are comfortable with the material.", "Written assignments are submitted electronically using Crowdmark - a web-based submission and marking system.", "To submit files for Assignments, follow these instructions:", "Under each question, you can select files to add them to your submission for that question.", "You can submit and re-submit files as many times as you want before the deadline.", "Logging In", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 7, "course_code": "CS 241", "course_name": "CS241 - Foundations of Sequential Programs (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["ISA", "Yiwen Dong", "ISC", "The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages.", "Write short machine- and assembly-language programs to perform simple data manipulation", "Write a basic assembler supporting labels", "Give formal specifications for regular languages, including regular expressions and finite-state machines", "Write a scanner capable of dealing with a typical high-level programming language (given the specification)", "Give a grammar for a context-free language and create derivations for strings in a context-free language", "Perform context-sensitive analysis including type checking for high-level languages", "Write a simple code generator for an imperative language, i.e., one doing little or no optimization", "Apply appropriate design decisions when programming in C/C++ based on a detailed understanding of the way memory is used by a running C/C++ program", "Week 1: Introduction and Modules 1, 2", "20M+40F", "This course includes the independent development and practice of specific skills, such as development of large software artifacts.", "Library for research-based assignments"]}, {"course_id": 8, "course_code": "CS 241E", "course_name": "CS241E - Foundations of Sequential Programs (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["03:30PM - 04:20PM MC 1056", "02:30PM - 03:20PM", "07:00PM - 08:50PM", "The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages.", "Non-enriched version: Any CS 241E student may switch to the regular version of CS 241 during the first two weeks of lectures.", "Machine-level implementation of high-level language features (9 hours)", "Introduction to formal languages.", "Regular languages, regular expressions and finite state machines.", "Semantic Analysis and Code generation (6 hours)", "Dynamic Memory Allocation.", "Write short machine- and assembly-language programs to perform simple data manipulation.", "Write a basic assembler supporting labels.", "Give formal specifications for regular languages, including regular expressions and bubble diagrams.", "Write a scanner capable of dealing with a typical high-level programming language (given the specification).", "Give a grammar for a context-free language and, given a grammar, produce a derivation for a given string in the language.", "Write a simple code generator for an imperative language, i.e., one doing little or no optimization.", "Apply appropriate design decisions when programming in C/C++ based on a detailed understanding of the way memory is used by a running C/C++ program.", "I Sept. 5 Introduction", "A link to the Marmoset system and instructions for using it may be found on the course web page.", "Intellectual property includes items such as:", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as implementing and debugging a compiler.", "Library for research-based assignments"]}, {"course_id": 9, "course_code": "CS 245", "course_name": "CS245 - Logic and Computation (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["Logic and Computation Winter 2025", "10:30AM - 11:20AM MC 4041", "Formalizing the notions of correct and incorrect reasoning, defining what is computable, and exploring the limits of computation.", "The course covers a variety of topics related to logic and computation that are required as background for other courses in Computer Science.", "It differs both in tone and content from a logic course one would typically find in a mathematics program.", "Develop mathematical reasoning skills", "Improve understanding of propositional and first-order logic, including key notions, such as: expressing natural language statements as logical formulas, distinguishing between correct and incorrect reasoning (between valid and invalid logical arguments), constructing a formal proof, distinguishing between syntax and semantics", "Explore the limits of computers, including decidability and undecidability", "Introduction", "Structural induction and its use in proving statements about formulas", "Adequate sets of connectives", "Soundness and completeness of formal deduction", "Applications of propositional logic to computer science, such as: Automated proofs: Resolution, Davis-Putnam Procedure; Hardware and software veri\ufb01cation", "First-Order Logic", "Limitations of propositional logic, and the necessity of first-order logic for reasoning about objects and properties", "Quanti\ufb01ers, universe of discourse, translation between English and first-order logic formulas", "Syntax of first-order logic: terms, formulas", "Semantics of first-order logic: valuations", "Proving argument validity in first-order logic (semantically)", "Formal deduction in first-order logic; Proving argument validity by formal deduction (syntactically)", "Applications of first-order logic to computer science, such as: Automated theorem provers and veri\ufb01ers; Databases", "Decidability and Peano Arithmetic", "Turing Machine as a model of computation", "Undecidability: Basic notions, undecidability of the Halting Problem and other decision problems", "The Peano axioms for number theory (including the induction axiom), undecidability of Peano Arithmetic", "An Important Application of Logic to Computer Science", "Hoare triples", "partial and total correctness", "Formalize English sentences into properly formed formulas in the propositional and first-order logic and, conversely, interpret such formulas in English", "Formalize the notion of correct reasoning and proof, and be able to construct formal proofs", "Realize the limitation of formal proof systems", "Understand the applications of logic to computer science", "This means that you must decide whether to exercise your option to submit late before the deadline, and refrain from making a partial submission in this case.", "There will be a marked quiz due in each week when there will not be a Crowdmark assignment due or a mid-term examination.", "This course includes the independent development and practice of specific skills, including writing numerous proofs using numerous abstract definitions.", "Library for research-based assignments"]}, {"course_id": 10, "course_code": "CS 245E", "course_name": "CS245E - Logic and Computation (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["10:00AM - 11:20AM MC 2034", "Tuesday -", "This includes:", "Basic sematic notions:", "Truth tables", "A formal proof system for Propositional logic", "Soundness and completeness theorems for the proof system", "Basic sematic notions", "Structures for a vocabulary", "Logical truths and logical implications", "Translations between FOL formulas and English and mathematical statements.", "A formal proof system for Predicate logic", "Soundness theorem for the proof system", "However, the focus of this version of the course is more on fundamental and mathematical concepts (on the expense of developing technical skills, such as designing formal proofs).", "We will use propositional logic as a main tool for demonstration key logical concepts such as", "Structural induction its justification and many applications.", "soundness and completeness theorems", "the expressive power of the logic (what can and what cannot be expressed).", "We will revisit these topics for first order logic.", "Finally, we will discuss applications of logic to computer science, in particular showing limitations of computations (undesirability)."]}, {"course_id": 11, "course_code": "CS 246", "course_name": "CS246 - Object-Oriented Software Development (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["Object-Oriented Software Development Winter 2025", "10:00AM - 11:20AM MC 1056", "10:30AM - 11:20AM MC 3003", "11:30AM - 12:20PM MC 3003", "Tuesday -", "Ross Evans rpevans@uwaterloo.ca", "Introduction to object-oriented programming and to tools and techniques for software development.", "Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites.", "This course introduces students to object-oriented programming in C++ to facilitate designing, coding, debugging, testing, and documenting medium-sized programs.", "Students learn to read a specification and design software to implement it.", "Important skills are selecting appropriate data structures and control structures, writing reusable code, reusing existing code, understanding basic performance issues, developing debugging skills, and learning to test a program.", "C++", "Introduction to C++", "I/O and Strings", "Basic language constructs and Functions", "Exceptions", "Introduction to Templates", "Exception safety", "Template functions and algorithms", "Object-Oriented Programming", "UML class models", "Constructors and Destructors", "Encapsulation", "Inheritance", "Design patterns: Iterator, Observer, Decorator, Factory method, Template method, Non-virtual interface (NVI), and the Pimpl idiom", "Inheritance: vtables", "Multiple inheritance", "Design quality", "MVC (model-view-controller) architecture", "Design, implement, test, and debug C++ programs to solve problems requiring hundreds of lines of code, making appropriate use of", "types, variables, arrays, strings, and dynamic memory; loops, conditionals, and other control structures; structures, unions, and enumerations; procedures and functions; the preprocessor; formatted and unformatted I/O", "a subset of the STL, including vector, list, and map", "assertions and exceptions", "test suites for regression testing, white and black box testing", "structured programming, incremental development", "interface design, abstractions, information hiding, cohesion and coupling", "a subset of UML to specify classes, objects and relationships among them", "a selection of design patterns", "Explain the following properties of the memory model used in C++, including their impact on time and space efficiency when designing code: bytes vs. words, memory as an array, run-time stack and stack frames, memory allocation on the heap vs. automatic allocation on the stack, pointers as memory addresses, the representation of objects in memory", "You must complete A0 in order to receive marks for the rest of the course.", "A1 Basic C++ Monday, January 20 Monday, January 27 5", "A2 Introduction to OOP Monday, February 3 Monday, February 10 6", "A4 Design Patterns Monday, March 10 Monday, March 17 8", "Note: Marmoset is not a compiler!", "Do not submit C++ code to Marmoset, without first attempting to compile it yourself.", "Students from different sections can be in the same group.", "Working on a group is an important learning experience for software development in a team.", "Students in a group will be responsible for forming and managing the group.", "Please be very careful in selecting your group as there are always groups that end up having major issues every term.", "Exams", "Examination Date Final Grade Weight", "Each weekly set of problems completed succesfully can be used to replace 0.5% of the final grade from the final exam.", "In the case where both a midterm and final exam can be held, the final course grade will be calculated from the following components and weights:", "To pass the course, you must satisfy these three conditions:", "A grade of at least 45% on the weighted average of assignments A1-A4", "Assignments1to4  = (A1*5 + A2*6 + A3*6 + A4*8) / 25", "Normal = A1*5 + A2*6 + A3*6 + A4*8 + A5*15 + Midterm*20 + Final*(40-0.5*TutorialsCompleted) + 0.5*TutorialsCompleted", "if (MidtermInPerson==TRUE && FinalInPerson==TRUE)", "else", "if (MidtermInPerson==FALSE && FinalInPerson==TRUE)", "else", "if (MidtermInPerson==TRUE && FinalInPerson==FALSE)", "else", "if (MidtermInPerson==FALSE && FinalInPerson==FALSE)", "else", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments"]}, {"course_id": 12, "course_code": "CS 246E", "course_name": "CS246E - Object-Oriented Software Development (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["Object-Oriented Software Development (Enriched)", "Tuesday -", "CS246 description: Introduction to object-oriented programming and to tools and techniques for software development.", "Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites.)", "functions and classes as the basic building blocks for abstractions", "function and class templates; exception safety", "object-oriented design principles; design patterns", "language features in combination", "Software library development for general client use.", "Principles of object-oriented software design.", "A selection of software design patterns.", "A1     10%", "Office hours: the list of office hours can be found at https://student.cs.uwaterloo.ca/~cs246e/F24/officehours.shtml", "Note: Marmoset is not a compiler!", "Please do not submit C++ code to Marmoset without first attempting to compile it yourself.", "The release test for a problem gives you the result of running your program on one basic test case (usually a case that appears in the assignment specification).", "So be sure to test your code thoroughly, so that you pass as many of our secret tests as possible.", "Testing", "Hand-Marking", "Note that correctly-working code is only one component of an assignment mark.", "Intellectual property includes items such as:", "CAN I POST MY CODE ONLINE?", "The second complicating factor concerns the question of who actually owns assignment solutions.", "The instructor supplies the question, a framework for the solution (including rules, guidelines, and possibly some starter code or libraries) and has in mind the general structure of what a correct solution ought to look like.", "the instructor(s) may permit posting of only those portions of assignments that were not provided as starter code;", "The instructors' policy for a given offering of a course will be stated in the course outline.", "If you wish to share your code with potential employers, and your instructor does not permit you to publicly post your solutions, you may host your code in a private repository, and provide a password to potential employers (for example, on your resume).", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 13, "course_code": "CS 251", "course_name": "CS251 - Computer Organization and Design (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["Notice of Recording", "Computer Organization and Design Winter 2025", "11:30AM -", "RCH 307", "10:30AM - 11:20AM EV3 1408", "Silvia Zhang cs251@uwaterloo.ca", "Basics of digital logic design.", "Data representation and manipulation.", "Basics of processor design.", "This course enables students to develop an accurate mental model of the architecture and organization of physical computers and it introduces them to theoretical and practical concepts relevant to the structure and design of modern digital computers.", "Design simple combinational and sequential hardware at the logic gate level in order to implement simple algorithms and computations, such as addition, multiplication, and data-path control for processors.", "Describe number systems used by computer hardware, including IEEE floating point and two's complement.", "Analyze how machine language is executed by hardware, and describe a simple pipelined processor architecture for executing a RISC machine language.", "Explain basic cache and virtual-memory architectures, and how they can impact performance.", "Introduction and ARM (~3 hours)", "Combinational logic and basic components.", "Basic Processor Design (~9 hours)", "Processor design using single-cycle control.", "Multi-cycle control.", "Virtual memory.", "Multi-processor systems and core processors.", "Patterson and Hennessy: \"Computer Organization and Design\".", "Students registering their clicker for other sections will receive a grade of zero on clicker questions.", "else", "Notice of Recording", "In general, assignments submitted late and without an approved extension by the course ISC will not be accepted and will be given a grade of zero.", "If a student makes a short-term 48-hour declaration, they may contact the course ISC to obtain a 48-hour extension.", "Note that penalties are significantly higher for exams and for repeat offenders.", "Discussion of assignments is allowed, but each student must hand in their own copy of the assignment and word-for-word copying is not allowed.", "In-Class Discipline", "A student who is found to be disruptive during lectures will be given only one verbal warning for the term.", "Students should attend the section they're enrolled in and only the section they're enrolled in", "Further, a weekly quiz will be given and used in place of clickers in the marking scheme.", "Dropping lowest clickers marks, lowest quiz score", "Online Exams", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:"]}, {"course_id": 15, "course_code": "MATH 239", "course_name": "MATH239 - Introduction to Combinatorics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["Introduction to Combinatorics Winter 2025", "11:30AM - 12:20PM MC 4059", "09:30AM - 10:20AM MC 4021", "P. Nelson", "08:30AM - 09:20AM QNC 1502", "S. Pfannerer-Mittas", "10:30AM - 11:20AM MC 4058", "11:30AM - 12:20PM MC 4058", "09:30AM - 10:20AM MC 4042", "02:30PM - 03:20PM", "10:30AM - 11:20AM PHY 150", "04:30PM - 05:20PM", "You should have no reason to contact them directly, but you can find their email addresses through Learn.", "First name Last name", "Guilherme Zeus Dantas E Moura", "Theodore Morrison", "Matthew Kroeker", "Introduction to graph theory: colourings, matchings, connectivity, planarity.", "Introduction to combinatorial analysis: generating series, recurrence relations, binary strings, plane trees.", "MATH 239 is an introduction to combinatorics with a particular focus on counting techniques and graph theory.", "extract coefficients from rational generating series", "find maximum matchings in bipartite graphs", "understand and use the concepts of paths, cycles, trees, bipartiteness, and planarity in graph theory", "be comfortable writing proofs for results on discrete objects", "2 Jan 13,15,17 Generating series, Sum and Product lemmas, Negative Binomial Theorem, Integer Compositions Part I: 2.1-2.3", "5 Feb 3,5,7 Solving linear recurrence relations, Binary trees, irrational generating series Part I: 4.1, 4.2, 4.4 Assignment 4, Feb 7", "6 Feb 10,12,14 Introduction to graph theory Part II: 4.1-4.6 Assignment 5, Feb 14", "Grading scheme A", "Students are encouraged to collaborate on solving the questions but each student must write their own solutions independently in their own words.", "Please inform of us these at the start of the course.", "Library for research-based assignments"]}, {"course_id": 16, "course_code": "MATH 249", "course_name": "MATH249 - Introduction to Combinatorics (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 9, "major_name": "Computer Science (Bachelor of Mathematics - Joint Honours)", "topics": ["Introduction to Combinatorics (Advanced Level)", "09:30AM - 10:20AM MC 2017", "For graph theory, while we will focus on the same topics covered in MATH 239 (planarity and bipartite matching), our coverage of those topics will differ substantially in depth and in the techniques that we employ; in particular, we will see striking applications of algebra.", "extract coefficients from rational generating series", "find maximum matchings in bipartite graphs", "understand and use the concepts of paths, cycles, trees, bipartiteness, and planarity in graph theory", "be comfortable writing proofs for results on discrete objects", "2 Jan 13,15,17 Generating series, Sum and Product lemmas, Negative Binomial Theorem, Integer Compositions Part I: 2.1-2.3", "5 Feb 3,5,7 Solving linear recurrence relations, Binary trees, irrational generating series Part I: 4.1, 4.2, 4.4 Assignment 4, Feb 7", "6 Feb 10,12,14 Introduction to graph theory Part II: 4.1-4.6 Assignment 5, Feb 14", "Grading scheme A", "Students are encouraged to collaborate on solving the questions but each student must write their own solutions independently in their own words.", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 0, "course_code": "CS 349", "course_name": "CS349 - User Interfaces (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["04:00PM - 05:20PM", "Please contact her in regards to any accommodations, including those for illness and short-term absences.", "Bella Chen", "Zitao Wang", "Beginning in the second week, we hold regular weekday office hours in-person and online within the CS 349 team (via Microsoft Teams).", "An introduction to contemporary user interface implementation concepts, including event abstraction, graphical components, layout, feedback, testing, accessibility, and architectures to develop user interfaces.", "Explain architectural and algorithmic details underlying current user interfaces and user interface toolkits.", "Implement user interfaces in a browser using Typescript: (1) using the HTML Canvas; (2) using HTML elements and DOM manipulation, and (3) using a modern UI web development framework", "5 Feb 3 - Feb 7 Dispatch, Layout A1", "11 Mar 24 - Mar 29 Direct Manipulation, Accessibility", "Exams", "Final, in-person tbd tbd", "It has code relating to lectures and a git submodule with the SimpleKit UI toolkit.", "See the README for details for cloning and keeping everything up to date.", "A1-A4 4 x 13% = 52%", "You should conform to the tools and versions specified in the assignment description.", "Out-of-scope Language Features", "Please review policies for Academic Integrity, Using Code from Other Sources, and Using Advanced AI Systems under Course Policies.", "You may use code examples provided in-class (i.e., in the CS349 public repo).", "You may directly use or include portions of these in-class samples in your assignments.", "You may discuss how you accomplished something in general terms with other students, but you may not directly share code.", "Self-Declared Short-term Absence", "There are no extensions beyond the maximum 48-hour late period after the original deadline.", "You can use any code from this term's offering of CS 349 without documenting it as a source.", "This includes starter code for assignments, code shown in lectures, and code from the course code repo.", "Using Advanced AI Systems", "Use of advanced AI systems to generate code (ie.", "Intellectual property includes items such as:", "All source code written by the instructor and provided in lecture, as starter code for an assignment, or in a sample code repository.", "Inclusiveness", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 1, "course_code": "CS 449", "course_name": "CS449 - Human-Computer Interaction (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Human-Computer Interaction Fall 2024", "11:30AM -", "10:00AM - 11:20AM B2 350", "11:30AM -", "10:00AM - 11:20AM B2 350", "10:00AM - 11:20AM DC 1350", "LEC - Monday 10-11:30am DC 1350", "An introduction to the fundamental theories, methods, and research in the design and evaluation of novel computational artifacts designed to meet real-world human needs.", "Through lectures and design activities, students work in teams of 5 to design a solution for a real-world problem.", "The end result of the team project is a high-fidelity interactive prototype of a mobile application, targeted at solving a particular real-world problem.", "Identify the primary luminaries in Interactive Design and HCI", "Identify your target users", "Design studies to understand your users and their needs within a sociocultural context", "Create user data-driven designs and prototypes of different levels of fidelity", "Design studies to evaluate designs during different stages of the project", "Properly gather and analyze qualitative and quantitative data from semi-structured interviews, paper prototype evaluation, heuristic evaluations and cognitive walkthrough", "Discover a variety of HCI research methodologies", "Add a high-quality design of an interesting product to your design portfolio", "The success of a team project depends critically on each student being a responsible member of the team, i.e., showing up and participating.", "Special consideration can be made for a few exceptions (e.g., academic travel, illnesses and family emergencies).", "Deliverables and Late Penalties", "Intellectual property includes items such as:"]}, {"course_id": 2, "course_code": "BET 360", "course_name": "BET360 - Design Frameworks for Social Ventures (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Design Frameworks for Social Ventures Fall 2024", "BET 360", "In this course, students will explore several design frameworks as they relate to complex problems; assess the impacts of these frameworks in recent entrepreneurial applications; and determine how to apply these concepts in the design of the social impact aspects of ventures and cross-industry collaborations.", "View requirements for BET 360", "Articulate the importance of design, and design thinking in solving problems for social and environmental change, through entrepreneurial ventures", "Understand, describe, and apply emerging frameworks in designing for social impact (ie.", "Collaborate with others to explore significant social problems using critical lenses", "Design, when everybody designs: An introduction to design for social innovation.", "Thinking in Systems: A primer.", "Electronic Device Policy", "Accommodation for Students with Disabilities", "This course includes the independent development and practice of specific critical thinking skills, such as;", "To understand, explain, and analyze base content knowledge around a range of topics in social impact and design, curated for this course", "Library for research-based assignments"]}, {"course_id": 3, "course_code": "CS 492", "course_name": "CS492 - The Social Implications of Computing (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["The Social Implications of Computing Winter 2025", "08:30AM - 11:20AM AL 124", "Students learn how to make informed judgements about the social and ethical consequences of deploying computer technologies and how to foster critical thought and professional responsibility.", "Identify important social implications of computerization;", "Combine their opinions with information from existing research in both written and oral formats;", "Identify where their knowledge of computer science provides a valuable contribution to the overall dialogue about the social and ethical implications of computing.", "Proactively identify potential ethical issues related to data and new technologies and applications;", "Evaluate the potential risks and benefits of different courses of action that could be taken with respect to data and new technologies and applications;", "Succinctly and confidently articulate and justify your views on ethical issues related to data and new technologies and applications;", "for CS 492 Section 003 in particular", "That said, please do not attend class if you are sick and should be in self-isolation; just let your instructor and TAs know you are ill and unable to attend class.", "A link to join the Slack channel may be found here: https://join.slack.com/t/cs492section003w25/shared_invite/zt-2wl26b5p3-pxMv5Z6mRjbOoNybeKXSwA.", "Evaluation in this course will be comprised of the following three components:", "A note on the use of large language models (\u201cLLMs\u201d) and generative AI systems: While it is my strong preference that students not use these systems and prepare their journal entries entirely on their own, students are permitted to use such systems to improve the technical quality of their writing, but they may not use them to do their writing for them.", "If you do use one of these systems, you must inform us that you have done so and how you used it.", "Unlike the weekly commentaries or position papers, students are encouraged to experiment with LLMs and generative AI systems and to incorporate them as part of their small-group projects!", "A five-minute video tour of the project and its findings.", "This should be rare since overall grades can easily be improved by submitting an additional written assignment.", "EMPOWER ME in China", "In particular:", "IP includes items such as:", "In particular, in this Ethics Workshop, we will discuss bias and discrimination in data and algorithms, and how new technologies and applications can contribute to and ameliorate these problems."]}, {"course_id": 4, "course_code": "GSJ 205", "course_name": "GSJ205 - Technology, Gender, and Social Justice (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["11:30AM -", "Email: slstettner@uwaterloo.ca", "Do not leave me a phone message; I do not have access to the phone that claims to belong to me!", "I will continue to add materials and speakers to the course syllabus, so please check back regularly for updates.", "\u2022Reflect critically on social location and intersectionality in understanding the ways that technology can both liberate and oppress).", "Sept. 7 - 11 Introduction to course", "Design and Culture 8, no. 2 (2016): 235-252.", "In Proceedings of the 2019 CHI conference on human factors in computing systems, pp.", "\"Gender-inclusive design: Sense of belonging and bias in web interfaces.\"", "In Proceedings of the 2018 CHI Conference on human factors in computing systems, pp.", "Watch: The Algorithms of Oppression (on LEARN)", "Rose, Emma J. \"Design as advocacy: Using a human-centered approach to investigate the needs of vulnerable populations.\"", "\"Datafied body projects in India: Femtech and the rise of reproductive surveillance in the digital era.\"", "Your contributions should be thoughtful and demonstrate that you have done that week\u2019s readings and thought about the course concepts.", "Take-home mid-term test: There is a mid-term take-home test in the course.", "With the video presentation, students must submit a copy of their script that includes proper citations to their peer-reviewed research sources.", "Intellectual property includes items such as:", "Do you want professors and interviewers to call you by a different first name?", "Phone: 519-884-0000 extension 213", "Full details can be found online on the Faculty of Arts website", "Cross-listed courses"]}, {"course_id": 5, "course_code": "MSE 442", "course_name": "MSE442 - Impact of Information Systems on Organizations and Society (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Notice of Recording", "Impact of Information Systems on Organizations and Society Winter 2025", "MSE 442", "This course is designed to familiarize the student with issues related to the impact of computer-based technologies on individual jobs, organizations, and broader societal level.", "View requirements for MSE 442", "Identify the role(s) of information technology in society in a number of different fields.", "Identify and explain the advantages and drawbacks of a particular information technology case in society.", "Synthesize \u2018for\u2019 and \u2018against\u2019 cases and highlight the strengths and weaknesses of these beliefs.", "Present well-constructed arguments using sound knowledge and evidence supporting the case.", "Describe the impact of information technology in society with reference to potential future occupations.", "The survey can be accessed with the following link: https://www.surveymonkey.com/r/HMGHBKF", "Each team will create 5 questions for the opposing team and post these by Wednesday at noon of the debate week.", "A maximum of 100 words is allowed for each question.", "A maximum of 200 words is allowed for the response to each question received.", "Do the questions effectively challenge the opposing team?", "Do the answers to the questions received reflect good understanding of the case that the team is presenting?", "Are the arguments presented in the answers well constructed and is the evidence presented relevant and convincing?", "Inclusion of the main issues in the public debate on the topic", "Each review should be a maximum of 1000 words.", "Each review should be a maximum of 1000 words.", "Notice of Recording", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 6, "course_code": "PACS 315", "course_name": "PACS315 - Engineering and Peace (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Engineering and Peace Fall 2024", "07:00PM - 09:50PM CGR 1302", "Office Hours: Online or in-person meetings can be booked via Calendly between 8:30 AM \u2013 4:30 PM on weekdays", "This course is built on the conviction that the kinds of problems engineers seek to address, and the ways they seek to address them, should matter for anyone interested in advancing peace in the world.", "Topics include historical connections between the discipline of engineering and warfare, understanding the engineering method and mindset, and technological frontiers for peacebuilding.", "Augment their approach to analyzing and solving problems with insights from both engineering and peacebuilding theory and practice; and", "Identify opportunities to apply their expertise and passions to make a meaningful social impact", "Why has war been the business of so many engineers?", "Sep. 18", "Sheldon Fernandez", "UWaterloo Turkstra Chair in Urban Engineering", "Critical Media Lab", "Communitech", "Laurel Boytim", "The Ripple Effect Education", "Engineers as social innovators Riley, \u201cWe\u2019ve Been Framed!\u201d", "Global Peace Index 2024 Institute for Economics & Peace.", "Morgan & Claypool Publishers, 2007.", "We\u2019ve Been Framed!", "Also available for free through MIT Press Open Access] No", "Engineers of Jihad: The Curious Connection Between Violent Extremism and Education.", "Engineers of Jihad: The Curious Connection Between Violent Extremism and Education.", "A Perusall-generated score of 2.0 or higher is required to receive credit each week, and the overall grade for this element will be based on the accumulation of these credits (2% per reading assignment up to a maximum of 10 credits).", "Engage with a guest engineer and/or peacebuilder.", "Each class will begin with a conversation with a guest speaker with expertise and life experiences related to the topics covered in this course.", "95% \u2013 Made a contribution that went above and beyond expectations by demonstrating an exceptional level of consideration and care, and/or providing a rare and surprising degree of insight", "Each submission should be a minimum of 250 words.", "Offer a critique of the book, highlighting both strengths and witnesses, as well as offering a recommendation for who would benefit most from reading the book.", "Why did you chose to attend this event?", "Who played a key role in leading the event?", "Please read Grebel's full land acknowledgement for additional context on the college\u2019s connections to the first European settlers on this land.", "On campus supports", "Other on-campus supports", "Off campus supports", "St. Mary's Hospital\u202f- 519-744-3311", "As well as short-term support for family members or friends of sexual assault survivors.", "More information about resources and supports for students can be found online in on the Faculty of Arts Student Support page.", "This course includes the independent development and practice of reflection and writing skills."]}, {"course_id": 7, "course_code": "SOC 232", "course_name": "SOC232 - Technology and Social Change (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Notice of Recording", "SOC 232", "I am an Associate Professor in the Department of Sociology & Legal Studies and at the Stratford School of Interaction Design and Business.", "Apply sociological theories and concepts to understand, examine, and critically evaluate how technology shapes, and is shaped by, social phenomena.", "Identify how digital technologies shape our interpersonal relationships and communities, in both positive and negative ways.", "Assigned readings and playlists may change through the term.", "Sept 12  Introduction to the Course No readings this week", "Sept 19 \u201cDo guns kill people?", "In The Design of Everyday Things: Revised and Expanded Edition, Revised, Expanded ed. edition, 1\u201336.", "Do Artifacts Have Politics?", "Techno-social Designing.", "The Adoption and Diffusion of Technological Innovations", "Tragic Design: The Impact of Bad Product Design and How to Fix It (1st edition).", "Community in the Network Society", "Computer Love: Replicating Social Order Through Early Computer Dating Systems.", "Deviance in the Dark psychology experiment [", "Assigned readings and playlists may change through the term.", "85%+", "Summary of relevant material is minimal in favor of cross-cutting synthesis of ideas.", "Deep and critical engagement with course content.", "Submission shows overall unity but may meander.", "Satisfactory", "Response is a good effort but falls short of a comprehensive answer.", "Problems in logic and content are identifiable, and writing is weak or tend towards summary rather than critical analysis.", "Please use APA formatting and citation style.", "Late Policies and Extension Requests", "Self-declarations cannot be \u201cstacked\u201d to extend beyond these 5 days.", "Notice of Recording", "However, if Health & Safety protocols demand a shift away from in-person teaching and towards online teaching, some activities for this course may involve recording, in partial fulfillment of the course learning outcomes.", "Phone: 519-884-0000 extension 213", "Full details can be found online on the Faculty of Arts website", "Do you want professors and interviewers to call you by a different first name?"]}, {"course_id": 8, "course_code": "STV 202", "course_name": "STV202 - Design and Society (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Design and Society Winter 2025", "Email: cshelley@uwaterloo.ca", "Email: js2kim@uwaterloo.ca", "View requirements for STV 202", "Topics include the nature of design, the social and cultural implications of design, the roles of designers in relation to the social contract, and design assessment in light of social values such as risk, fairness, progress, and sustainability.", "The course material provides a mixture of theoretical concepts and practical cases of their application.", "Describe concepts and perspectives relating to social and ethical aspects of good design.", "Analyze and evaluate designs in light of those concepts and perspectives.", "Compare concepts and perspectives and consider overlaps and differences among them.", "Reflect on the significance of social and ethical issues in their understanding of good design.", "The numbers in parentheses next to learning outcomes above refer to applicable Canadian Engineering Accreditation Board Engineering Graduate Attributes defined here: https://uwaterloo.ca/engineering/graduate-attributes", "Rational design & Social psychology.", "Social contracts & Agendas.", "Design and society: Social issues in technological design, Berlin: Springer.", "A 10-question, multiple-choice quiz is to be completed by each student on the course Learn site for each non-midterm module starting at the outset of week 2.", "Quiz questions each week relate to the textbook chapter(s) assigned for that week.", "Design discussions", "Discussions will take place each non-workshop week after week 1.", "Design presentations", "5 minutes) and may be chosen for viewing in subsequent classes.", "Midterms", "Midterm 1 covers chapters Good design through Culture, Midterm 2 covers chapters Social contract through Activism, and Midterm 3 covers chapters Risk through Sustainability.", "Grade exemptions", "To allow for situations not covered under the Late submissions policy (see below), each student\u2019s lowest quiz, discussion,  presentation, and workshop grade will be dropped from the calculation of their overall grade in each of those categories.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 9, "course_code": "STV 205", "course_name": "STV205 - Cybernetics and Society (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Cybernetics and Society Spring 2024", "This course will present an overview of cybernetics from automation and robotics to prosthetics and wearable computing.", "The roles of men and women in a post-human era will be discussed along with related themes dealing with gender, cyberspace, politics, and popular culture.", "Apply analogical thinking to examine technologies from a functional as well as a social and cultural perspective.", "Assess the kinds of problems addressed by different kinds of technologies and reflect upon your own problem-solving experiences.", "Understand the basic concepts of cybernetics from a historical perspective and discuss issues concerning the development of technologies with someone from an academic discipline different from your own.", "On Thursday at 9:00pm ET, a multiple-choice quiz will be published that you must complete by Friday at 11:59pm ET.", "The study materials are a mix of book chapters and articles as well as video and audio clips.", "Each week, except the first week, in STV 205 will follow this pattern:", "Module 1.1 First-Order Cybernetics: Norbert Wiener, Margaret Mead, Feedback, Information and Analogy - May 9", "Module 2.1 Second-Order Cybernetics: Heinz von Foerster, the Observer and the Observed, Determinism versus Constructivism, and the Attention Economy - June 6", "Module 2.3: Big Data Algorithms, Surveillance Capitalism, and the Smart City - June 20", "Module 3.2: Utopia, Dystopia and Anti-Utopia? - July 11", "Systems Thinkers by Magnus Ramage/Karen Shipp Yes", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 10, "course_code": "STV 208", "course_name": "STV208 - Artificial Intelligence and Society: Impact, Ethics, and Equity (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Artificial Intelligence and Society: Impact, Ethics, and Equity Winter 2025", "The objective of this course is to introduce students to ethical and social concerns relating to Artificial Intelligence (AI).", "By understanding the basic principles of AI and its evolution, to engaging with complex issues like algorithmic bias and privacy concerns, this course offers a comprehensive look at both the promise and challenges AI brings to society.", "Through real-world case studies, students will analyze how AI systems influence industries, economies, and governance while learning to apply ethical frameworks that ensure fairness and accountability in AI deployment.", "The course is designed to not only equip students with the tools to evaluate the societal impacts of AI critically but also to empower them to actively engage in discussions about the future of technology and society.", "By the end of the course, students will be prepared to make informed contributions to the ongoing debates about the role of AI in shaping the future.", "Identify and explain key concepts related to the societal impacts of AI technologies, including ethical considerations, biases, and privacy concerns, and classify real-world examples where these issues arise.", "Compare different ethical frameworks and governance models for AI, and critically test their effectiveness in addressing issues such as fairness, accountability, transparency, and human rights.", "Evaluate the broader implications of AI on democracy, human rights, and socioeconomic systems, and assess how AI-driven innovations can either support or challenge social equity, ethical standards, and global governance structures.", "8 Socioeconomic Impacts of AI and Automation Mar 5 Mar 11", "12 The Future of AI: Ethical Design and Responsible Innovation Apr 2", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 11, "course_code": "STV 210", "course_name": "STV210 - The Computing Society (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["The Computing Society Fall 2024", "S. Campbell", "If that\u2019s not a good time for you, just get in touch and let me know when you\u2019re free and I\u2019ll do my best to find time.", "It explores the impact and consequences of computing from a societal perspective, but also considers various nontechnical factors and values that have shaped computing technology and practice.", "Material artifacts will form a core element of the course.", "STV 210: View requirements for STV 210", "It\u2019s a combination of STV-like concepts and historical concepts.", "The goal for this course is to appreciate how the history of computing can be used to better understand the interaction between technology and society today and in the future.", "*", "*", "*", "*", "*", "*", "*", "*", "You don\u2019t need to buy it!", "An electronic version is available though the library, and we\u2019re only reading some of the chapters.", "The activities allow you to practice with concepts and prepare you for assignments.", "Each group submits a summary of their discussion before leaving for the night, and each student in the group will share the grade.", "Self-Assessments", "There\u2019s no shame!", "I know it can feel embarrassing to ask for help, but I seriously don\u2019t mind helping everyone.", "Extensions", "Gender-inclusive language", "Gender-inclusive and fair language should be used in the interests of precision and politeness.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 12, "course_code": "STV 302", "course_name": "STV302 - Information Technology and Society (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Information Technology and Society Spring 2024", "S. Campbell", "But is this just a misplaced perception?", "Ultimately, what sort of technological values underpin the actions of IT creators and users?", "Identify, classify and analyze concepts and perspectives related to the interaction between information technology and society.", "Identify and analyze technological values of creators and users, and those embedded within information technology.", "Develop independent research questions, and communicate findings in written and verbal formats.", "Also, for any engineering undergraduates, the course provides instruction in fulfilment of CEAB graduate attributes 10, b, and c", "May 29 1.3 Is everything online?", "June 12 2.1 Disinformation Yes", "June 26 2.3 IT & Fairness Yes", "Further instructions for each self-assessment and a rubric will be provided on LEARN in the Module 1.4, 2.4, and 3.4 folders.", "I know it can feel embarrassing to ask for help, but I seriously don\u2019t mind helping everyone.", "That\u2019s when I can best help, not a month later.", "Gender-inclusive language", "Gender-inclusive and fair language should be used in the interests of precision and politeness.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 14, "course_code": "STV 305", "course_name": "STV305 - Technology, Society and the Modern City (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Email: cshelley@uwaterloo.ca.", "Cities may be humanity's most significant invention, where we shape our vision of the civilized life.", "At the same time, the demands of cities shape our lives in fundamental ways.", "The purpose of this course is to examine the technology of civilized life, with the city itself as both a technological system and a scene of technological living.", "View requirements for STV 305", "Describe concepts and perspectives relating to cities as socio-technical systems.", "Analyze and evaluate developments in cities in light of those concepts and perspectives.", "Reflect and communicate analyses of social and ethical aspects of technology and cities.", "Week 11 November 21 Smart cities", "Discussions", "Each student is expected to participate in in-class discussion each week.", "Summaries", "Summaries may be shared with the class to kick-start in-class discussion.", "Self-assessments", "Grade exemptions", "Each student\u2019s lowest discussion mark and exercise mark will be dropped from the calculation of their overall mark in those categories.", "Students are welcome to request regrading of assignments.", "Test conflicts"]}, {"course_id": 16, "course_code": "ENGL 108D", "course_name": "ENGL108D - Digital Lives (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Email: c23marti@uwaterloo.ca", "An examination of how digital communication technologies create and promote online identities and social spaces, as well as interpersonal and communal interactions.", "View requirements for ENGL 108D", "How do the technical affordances of online spaces shape the way we use them?", "Analyze the socio-cultural, technological and ideological systems that shape the digital world, and shape us in turn.", "Apply core concepts of new media theory to your own digital life, improve your informational awareness and engage critically with digital culture.", "The Emergence of the Digital World Pt 2 Curtis, Hypernormalization", "Shrinking Frontiers: Digital Platforms and Corporate Consolidation", "Dijck, Platform Society", "Values at Play", "Week 7 AI Slop, Grifter Gurus and Memecoin scams: Digital Life in the Post-truth era   TBD Digital Artifact Analysis Due", "Critical Digital Media Analysis 15%", "This course includes the independent development and practice of specific skills, notably those involved with written communication, critical thinking and analysis, independent research and oral presentation.", "Library for research-based assignments", "The University of Waterloo does not tolerate racism or any other form of discrimination and expects campus community members to contribute to a culture where all members feel safe and valued.", "The University of Waterloo has a number of multi-faith spaces that students can use for faith-based practices.", "No in-person course activity is permitted during the period of a self-declared COVID absence.", "Students can self-declare one short-term absence per term on Quest for any reason.", "The student has only one self-declared short-term absence per term and this absence can only be used during the formal lecture period."]}, {"course_id": 18, "course_code": "ENGL 295", "course_name": "ENGL295 - Social Media (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["D. Deveau", "D. Deveau", "Email: danielle.deveau@uwaterloo.ca", "This course surveys the popular social media landscape and charts scholarly approaches, both methodological and theoretical, to understanding and analyzing social media texts.", "View requirements for ENGL 295", "This course surveys the popular social media landscape and charts scholarly approaches, both methodological and theoretical, to understanding and analyzing social media texts.", "Demonstrate proficiency in critical analysis of social media platforms and content", "Produce effective evaluations of social media through the communication theory lenses of audience; ownership; production; regulation; labour; and effects", "Identify key social media companies as well as regulatory tensions or gaps", "Demonstrate curiosity, engagement, and a desire to learn through active participation in the course", "Demonstrate professionalism and academic independence by participating fully, initiating your own learning, and meeting course milestones", "Intellectual property includes items such as:", "The University of Waterloo does not tolerate racism or any other form of discrimination and expects campus community members to contribute to a culture where all members feel safe and valued.", "On campus supports", "Other on-campus supports", "Off campus supports", "St. Mary's Hospital\u202f- 519-744-3311", "As well as short-term support for family members or friends of sexual assault survivors.", "More information about resources and supports for students can be found online in on the Faculty of Arts Student Support page.", "The University of Waterloo has a number of multi-faith spaces that students can use for faith-based practices.", "No in-person course activity is permitted during the period of a self-declared COVID absence.", "Students can self-declare one short-term absence per term on Quest for any reason.", "The student has only one self-declared short-term absence per term and this absence can only be used during the formal lecture period."]}, {"course_id": 19, "course_code": "FINE 100", "course_name": "FINE100 - Studio Fundamentals (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["01:00PM - 03:20PM", "This course introduces the basic principles of drawing as it relates to concepts of 2D, 3D, and time-based media, through a series of drawing exercises and projects.", "View requirements for FINE 100", "You will create through studio-based practices, learning new ways of seeing and making art from 2D to 4D, becoming comfortable with experimentation, intuition and improvisation as a means toward the goal of personal expression.", "You will be able to see yourself as part of contemporary art, learning that art is an essential aspect of our current and past histories and the ongoing development of cultural life.", "You will learn to develop confidence in the way you speak about artworks and at the same time develop sensitive and supportive language in considering the work of yourself and others in class discussions.", "This methodology is known as cognitive learning which fosters a deeper understanding of physical materials, muscle memory, and solving problems through curiosity and hands-on creative processes.", "Homework: Complete frottage collab drawings and online safety training.", "and the impact of creativity and complete Paper Engineering", "Note: Project #3 Big Swap C & D Due.", "This is a great deal \u2013 a huge savings in comparison to what it would cost to buy everything individually.", "Project 1: Fundamental Drawing Project, Part A and B", "This project introduces students to the Elements of Art and Principles of Design vis-\u00e0-vis a set of drawing projects that will be submitted in two parts via the cardboard portfolios from your kits.", "Drawing Check List for Part A", "All drawings based on positive & negative space with contour.", "Elements of Art and Principles of Design Cards, each Fine 100 student receives these custom cards as part of their communal fee.", "This project helps you move from 2D to 3D, employing techniques related to paper engineering and pop-up books/mechanics.", "Pop-up Tutorial 1: Materials and Basic Theory with Duncan Burmingham", "There are four parts and each part is worth 10%.", "Working in groups of 3 or 4, students work in collaboration to produce a short film (1-3 minutes).", "References on the impact of visual intelligence and creativity", "Note: It\u2019s okay if you don\u2019t know these answers?", "We included this to support developing a lifelong creative habit, something that we believe can have a huge impact even if you don\u2019t see yourself working as a studio-based artist, so we\u2019re curious to know what you think.", "There will be classes where the set-up is contingent on the facilities in East Campus Hall and it will be difficult to duplicate these at home.", "I have an Instagram account (uwaterloo_finearts_printmaking) that I started in 2020, and I sometimes post from Fine 100.", "Please let me know if you don\u2019t feel comfortable participating in this public forum.", "Materials and Techniques:", "Does your assignment demonstrate control/aptitude over the processes and techniques?", "Elements of Design and Form:", "How does form relate to content?", "Experimentation:", "Is there an aspect of innovation in terms of your approach?", "Does it have a strong concept?", "The University of Waterloo does not tolerate racism or any other form of discrimination and expects campus community members to contribute to a culture where all members feel safe and valued.", "On campus supports", "Other on-campus supports", "Off campus supports", "St. Mary's Hospital\u202f- 519-744-3311", "As well as short-term support for family members or friends of sexual assault survivors.", "More information about resources and supports for students can be found online in on the Faculty of Arts Student Support page.", "The University of Waterloo has a number of multi-faith spaces that students can use for faith-based practices.", "No in-person course activity is permitted during the period of a self-declared COVID absence.", "Students can self-declare one short-term absence per term on Quest for any reason.", "The student has only one self-declared short-term absence per term and this absence can only be used during the formal lecture period."]}, {"course_id": 20, "course_code": "FINE 150", "course_name": "FINE150 - Appreciation and Expression (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Appreciation and Expression Winter 2025", "Email: mlychek@uwaterloo.ca", "The course delivers an introduction to a variety of basic techniques and concepts relevant to contemporary 2D, 3D, and digital art practices, through a series of structured studio exercises and assignments.", "View requirements for FINE 150", "Build fundamental skills/knowledge of Elements of Art and Principles of Design", "Cultivate critical thinking and creative innovation related to 2D, 3D, conceptual art", "Introduction to Assignment 1: Kilometer Project", "Reminders for Next Week's Life Drawing Sessions", "Introduction to Assignment 4: Artist Remake", "Work Period: Artist Remake and in-progress feedback", "Introduction to Assignment 5: Artist Multiple", "Work Period: Artist Multiple \u2013 brainstorming concepts", "Work Period: Artist Multiple - wrapping things up", "Work Period: Artist Multiple - wrapping things up", "DUE: Assignment 5: Artist Multiple - Critique", "The University of Waterloo has a number of multi-faith spaces that students can use for faith-based practices.", "No in-person course activity is permitted during the period of a self-declared COVID absence.", "Students can self-declare one short-term absence per term on Quest for any reason.", "The student has only one self-declared short-term absence per term and this absence can only be used during the formal lecture period."]}, {"course_id": 21, "course_code": "FINE 257", "course_name": "FINE257 - Video, New Media and the Digital Turn (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["10:00AM - 11:20AM ECH 1219", "In acknowledging the land and water, we express gratitude to those whose territory we reside on and remind ourselves of our connections and responsibilities to care for the land and water, and to respect each other who live on the land and water.", "Land acknowledgment goes beyond words and requires ongoing learning about the territory and actions to support indigenous communities.", "For further learning, resources can be found at https://www.whose.land/ & https://native-land.ca/.", "View requirements for FINE 257", "Tracing the histories, aesthetics and politics of digital art, students will critically examine the emergence of digital technologies, and their roles in transforming artistic practices, modes of production, and integration across media disciplines.", "Through both chronological and thematic approaches, students will engage with theoretical readings, analyze historical and contemporary case studies in art and digital spaces in everyday life, and create studio-based projects that respond to or critique digital and mediated cultures.", "By the end of the course, students will have developed both a historical understanding and practical fluency in the ways digital art shapes, and is shaped by, cultural and technological transformations.", "Digital &", "Post-digital", "reading week", "Themes in Digital", "Contribution & Development 20%", "Pronouns and chosen or preferred first name", "Your legal first name will always be used on certain official documents, such as diplomas and transcripts.", "The University of Waterloo does not tolerate racism or any other form of discrimination and expects campus community members to contribute to a culture where all members feel safe and valued.", "The University of Waterloo has a number of multi-faith spaces that students can use for faith-based practices.", "No in-person course activity is permitted during the period of a self-declared COVID absence.", "Students can self-declare one short-term absence per term on Quest for any reason.", "The student has only one self-declared short-term absence per term and this absence can only be used during the formal lecture period."]}, {"course_id": 22, "course_code": "INTEG 121", "course_name": "INTEG121 - Collaboration, Design Thinking, and Problem Solving (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["02:30PM - 03:20PM", "EV2 2069", "03:30PM - 04:20PM EV2 2069", "Email: vanessa.schweizer@uwaterloo.ca", "A project course in design and problem-solving across various disciplines.", "Topics include problem-solving methods and issues in design, including ethics, sustainability, and communication in small groups.", "Applied design projects require group work and draw on the skills of creative and critical thinking.", "View requirements for INTEG 121", "Collaboration is essential for solving complex, real-world problems.", "What problems do teams most commonly face and how can those problems be minimized?", "How can productive conflict increase creativity and productivity, and how can destructive conflict be reduced?", "During the course, you will learn collaboration techniques for improving team dynamics, such as creating and using a team charter, identifying and addressing conflict, providing useful feedback to team members, and building on the ideas of others to arrive at the best outcomes.", "Design thinking is contrasted with linear thinking, a common approach for solving problems that are simple.", "You will be introduced to and will practice techniques for centring the user in your designs as well as becoming cognizant of problem-solving and decision-making stages \u2013 both individually and within a team.", "Collaboration and design thinking will be exercised and studied through multiple group-based, real-world projects culminating in an open-ended design challenge and skills-based portfolio.", "1) Record and share detailed observations of the world around you in order to think critically", "2) Establish and cultivate positive group dynamics by applying appropriate theory and best practices", "3) Take initiative, exercise responsibility, problem solve, and make decisions during crucial stages of a problem-solving cycle", "Key concepts", "Design thinking (d-thinking) as problem solving", "Introduction to user/human-centred design", "D-thinking techniques", "ASSIGNED: regular observations in sketchbook", "Jan 13 Seminar: Discussion of readings and experience with bricolage", "D-thinking technique #5 \u2013 Critique", "DUE start of class Feb 10: Project 1 Individual Post of Team Experience (in Kritik)", "OPTIONAL: continue regular observations individually", "Feb 26: D-thinking technique #4b \u2013 the Question Formulation Technique", "In-class:", "Mar 17: Group progress reports and discussion", "Recommended for sharing files with group members and keeping in touch Yes $0", "Design: Artifacts in Society by Karl T. Ulrich Freely available as a PDF on LEARN.", "We will also be using the following online tool (see LEARN for details as to how to access and use each of these tools):", "Kritik enables you to utilize a rubric and provide qualitative feedback.", "LO2: Establish and cultivate positive group dynamics by applying appropriate theory and best practices", "LO3: Take initiative, exercise responsibility, problem solve, and make decisions during crucial stages of a problem-solving cycle", "For in-class observations, the best two observations over the term count towards the course mark.", "At the start of each project, group members should", "Students will be given class time to discuss these with each other, as such discussion informs the group's understanding of the design challenge.", "This means that marks will be recorded without knowing the identity of the student.", "Any of the following errors will result in a penalty:", "Respectful Behavior", "Instructors maintain agency over considerations granted for missed course components.", "For illness/medically-related absences other than Covid-19, please have a medical provider complete the Verification of Illness (VIF) form and submit it to https://absence.uwaterloo.ca.", "You are limited to one of these per term, and can only use it during the formal lecture period.", "Note that you cannot use this absence for consideration in FLD, LAB, or STU components of your course.", "Mental Health: The University of Waterloo, the Faculty of Environment and our Departments/Schools consider students' well-being to be extremely important."]}, {"course_id": 23, "course_code": "INTEG 251", "course_name": "INTEG251 - Creativity and Innovation (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Creativity and Innovation Fall 2024", "10:00AM - 11:20AM EV2 2069", "Students will learn to identify and explain key ideas and historical figures in the study and practice of creative thinking.", "View requirements for INTEG 251", "The concepts and practices you develop in this course will help you exercise creative thinking and innovation in other classes, projects, and work beyond the university too.", "2) Situate creativity and innovation in a history of changing working conditions across sectors.", "3) Apply key concepts and practices to your own projects inside and outside academia.", "Phases", "Welcome and overview", "Theory and Practice", "Creative Thinking: Def. & Structure", "Discussion: Conscious Creative by Kelly Small (Intro + you pick any 3 ethical practices from the remaining chapters)", "No classes this week", "Design Project", "Wed Oct 23: Brainstorming project options & Group formation", "Wed Oct 30: Ideate possible interventions", "Wed Nov 13: Explicitly linking interventions & designs", "Review, clarifying questions & next steps", "Participation self-evaluation part 2", "What might you learn from these efforts?", "How might you learn from this experience moving forward?", "Each case study comes with different possible readings to be discussed in a short written analysis (approximately 1000-1500 words in essay form):", "Open topic \u2013 Propose another case study topic of interest to you; make sure it includes at least two new relevant readings and poses a question that you can answer in a 1000-1500 word essay, drawing on your learning in the course.", "What designs and patterns do you think were shaping what creativity and innovation meant in the context of the project?", "Demonstrate familiarity with concepts and practices from class (5%)", "Instructors maintain agency over considerations granted for missed course components.", "For illness/medically-related absences other than Covid-19, please have a medical provider complete the Verification of Illness (VIF) form and submit it to https://absence.uwaterloo.ca.", "You are limited to one of these per term, and can only use it during the formal lecture period.", "Mental Health: The University of Waterloo, the Faculty of Environment and our Departments/Schools consider students' well-being to be extremely important.", "The WatSAFE app provides on- and off-campus contacts for students in distress, including international students, and other information related to campus safety and security."]}, {"course_id": 24, "course_code": "KIN 320", "course_name": "KIN320 - Task Analysis (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Task Analysis Winter 2025", "KIN 320", "KIN 320 001", "Email", "Email", "Task analysis includes a broad range of descriptive and analytic techniques from which the practitioner must select the most appropriate one for their purposes and setting.", "This skills-based course will guide students in learning task analysis methodologies and associated techniques using a combination of didactic, case-study, and experiential learning-based teaching methods.", "The application of task analysis from the perspective of a Human Factors & Ergonomics (HFE) specialist will be emphasized.", "View requirements for KIN 320", "Identify practical and ethical issues that emerge when applying task analysis", "3. Choose task analysis methodologies appropriate for a given setting and purpose", "4. Perform a range of task analysis methods", "4 Th January 16 Observational Methods & Activity Sampling", "Tu February 18 Break week - No classes", "Th February 20 Break week - No classes", "13 Th February 27 Static strength, holding times & rest allowance", "15 Th March 6 Metabolic Equations", "No Class - Task Analysis Work Period", "Th April 3 No Class - Task Analysis Work period", "April 7-8 \u2013 Pre-examination study days", "Instructions regarding time allotted and submission methods will be provided in conjunction with these evaluations.", "Self-declaration of short-term absence"]}, {"course_id": 25, "course_code": "PSYCH 207", "course_name": "PSYCH207 - Cognitive Processes (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["An examination and evaluation of selected topics dealing with human information processing such as attention, memory, pattern recognition, consciousness, language, dyslexia, decision making, and problem solving.", "how we call on our mental information and resources to make important decisions; and,", "Describe how context shapes and constrains cognition, which involves"]}, {"course_id": 26, "course_code": "PSYCH 261", "course_name": "PSYCH261 - Physiological Psychology (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Introduction to brain, basic physiological processes, and their roles in behaviour.", "Both experimental and clinical data are considered.", "Familiarise you with the theoretical and philosophical underpinnings of physiological psychology;", "Teach you about the physiological mechanisms underlying human sensory and perceptual systems; and", "Provide you with insights into the basic physiological and mechanisms involved in behaviour, cognition, emotion and consciousness.", "Week 1: Introduction and History", "Sona Participation and Research Experience Marks", "Students may complete any combination of these options to earn research experience grades.", "Credits for online courses can be earned through any combination of studies as noted above.", "Participation enables students to learn first-hand about psychology research and related concepts.", "Educational focus of participation in research", "To maximize the educational benefits of participating in research, students will receive feedback information following their participation in each study detailing the following elements:", "Provisions to ensure confidentiality of data", "**", "Identify the psychological concepts in the article and indicate the pages in the textbook that are applicable.", "Clearly evaluate the application or treatment of those concepts in the article.", "If such a conflict arises, the Associate Chair for Undergraduate Affairs is available for consultation and to mediate a resolution between the student and instructor."]}, {"course_id": 27, "course_code": "STAT 332", "course_name": "STAT332 - Sampling and Experimental Design (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Sampling and Experimental Design Winter 2025", "Email: schonlau@uwaterloo.ca", "Designing sample surveys.", "Analysis of variance.", "Designing for comparison of groups.", "Sampling: explain the effect of the finite population correction", "Sampling: Design and analyze a stratified random sample", "Experimental: Explain factorial design", "Experimental: Compare and contrast experimental design and observational studies", "5 2025-01-21 6 regress A1 out", "15 2025-03-04 4 Anova/F-test", "Slides Online in learn Yes 0", "Slides:  I am reworking some slides and will post them one-by-one into learn before class.", "data collection) 2%", "Activities supporting in-class analysis: The in-class analysis will require data collection (and possibly other activities).", "All team members must meaningfully contribute to the analysis and to coding.", "Projects must not use data sets that one of the team members has used for similar projects in previous courses.", "You must write up solutions using your own words and write your own programs.", "Give a clear explanation as to why you think you deserve a different mark."]}, {"course_id": 29, "course_code": "CS 454", "course_name": "CS454 - Distributed Systems (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Distributed Systems Winter 2025", "11:30AM -", "S. Al Kiswany", "PHY 313", "S. Al Kiswany", "08:30AM - 09:50AM MC 2035", "S. Al Kiswany", "11:30AM -", "S. Al Kiswany", "PHY 313", "S. Al Kiswany", "08:30AM - 09:50AM MC 2035", "S. Al Kiswany", "An introduction to distributed systems, emphasizing the multiple levels of software in such systems.", "Specific topics include fundamentals of data communications, network architecture and protocols, local-area networks, concurrency control in distributed systems, recovery in distributed systems, and clock synchronization.", "An introduction to distributed systems, emphasizing the multiple levels of software in such systems.", "Specific topics include fundamentals of data communications, network architecture and protocols, local-area networks, concurrency control in distributed systems, recovery in distributed systems, and clock synchronization.", "Introductory Concepts", "Introduction/Overview of networking concepts relevant for distributed systems", "5. Distributed File Systems (2)", "Architecture", "Semantics", "Service software design", "Name Spaces", "Name Resolution", "Physical and Logical Clock Synchronization", "Mutual Exclusion", "Election", "Consistency Models", "Data Analytics", "Online shopping", "Distributed Systems, 4th Edition, Maarten van Steen and Andrew Tanenbaum Available for free Yes 0", "Distributed Systems, 4th Edition, Maarten van Steen and Andrew Tanenbaum", "For assignments, do not use any public or web-based source code repository hosting service other than https://git.uwaterloo.ca.", "You may discuss general concepts and problems with classmates, tutors, TAs, and instructors.", "Copyright and Intellectual Property", "Intellectual property includes items such as:", "Math Faculty code-sharing policy: https://uwaterloo.ca/math/code-sharing-policy"]}, {"course_id": 30, "course_code": "CS 480", "course_name": "CS480 - Introduction to Machine Learning (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Introduction to Machine Learning Winter 2025", "10:00AM - 11:20AM DWE 1501", "Introduction to modelling and algorithmic techniques for machines to learn concepts from data.", "Optimization-based learning: loss minimization. regularization.", "This is especially useful in complex tasks such as natural language processing, information retrieval, data mining, computer vision and robotics where it is not practical for a programmer to enumerate all possible situations in order to specify suitable instructions for all situations.", "The course will introduce the basics of machine learning and data analysis, and demonstrate how machine learning techniques have impacted life and society.", "The course starts with some classical tasks and algorithms in machine learning, then transitions to modern advances and successful applications in real life, and finally ends with discussions on the societal impact that machine learning has generated.", "A significant part of the course will be devoted to raising students' awareness on such ethical issues, including how to make machine learning algorithms fair and unbiased, how to protect individual privacy without compromising learning, how machine learning algorithms might be attacked, how to measure and improve the security of machine learning algorithms, and how to make machine learning algorithms explainable and interpretable.", "Recognize and formalize a task as a machine learning problem", "Identify suitable algorithms to tackle different machine learning problems", "Understand and implement a plethora of foundational machine learning algorithms", "Apply machine learning algorithms to real datasets", "Become aware of potential ethical and safety issues of machine learning on society", "Introduction (first lecture: Jan 7, 2025)", "Linear Regression", "Reproducing Kernels", "Multi-layer Perceptron", "Deep Neural Networks", "Attention", "Decision Trees", "Flow Models", "Variational Autoencoders", "Diffusion Models"]}, {"course_id": 31, "course_code": "CS 484", "course_name": "CS484 - Computational Vision (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Computational Vision Winter 2025", "10:00AM - 11:20AM MC 2034", "Introduction to image and vision understanding by computer.", "Camera-system geometry, image formation and lighting, and image acquisition.", "Processing of stereo images, and motion in image sequences.", "Applications of computer-vision systems.", "General Description", "Computer Vision encompasses a variety of innovative methods and algorithms leveraged in applications such as facial recognition, image searching, augmented reality, medical image analysis, automated mapping of environments, and digital effects in movies and photography.", "This course provides an introduction to the computational and mathematical foundations of computer vision and covers many of its standard applications.", "In case some points in the slides are skipped in class (e.g. review of basic background in linear algebra, or if time runs out), the students could be referred to the posted video lectures.", "The videos explain all the slides, including optional reviews of basic linear algebra, multi-variate calculus, and some (clearly marked) optional material in computer vision.", "iClicker we will use iClicker for occasional in-class polling.", "Mathematical skills: AMATH 242/CS 371 or CS 370 or Linear Algebra 2 (MATH 235/245)", "Comments on Linear Algebra", "Understanding computer vision methods requires certain level of confidence with linear algebra, which is actively used throughout the course.", "CS484 only briefly reviews some critical linear algebraic tools as they become needed, but there is absolutely no time to teach linear algebra on the same level (covering proofs and many basic examples) as it is done in the appropriate math courses.", "Based on observations from the previous years, students who took only one term of introductory linear algebra and do not remember much of it must be ready to commit (possibly substantial) extra time.", "At the same time, computer vision offers highly motivating and intuitive context for learning linear algebra.", "If you plan to take other courses on Data Analysis, AI, or Machine Learning, you will also appretiate stronger linear algebra skills.", "While CS484 covers only the absolutely necessary background in linear algebra, as well as multivariate calculus, some useful external links can be found in \"Math Resources\".", "This course introduces many standard computer vision problems and computational approaches for solving them.", "The context of image analysis also provides an intuitive and stimulating visual environment for developing and understanding numerical algorithms.", "Slides", "In case of substantial changes, the updated slides will be reposted online.", "The posted videos explain all the slides in details, including review of basic background in linear algebra and multi-variate calculus.", "You will be referred to specific relevant sections of these books in class.", "Computer Vision: Algorithms and Applications, 2010.", "Python's linear algebra library \"numpy\" will be widely used in all assignments.", "More details and code samples are posted here.", "This happens naturally as the first half of the course spends more time reviewing background from linear algebra, multi-variate calculus, and statistics.", "Assignments will require submission of code and a report.", "Typical image analysis algorithms produde output (geometric structures, segments, labelings) that can be visualized.", "The drop box remains open for late submissions for a few days past the due date/time of each assignment - TAs record each late day.", "Scholastic offences are taken seriously and students are directed to read the appropriate university policy.", "Assignment 4: low-level segmentation"]}, {"course_id": 32, "course_code": "CS 486", "course_name": "CS486 - Introduction to Artificial Intelligence (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Introduction to Artificial Intelligence Winter 2025", "08:30AM - 09:50AM MC 2038", "08:30AM - 09:50AM MC 2038", "Varun Dhanraj: vdhanraj@uwaterloo.ca", "Methods of general problem solving.", "Multi-agent systems.", "Methods of general problem solving.", "Introduction to mathematical logic Mechanical theorem proving.", "Available free for downlooad online at artint.info Yes"]}, {"course_id": 33, "course_code": "CS 488", "course_name": "CS488 - Introduction to Computer Graphics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Introduction to Computer Graphics Winter 2025", "04:00PM - 05:20PM", "04:00PM - 05:20PM", "Software and hardware for interactive computer graphics.", "Software and hardware for interactive computer graphics.", "The password will be released during the first week of classes.", "Software and hardware for interactive computer graphics.", "Implementation of 3-D transformations, clipping and projection routines.", "Course delivery will consist mostly of traditional lectures with occasional use of slides and technical demonstrations.", "Continuity Plans", "In case of a cancellation of in-person classes, the instructor will release in the course Lessons website required reading materials equivalent to the contents covered in each lecture.", "These materials can be regarded as illustrated transcripts of the traditional lectures.", "In case of a cancellation of in-person meetings, the course staff\u2019s office hours will be held online, with instructions fort these virtual office hours (VOH) to be provided via Learn.", "The graphics lab will be closed during periods in which in-person lectures need to be cancelled.", "Assignment deadlines will not be postponed so that students can troubleshoot the VM.", "write interactive 3D computer graphics programs;", "understand how linear and perspective transformations are used in modeling and rendering in 3D computer graphics;", "write a simple ray tracer.", "Mathematical Underpinnings", "Transformations", "Hidden Surfaces and Shading", "Realistic Rendering", "Animation", "Students must average at least a 50% in both the programming and examination components of the course to pass.", "Bonus marks obtained in one component are not carried over to the other component.", "The instructor reserves the right, where appropriate, to adjust raw marks downward in the case of cheating and upward in other situations.", "A1 to A4 have the same weight.", "In case of any issue related to their submission procedures, the student must contact the TAs before the day scheduled for the activity (assignment or project) using the appropriate means indicated below.", "Intellectual property includes items such as:", "phone: 1-866-925-5454;", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 34, "course_code": "CS 445", "course_name": "CS445 - Software Requirements Specification and Analysis (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Software Requirements Specification and Analysis Winter 2025", "10:00AM - 11:20AM MC 2035", "Email:x784chen@uwaterloo.ca", "Email: ar2elsha@uwaterloo.ca", "Email: d3pang@uwaterloo.ca", "Models, notations, and processes for software requirements identification, representation, analysis, and validation.", "ECE 451: View requirements for ECE 451", "The week of", "Deliverables", "1 Introduction", "3 RE Reference Model", "Jan 13 4 Domain Model 4 Domain Model D0 \u2013 Group members & Project idea", "Jan 27 7 Functional Modelling 8 OCL D1 \u2013 Domain Model & Stakeholders", "Feb 10 10 Quality Requirements 10 Quality Requirements D2 -  Use case Diagram & Description", "Feb 24 11 Requirements Conflict management 12 Prioritizing Requirements D3 \u2013 Functional Model & OCL", "Mar 3 13 Cost Estimation 14 Risk Analysis D4 \u2013 State Diagram", "Mar 17 15 Temporal Logic 16 Validation and Verification D5 \u2013 Cost Estimation & Risk Analysis", "Mar 31 17 Software Project Management 18 Requirement Engineering for AI Systems D6 - Quality Attributes and Temporal Logic", "Ability to separate requirements from specifications from domain assumptions and argue that a specification + domain assumptions satisfy requirements", "Ability to model requirements in a variety of modelling paradigms", "Ability to elicit and document non-functional requirements such that the to-be-developed software can be objectively tested for their satisfaction", "Ability to use tools to manage a Software Development Team.", "Why is requirements analysis complex?", "Functions as a modelling notation.  Pre- and post-conditions.", "Use-case diagrams.", "Functions over a class diagram.", "Modelling dynamic behaviour of a software system.", "UML State Machines.", "Specification patterns.", "7: Model Integration (1 hour)", "The expected contents and organization of a Software Requirements Specification (SRS).", "AI vs non-AI Systems based on what we covered in this course.", "Braek and Haugen, Engineering real-time systems: an object-oriented methodology using SDL, Prentice-Hall, 1993.", "Larman, Applying UML and Patterns, Prentice Hall, 2004.", "Maciaszek, Requirements Analysis and System Design, Addison Wesley, 2001.", "Bray, An Introduction to Requirements Engineering, Addison-Wesley, 2002.", "Nuseibeh and Zave, Software Requirements and Design:", "van Lamsweerde, Requirements Engineering: From System Goals to UML Models to Software Specifications, Wiley, 2009.", "Brooks, The Design of Design, Addison Wesley, 2010.", "Alan Davis, Just Enough Requirements Management: Where Software Development Meets Marketing, Dorset House Publishing, 2005.", "The project can be related to requirements engineering or a more general software engineering topic.", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 35, "course_code": "ECE 451", "course_name": "ECE451 - Software Requirements Specification and Analysis (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Software Requirements Specification and Analysis Winter 2025", "10:00AM - 11:20AM MC 2035", "Email:x784chen@uwaterloo.ca", "Email: ar2elsha@uwaterloo.ca", "Email: d3pang@uwaterloo.ca", "Models, notations, and processes for software requirements identification, representation, analysis, and validation.", "ECE 451: View requirements for ECE 451", "The week of", "Deliverables", "1 Introduction", "3 RE Reference Model", "Jan 13 4 Domain Model 4 Domain Model D0 \u2013 Group members & Project idea", "Jan 27 7 Functional Modelling 8 OCL D1 \u2013 Domain Model & Stakeholders", "Feb 10 10 Quality Requirements 10 Quality Requirements D2 -  Use case Diagram & Description", "Feb 24 11 Requirements Conflict management 12 Prioritizing Requirements D3 \u2013 Functional Model & OCL", "Mar 3 13 Cost Estimation 14 Risk Analysis D4 \u2013 State Diagram", "Mar 17 15 Temporal Logic 16 Validation and Verification D5 \u2013 Cost Estimation & Risk Analysis", "Mar 31 17 Software Project Management 18 Requirement Engineering for AI Systems D6 - Quality Attributes and Temporal Logic", "Ability to separate requirements from specifications from domain assumptions and argue that a specification + domain assumptions satisfy requirements", "Ability to model requirements in a variety of modelling paradigms", "Ability to elicit and document non-functional requirements such that the to-be-developed software can be objectively tested for their satisfaction", "Ability to use tools to manage a Software Development Team.", "Why is requirements analysis complex?", "Functions as a modelling notation.  Pre- and post-conditions.", "Use-case diagrams.", "Functions over a class diagram.", "Modelling dynamic behaviour of a software system.", "UML State Machines.", "Specification patterns.", "7: Model Integration (1 hour)", "The expected contents and organization of a Software Requirements Specification (SRS).", "AI vs non-AI Systems based on what we covered in this course.", "Braek and Haugen, Engineering real-time systems: an object-oriented methodology using SDL, Prentice-Hall, 1993.", "Larman, Applying UML and Patterns, Prentice Hall, 2004.", "Maciaszek, Requirements Analysis and System Design, Addison Wesley, 2001.", "Bray, An Introduction to Requirements Engineering, Addison-Wesley, 2002.", "Nuseibeh and Zave, Software Requirements and Design:", "van Lamsweerde, Requirements Engineering: From System Goals to UML Models to Software Specifications, Wiley, 2009.", "Brooks, The Design of Design, Addison Wesley, 2010.", "Alan Davis, Just Enough Requirements Management: Where Software Development Meets Marketing, Dorset House Publishing, 2005.", "The project can be related to requirements engineering or a more general software engineering topic.", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 36, "course_code": "SE 463", "course_name": "SE463 - Software Requirements Specification and Analysis (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Software Requirements Specification and Analysis Fall 2024", "RCH 211", "Daniel Berry, DC 3329, No telephone, dberry ATT uwaterloo DOTT ca", "So I cannot use a voice-only telephone.", "I can use a video communication medium if the bandwidth of the connection is high enough that the image gets updated at the frequency of television or movies and thus, the lip movement is smooth enough to be decipherable.\"", "Joel Rorseth, jerorset ATT uwaterloo DOTT ca", "Yelizaveta Brus, ybrus ATT uwaterloo DOTT ca", "Noble Saji Mathews, ns3mathe ATT uwaterloo DOTT ca", "Shimon, ssarefin ATT uwaterloo DOTT ca", "Mohamed Rouili, mrouili ATT uwaterloo DOTT ca", "Max Zhang, m492zhan ATT uwaterloo DOTT ca", "Introduces students to the requirements definition phase of software development; models, notations, and processes for software requirements, identification, representation, analysis, and validation.", "Day & Lecturer OR Topic & Main Slides", "Administration, Plans, and Requirements of the Course The Importance of Ignorance", "Requirements Engineering Reference Model: Domain Modeling", "Requirements Engineering Reference Model: Domain Modeling Classes: Concepts, Context, and Identification", "Classes: Concepts, Context, and Identification", "24 September", "Use Cases and Scenarios", "Use Cases and Scenarios", "IEEE Standard for SRSs", "User Interface Specifications", "Reading Week!!!", "Reading Week!!!", "User's Manual Advice User Interface Specifications", "User Interface Specifications", "Software Cost Estimation", "Ambiguity in Requirements Specifications", "Ambiguity in Requirements Specifications", "State Machine Diagrams", "Linear Temporal Logic System State of a State Machine", "Linear Temporal Logic Elicitation", "Elicitation", "3 December", "Requirements Modeling", "RE Reference Model", "Domain Modeling", "Assumptions and Exceptions Identification", "Requirements Specifications", "SE and RE Economics", "Cost Estimation", "RE in Agile Development", "Ambiguity in Requirements Specifications", "Verification and Validation", "Importance of Ignorance in RE", "Requirements Elicitation", "Things to Specify", "User Interfaces", "Formal Specification Notations", "Linear Temporal Logic", "The topics are listed in a rough order of dependency."]}, {"course_id": 37, "course_code": "CS 446", "course_name": "CS446 - Software Design and Architectures (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Software Design and Architectures Winter 2025", "10:00AM - 11:20AM MC 1056", "10:00AM - 11:20AM MC 1056", "10:00AM - 11:20AM MC 1056", "- Saarang Agarwal <saarang.agarwal@>", "- Bihui Jin <bihui.jin@>", "- Daniel Phan <daniel.phan@>", "- Amber Wang <jiale.wang@>", "ECE 452: View requirements for ECE 452", "Differentiate how various architectural styles and design patterns enhance and degrade a system\u2019s functional, non-functional and human value properties;", "Create and implement an architecture and design, refining it into a complete system;", "1 Jan 06 Mon Introduction to Class", "Jan 15 Wed Use Cases, Human Values", "Jan 17 Fri **P0** Team Formation", "Jan 31 Fri **P2** Project Proposal", "Feb 12 Wed **P3** Iteration 1 Demo", "Feb 26 Wed Design Patterns 2 - Structural", "9 Mar 03 Mon Design Patterns 3 - Behavioral", "Mar 05 Wed **P4** Iteration 2 Demo", "10 Mar 10 Mon Design Patterns 4", "Mar 19 Wed **P5** Iteration 3 Demo", "Apr 02 Wed **P6** Final Presentation", "Apr 04 Fri **P7** Final Report", "Jan 17 P0: Team Formation -", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}]