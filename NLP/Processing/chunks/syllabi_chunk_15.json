[{"course_id": 38, "course_code": "ECE 452", "course_name": "ECE452 - Software Design and Architectures (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Software Design and Architectures Winter 2025", "10:00AM - 11:20AM MC 1056", "10:00AM - 11:20AM MC 1056", "10:00AM - 11:20AM MC 1056", "- Saarang Agarwal <saarang.agarwal@>", "- Bihui Jin <bihui.jin@>", "- Daniel Phan <daniel.phan@>", "- Amber Wang <jiale.wang@>", "ECE 452: View requirements for ECE 452", "Differentiate how various architectural styles and design patterns enhance and degrade a system\u2019s functional, non-functional and human value properties;", "Create and implement an architecture and design, refining it into a complete system;", "1 Jan 06 Mon Introduction to Class", "Jan 15 Wed Use Cases, Human Values", "Jan 17 Fri **P0** Team Formation", "Jan 31 Fri **P2** Project Proposal", "Feb 12 Wed **P3** Iteration 1 Demo", "Feb 26 Wed Design Patterns 2 - Structural", "9 Mar 03 Mon Design Patterns 3 - Behavioral", "Mar 05 Wed **P4** Iteration 2 Demo", "10 Mar 10 Mon Design Patterns 4", "Mar 19 Wed **P5** Iteration 3 Demo", "Apr 02 Wed **P6** Final Presentation", "Apr 04 Fri **P7** Final Report", "Jan 17 P0: Team Formation -", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 39, "course_code": "SE 464", "course_name": "SE464 - Software Design and Architectures (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Notice of Recording", "Software Design and Architectures Fall 2024", "10:00AM - 11:20AM EV3 1408", "Weiyi Shang <wshang@uwaterloo.ca>", "include SE464 in subject line, or will get lost in email filters]", "explain the strengths and weaknesses of various architectural styles and design patterns / techniques.", "communicate and rationalize architectural and design decisions.", "Week 2 September 11th Design principles, UML+Design pattern flashback+ Architecture+NFP", "Week 3 September 18th Basics of system design: Scaling and cache", "Basics of system design: DB scaling: R DB", "Week 4 September 25th Basics of system design: DB scaling: NoSQL", "Week 5 September 30th Basics of system design: DB scaling: Consistency and choosing a DB", "Week 5 October 2nd Basics of system design: REST API", "Week 6 October 7th Basics of system design: micro services, load balancing", "Week 6 October 9th Basics Architecture design wrap up (lab 1 due by the end of the Friday)", "Week 12 November 18th Basics of system design: Authentication", "Notice of Recording"]}, {"course_id": 40, "course_code": "CS 447", "course_name": "CS447 - Software Testing, Quality Assurance, and Maintenance (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Notice of Recording", "04:00PM - 05:20PM", "Weiyi Shang <wshang@uwaterloo.ca>", "Introduces students to systematic testing of software systems.", "ECE 453: View requirements for ECE 453", "Organized testing can help identify problems in software systems, enabling developers to fix these problems.", "And easier-to-test software is better software.", "\u2022 You will be able to create and evaluate test suites for reasonably-sized software systems.", "\u2022 You will learn how to effectively test during the software engineering process.", "Creating tests", "Test minimization", "Week 12 March 27th Field testing", "Late policy: every person can have a late (max 24 hours) deliverable once", "Notice of Recording"]}, {"course_id": 41, "course_code": "ECE 453", "course_name": "ECE453 - Software Testing, Quality Assurance, and Maintenance (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Notice of Recording", "04:00PM - 05:20PM", "Weiyi Shang <wshang@uwaterloo.ca>", "Introduces students to systematic testing of software systems.", "ECE 453: View requirements for ECE 453", "Organized testing can help identify problems in software systems, enabling developers to fix these problems.", "And easier-to-test software is better software.", "\u2022 You will be able to create and evaluate test suites for reasonably-sized software systems.", "\u2022 You will learn how to effectively test during the software engineering process.", "Creating tests", "Test minimization", "Week 12 March 27th Field testing", "Late policy: every person can have a late (max 24 hours) deliverable once", "Notice of Recording"]}, {"course_id": 42, "course_code": "SE 465", "course_name": "SE465 - Software Testing and Quality Assurance (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Software Testing and Quality Assurance Winter 2025", "Introduces students to systematic testing of software systems.", "Engineering is about applying the appropriate amount of effort to make sure that systems work properly, especially systems that affect the public in some way.", "In this course, as software engineering students, you will learn about tools and techniques that you can use to make your software systems fit-for-purpose.", "write new test suites, improve existing test suites, and critique test suite quality using engineering judgment", "The week-by-week schedule might slip.", "I last taught SE 465 in Winter 2019 and the ECE 453 version in Winter 2023, but I think that you will benefit from the revamp I'm doing this term.", "Introduction", "Evaluating your tests: coverage, fuzzing, mutation-based fuzzing, mutation analysis", "Symbolic Execution", "Z3 SMT Solver", "Dynamic Symbolic Execution", "Semantics of Symbolic Execution", "Verification Condition Generation", "Bounded Model Checking", "Real-life Applications of Verification", "Metamorphic testing", "I anticipate that the final exam will be in-person, and that quizzes will be in-class in-person, though there are no guarantees.", "Acceptable collaboration includes discussing ideas and structures with others, as well as helping others debug their code.", "If your code is too close in structure to someone else's code, you are going to have a problem.", "Or, let's sum this up in two short instructions:", "The teaching team is keenly aware of the existence of generative AI (e.g., Github Copilot, ChatGPT) and how such tools can be used to write and test code.", "It almost goes without saying, but we ask you to be respectful and polite when communicating via this medium and to assume the best about others, as tone can be di\ufb03cult to interpret on a discussion forum.", "The human visual system has evolved to perceive saber\u2010toothed tigers in the savannah.", "We encourage everyone to be respectful of their classmates and to not distract them.", "Wise use of computers and the Internet can be helpful for fully engaging in class.", "From the command prompt, you can use compilers and text\u2010mode web browsers (w3m, lynx, links/elinks, etc....) tmux may also be helpful in managing multiple terminal sessions.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 43, "course_code": "CS 453", "course_name": "CS453 - Software and Systems Security (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Software and Systems Security Winter 2025", "04:00PM - 05:20PM", "04:00PM - 05:20PM", "Meng Xu", "Introduction to security issues in modern software, operating systems, and other computing platforms (e.g., mobile and cloud environments).", "Specific topics include comparing security and privacy, program security, operating system security, mobile security, hardware security, administrating security, and legal and ethical issues.", "Students completing this course should be able to identify common attack vectors against modern computing environments and deploy state-of-the-practice detection and defense practices.", "Module - Introduction to Software and System Security", "Jan 07: Lecture: Course logistics + Basis concepts in security", "Module - A Recap of Background Information", "Module - An In-depth Study of Memory Errors", "Jan 21: Lecture: Detecting memory errors dynamically", "Jan 23: Lecture: Detecting memory errors statically", "Module - Operating System Security", "Mar 06 Lecture: Access control and capabilities", "Module - Mobile Security", "Module - Hardware Security", "Module - Non-technical Aspects in Security", "Module - Hot Topics in Software and Systems Security", "Apr 03: Lecture: Software supply-chain security", "Computer Security and the Internet: Tools and Jewels from Malware to Bitcoin (2nd Edition) Textbook No 0", "Security in Computing (5th Edition) Textbook No 0"]}, {"course_id": 44, "course_code": "CS 459", "course_name": "CS459 - Privacy, Cryptography, Network and Data Security (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 13, "major_name": "Human-Computer Interaction Specialization", "topics": ["Privacy, Cryptography, Network and Data Security Winter 2025", "04:00PM - 05:20PM", "Office hours are assignment-dependent and their time/location will be disclosed during the introduction of each assignment.", "Introduction to privacy and security using cryptography and related techniques in networks, distributed systems, and data science.", "For at-rest protection, specific topics include the basics of cryptography and relevant ethics/policy concepts.", "Evaluate the use of cryptography to protect data assets in storage, transit, and use", "Analyze security and privacy threats to data assets, including the privacy level of various data release mechanisms, privacy-utility trade-offs, and statistical inference attacks to infer sensitive information", "Evaluate the use of network security hardware and software to protect data assets in transit and use.", "Introduction", "Lecture 1 - Logistics and Introduction to the course (Jan. 6th)", "Data Protected in Transit", "Assignments can be submitted multiple times, and the last one will be used for marking.", "Include a clear justification for your claims.", "Your paper should be a summary of past and current work on your topic, as well as an overview of known open problems and potential future directions in the area.", "Your proposal and paper paper should be formatted in the two-column ACM proceedings format, using one of the ACM SIG Proceedings Templates.", "The ACM templates include headings for \u201cCategories and Subject Descriptors\u201d, \u201cGeneral Terms\u201d, and \u201cKeywords\u201d, which you do not need to use.", "Otherwise, in general, create a public one so that your peers can benefit too.", "Email:", "We understand that these circumstances can be troubling, and you may need to speak with someone for emotional support."]}, {"course_id": 0, "course_code": "BET 360", "course_name": "BET360 - Design Frameworks for Social Ventures (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Design Frameworks for Social Ventures Fall 2024", "BET 360", "In this course, students will explore several design frameworks as they relate to complex problems; assess the impacts of these frameworks in recent entrepreneurial applications; and determine how to apply these concepts in the design of the social impact aspects of ventures and cross-industry collaborations.", "View requirements for BET 360", "Articulate the importance of design, and design thinking in solving problems for social and environmental change, through entrepreneurial ventures", "Understand, describe, and apply emerging frameworks in designing for social impact (ie.", "Collaborate with others to explore significant social problems using critical lenses", "Design, when everybody designs: An introduction to design for social innovation.", "Thinking in Systems: A primer.", "Electronic Device Policy", "Accommodation for Students with Disabilities", "This course includes the independent development and practice of specific critical thinking skills, such as;", "To understand, explain, and analyze base content knowledge around a range of topics in social impact and design, curated for this course", "Library for research-based assignments"]}, {"course_id": 1, "course_code": "BET 420", "course_name": "BET420 - Entrepreneurship for Social Impact (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Entrepreneurship for Social Impact Fall 2024", "This course explores how innovative approaches can address social problems, create organizations that make positive change, have significant social impact, and be sustainable and economically viable.", "Students develop skills and tools for refining and implementing their ideas as well as measuring the success and value of mission-driven organizations.", "Through case studies, lectures, and workshops, students also develop skills in strategic thinking with a socially conscious business mindset to create high-impact ventures.", "Together, we will explore Social Entrepreneurship from multiple sides: studying key topics using readings and research; employing design thinking to consider complex systemic problems; and working to propose the early stages of a model for a social venture, through insights gained throughout the term including interviewing experts for a group podcast project.", "In this course, we are interested in ventures that create social impact while being financially sustainable.", "The course will employ a blend of short lecture videos, in-person classes on most Wednesdays this term from 6:30pm-9:20pm, a design sprint, engagement via the LEARN platform, virtual check-ins with myself during online group work weeks, and a guest speaker panel.", "Apply methods of design thinking, systems thinking and research skills to address a social problem", "Social enterprise mini-case presentation 10%", "Group assessment: Impact gaps canvas submission 15%", "This course includes the independent development and practice of specific critical thinking skills, such as;", "Library for research-based assignments"]}, {"course_id": 2, "course_code": "CS 492", "course_name": "CS492 - The Social Implications of Computing (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["The Social Implications of Computing Winter 2025", "08:30AM - 11:20AM AL 124", "Students learn how to make informed judgements about the social and ethical consequences of deploying computer technologies and how to foster critical thought and professional responsibility.", "Identify important social implications of computerization;", "Combine their opinions with information from existing research in both written and oral formats;", "Identify where their knowledge of computer science provides a valuable contribution to the overall dialogue about the social and ethical implications of computing.", "Proactively identify potential ethical issues related to data and new technologies and applications;", "Evaluate the potential risks and benefits of different courses of action that could be taken with respect to data and new technologies and applications;", "Succinctly and confidently articulate and justify your views on ethical issues related to data and new technologies and applications;", "for CS 492 Section 003 in particular", "That said, please do not attend class if you are sick and should be in self-isolation; just let your instructor and TAs know you are ill and unable to attend class.", "A link to join the Slack channel may be found here: https://join.slack.com/t/cs492section003w25/shared_invite/zt-2wl26b5p3-pxMv5Z6mRjbOoNybeKXSwA.", "Evaluation in this course will be comprised of the following three components:", "A note on the use of large language models (\u201cLLMs\u201d) and generative AI systems: While it is my strong preference that students not use these systems and prepare their journal entries entirely on their own, students are permitted to use such systems to improve the technical quality of their writing, but they may not use them to do their writing for them.", "If you do use one of these systems, you must inform us that you have done so and how you used it.", "Unlike the weekly commentaries or position papers, students are encouraged to experiment with LLMs and generative AI systems and to incorporate them as part of their small-group projects!", "A five-minute video tour of the project and its findings.", "This should be rare since overall grades can easily be improved by submitting an additional written assignment.", "EMPOWER ME in China", "In particular:", "IP includes items such as:", "In particular, in this Ethics Workshop, we will discuss bias and discrimination in data and algorithms, and how new technologies and applications can contribute to and ameliorate these problems."]}, {"course_id": 3, "course_code": "ENVS 205", "course_name": "ENVS205 - Sustainability: The Future We Want (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Your instructor checks email and the Ask the Instructor discussion topic frequently and will make every effort to reply to your questions within 24\u201348 hours, Monday to Friday.", "The course is designed to get you thinking about and applying key concepts in the course.", "The modules also include applied Examples, that help to demonstrate concepts and Definition boxes, that help clarify words that all students may not be familiar with.", "In addition to these core resources, you'll find lots of Optional Resources in the course.", "Describe the current socio-ecological crisis and summarize key trends.", "Identify the basic goals, principles, and multi-scalar practices of sustainability.", "Classify socio-ecological problems and solutions according to the United Nations\u2019 seventeen Sustainable Development Goals (SDGs), and understand some of the interconnections between these goals.", "Define and detect four of the key values that underlie sustainability: the \u201cgood life\u201d; democracy; social justice; and efficiency.", "Situate one\u2019s own well-being in relationship to multi-scalar socio-ecological processes (e.g., the well-being or suffering of other human beings in other places in the world, past, present and future).", "Critically examine an organization and activity on campus, in your workplace or in your community in relation to the SDGs, approaches to sustainability and values underlying sustainability.", "Choose one of the following topics:", "Exam Period", "Do not email the instructor until you have read and completed the following.", "Please be sure to read the rubric before starting your assignment.", "Be sure to includes all of the following information:", "your name and student number;", "**Please note that your mark can be raised, lowered, or remain the same through a re-grade**", "*", "*", "* Please submit your paper for consideration by email to the instructor no later than one week following your receipt of the decision by the TA.", "Include a formal business letter that includes the following information:", "your name and student number;", "Intellectual property includes items such as:", "Note: Cutting and pasting even a partial sentence without proper quotations and referencing IS considered plagiarism.", "Instructors maintain agency over considerations granted for missed course components.", "For illness/medically-related absences other than Covid-19, please have a medical provider complete the Verification of Illness (VIF) form and submit it to https://absence.uwaterloo.ca.", "You are limited to one of these per term, and can only use it during the formal lecture period.", "Note that you cannot use this absence for consideration in FLD, LAB, or STU components of your course.", "Mental Health: The University of Waterloo, the Faculty of Environment and our Departments/Schools consider students' well-being to be extremely important."]}, {"course_id": 4, "course_code": "GEOG 207", "course_name": "GEOG207 - Climate Change Fundamentals (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Climate Change Fundamentals Winter 2025", "Climate change is one of the most profound environmental and social issues affecting communities, nations and individuals.", "Climate change is a pervasive and challenging phenomenon that can be viewed through a multitude of lenses.", "A scientific lens, for instance, reveals altered ecosystems and climatic tipping points while the lens of ethics raises the question of the right to develop and influence the well-being of others while doing so.", "By carefully laying the scientific foundations, we will explore creative, positive, nuanced visions of the future that are rooted in scientific understanding of earth systems but also capture (or at least begins a conversation about) core human values, such as equity, compassion, innovation, and connection.", "Demonstrate understanding of key elements of the climate system, and how these elements are being altered by the human emission of greenhouse gases.", "Carefully consider the impacts of climate change on both human and natural systems.", "Articulate the difference between climate change adaptation and mitigation, and understand a portfolio of actions that communities can take to respond to climate change.", "Understand the key issues at play in international climate change negotiations, as well as recent Canadian policy proposals.", "Investigate futures that are fundamentally sustainable, low-carbon, and resilient to climate change impacts.", "Week 2: Introduction to the climate system, discussion activity, quiz", "You can access a free trial of your eTextbook from the Course Information module in LEARN.", "Understanding Climate Change - Digital Version", "Instructors maintain agency over considerations granted for missed course components.", "For illness/medically-related absences other than Covid-19, please have a medical provider complete the Verification of Illness (VIF) form and submit it to https://absence.uwaterloo.ca.", "You are limited to one of these per term, and can only use it during the formal lecture period.", "Note that you cannot use this absence for consideration in FLD, LAB, or STU components of your course.", "Mental Health: The University of Waterloo, the Faculty of Environment and our Departments/Schools consider students' well-being to be extremely important."]}, {"course_id": 5, "course_code": "GEOG 306", "course_name": "GEOG306 - Human Dimensions of Natural Hazards (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Human Dimensions of Natural Hazards - GEOG 306 Winter 2025", "08:30AM - 09:50AM B1 271", "E. Mohammadi", "E-mail:            elham.mohammadi@uwaterloo.ca", "The physical nature of a wide range of geophysical and biophysical hazards will be explored, paying particular attention to the ways in which hazards become dangerous to humans, and the pathways by which humans can either increase or decrease their vulnerability in the face of natural hazards.", "Natural hazards and associated disasters are, in part, a product of inappropriate human modifications or management of the natural landscape.", "Throughout the course, case studies and examples drawn from countries and regions around the world will be used to clarify conceptual and methodological issues.", "Appreciate the physical processes associated with various natural hazards, with a focus on geophysical, meteorological, and hydrological hazards.", "Appreciate the key components of preparing for disasters.", "Apply knowledge to compare hazards theory with real-world case studies.", "Theme 1: Introduction", "Introduction to Course, Natural Hazards, and Disasters", "Defining and Measuring Disasters", "Theme 3: Prevention and Mitigation of Disasters", "Theme 3: Prevention and Mitigation of Disasters", "Theme 3: Prevention and Mitigation of Disasters", "Disasters in the Media and Risk Perception", "Disasters in the Media and Risk Perception Cont'd + Hazard focus: Wildfires", "Key Considerations in BBB", "Livelihoods & Psychological Recovery", "Comparative Analysis of Responses to Specific Disasters 20%", "Please note that these activities are designed to reinforce key concepts and promote collaboration.", "Description: Engage with the concept of vulnerability by crafting a compelling narrative that could be used in a media piece (e.g., news).", "Select and compare two disaster response efforts for similar events across different regions.", "The exam will take the form of multiple choice and short/medium-length written answer questions.", "Short-Term Absence Declarations", "This essentially removes the need for a short-term absence declaration, since a longer, three-day grace period has already been applied.", "Intellectual property includes items such as:", "Anti-racism Statement: The University of Waterloo does not tolerate racism or any other form of discrimination and expects campus community members to contribute to a culture where all members feel safe and valued.", "Instructors maintain agency over considerations granted for missed course components.", "For illness/medically-related absences other than Covid-19, please have a medical provider complete the Verification of Illness (VIF) form and submit it to https://absence.uwaterloo.ca.", "You are limited to one of these per term, and can only use it during the formal lecture period.", "Note that you cannot use this absence for consideration in FLD, LAB, or STU components of your course.", "Mental Health: The University of Waterloo, the Faculty of Environment and our Departments/Schools consider students' well-being to be extremely important."]}, {"course_id": 6, "course_code": "GSJ 205", "course_name": "GSJ205 - Technology, Gender, and Social Justice (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["11:30AM -", "Email: slstettner@uwaterloo.ca", "Do not leave me a phone message; I do not have access to the phone that claims to belong to me!", "I will continue to add materials and speakers to the course syllabus, so please check back regularly for updates.", "\u2022Reflect critically on social location and intersectionality in understanding the ways that technology can both liberate and oppress).", "Sept. 7 - 11 Introduction to course", "Design and Culture 8, no. 2 (2016): 235-252.", "In Proceedings of the 2019 CHI conference on human factors in computing systems, pp.", "\"Gender-inclusive design: Sense of belonging and bias in web interfaces.\"", "In Proceedings of the 2018 CHI Conference on human factors in computing systems, pp.", "Watch: The Algorithms of Oppression (on LEARN)", "Rose, Emma J. \"Design as advocacy: Using a human-centered approach to investigate the needs of vulnerable populations.\"", "\"Datafied body projects in India: Femtech and the rise of reproductive surveillance in the digital era.\"", "Your contributions should be thoughtful and demonstrate that you have done that week\u2019s readings and thought about the course concepts.", "Take-home mid-term test: There is a mid-term take-home test in the course.", "With the video presentation, students must submit a copy of their script that includes proper citations to their peer-reviewed research sources.", "Intellectual property includes items such as:", "Do you want professors and interviewers to call you by a different first name?", "Phone: 519-884-0000 extension 213", "Full details can be found online on the Faculty of Arts website", "Cross-listed courses"]}, {"course_id": 8, "course_code": "MSE 442", "course_name": "MSE442 - Impact of Information Systems on Organizations and Society (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Notice of Recording", "Impact of Information Systems on Organizations and Society Winter 2025", "MSE 442", "This course is designed to familiarize the student with issues related to the impact of computer-based technologies on individual jobs, organizations, and broader societal level.", "View requirements for MSE 442", "Identify the role(s) of information technology in society in a number of different fields.", "Identify and explain the advantages and drawbacks of a particular information technology case in society.", "Synthesize \u2018for\u2019 and \u2018against\u2019 cases and highlight the strengths and weaknesses of these beliefs.", "Present well-constructed arguments using sound knowledge and evidence supporting the case.", "Describe the impact of information technology in society with reference to potential future occupations.", "The survey can be accessed with the following link: https://www.surveymonkey.com/r/HMGHBKF", "Each team will create 5 questions for the opposing team and post these by Wednesday at noon of the debate week.", "A maximum of 100 words is allowed for each question.", "A maximum of 200 words is allowed for the response to each question received.", "Do the questions effectively challenge the opposing team?", "Do the answers to the questions received reflect good understanding of the case that the team is presenting?", "Are the arguments presented in the answers well constructed and is the evidence presented relevant and convincing?", "Inclusion of the main issues in the public debate on the topic", "Each review should be a maximum of 1000 words.", "Each review should be a maximum of 1000 words.", "Notice of Recording", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 9, "course_code": "PACS 315", "course_name": "PACS315 - Engineering and Peace (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Engineering and Peace Fall 2024", "07:00PM - 09:50PM CGR 1302", "Office Hours: Online or in-person meetings can be booked via Calendly between 8:30 AM \u2013 4:30 PM on weekdays", "This course is built on the conviction that the kinds of problems engineers seek to address, and the ways they seek to address them, should matter for anyone interested in advancing peace in the world.", "Topics include historical connections between the discipline of engineering and warfare, understanding the engineering method and mindset, and technological frontiers for peacebuilding.", "Augment their approach to analyzing and solving problems with insights from both engineering and peacebuilding theory and practice; and", "Identify opportunities to apply their expertise and passions to make a meaningful social impact", "Why has war been the business of so many engineers?", "Sep. 18", "Sheldon Fernandez", "UWaterloo Turkstra Chair in Urban Engineering", "Critical Media Lab", "Communitech", "Laurel Boytim", "The Ripple Effect Education", "Engineers as social innovators Riley, \u201cWe\u2019ve Been Framed!\u201d", "Global Peace Index 2024 Institute for Economics & Peace.", "Morgan & Claypool Publishers, 2007.", "We\u2019ve Been Framed!", "Also available for free through MIT Press Open Access] No", "Engineers of Jihad: The Curious Connection Between Violent Extremism and Education.", "Engineers of Jihad: The Curious Connection Between Violent Extremism and Education.", "A Perusall-generated score of 2.0 or higher is required to receive credit each week, and the overall grade for this element will be based on the accumulation of these credits (2% per reading assignment up to a maximum of 10 credits).", "Engage with a guest engineer and/or peacebuilder.", "Each class will begin with a conversation with a guest speaker with expertise and life experiences related to the topics covered in this course.", "95% \u2013 Made a contribution that went above and beyond expectations by demonstrating an exceptional level of consideration and care, and/or providing a rare and surprising degree of insight", "Each submission should be a minimum of 250 words.", "Offer a critique of the book, highlighting both strengths and witnesses, as well as offering a recommendation for who would benefit most from reading the book.", "Why did you chose to attend this event?", "Who played a key role in leading the event?", "Please read Grebel's full land acknowledgement for additional context on the college\u2019s connections to the first European settlers on this land.", "On campus supports", "Other on-campus supports", "Off campus supports", "St. Mary's Hospital\u202f- 519-744-3311", "As well as short-term support for family members or friends of sexual assault survivors.", "More information about resources and supports for students can be found online in on the Faculty of Arts Student Support page.", "This course includes the independent development and practice of reflection and writing skills."]}, {"course_id": 10, "course_code": "SOC 232", "course_name": "SOC232 - Technology and Social Change (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Notice of Recording", "SOC 232", "I am an Associate Professor in the Department of Sociology & Legal Studies and at the Stratford School of Interaction Design and Business.", "Apply sociological theories and concepts to understand, examine, and critically evaluate how technology shapes, and is shaped by, social phenomena.", "Identify how digital technologies shape our interpersonal relationships and communities, in both positive and negative ways.", "Assigned readings and playlists may change through the term.", "Sept 12  Introduction to the Course No readings this week", "Sept 19 \u201cDo guns kill people?", "In The Design of Everyday Things: Revised and Expanded Edition, Revised, Expanded ed. edition, 1\u201336.", "Do Artifacts Have Politics?", "Techno-social Designing.", "The Adoption and Diffusion of Technological Innovations", "Tragic Design: The Impact of Bad Product Design and How to Fix It (1st edition).", "Community in the Network Society", "Computer Love: Replicating Social Order Through Early Computer Dating Systems.", "Deviance in the Dark psychology experiment [", "Assigned readings and playlists may change through the term.", "85%+", "Summary of relevant material is minimal in favor of cross-cutting synthesis of ideas.", "Deep and critical engagement with course content.", "Submission shows overall unity but may meander.", "Satisfactory", "Response is a good effort but falls short of a comprehensive answer.", "Problems in logic and content are identifiable, and writing is weak or tend towards summary rather than critical analysis.", "Please use APA formatting and citation style.", "Late Policies and Extension Requests", "Self-declarations cannot be \u201cstacked\u201d to extend beyond these 5 days.", "Notice of Recording", "However, if Health & Safety protocols demand a shift away from in-person teaching and towards online teaching, some activities for this course may involve recording, in partial fulfillment of the course learning outcomes.", "Phone: 519-884-0000 extension 213", "Full details can be found online on the Faculty of Arts website", "Do you want professors and interviewers to call you by a different first name?"]}, {"course_id": 11, "course_code": "SOC 324", "course_name": "SOC324 - Digital Cultures (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Notice of Recording", "Digital Cultures: Technology & Society Fall 2022", "I am an Associate Professor in the Department of Sociology & Legal Studies and at the Stratford School of Interaction Design and Business.", "Questions of a personal nature", "This course examines how digital play represents and structures social interaction and how games develop social norms, influence social consensus, and respond to deviance.", "Apply sociological theories and concepts to understand, examine, and critically evaluate how technology shapes, and is shaped by, social phenomena.", "Identify some of the complex ethical choices and moral codes embedded in digital tools, such as game consoles and smart phones.", "Identify how digital technologies shape our interpersonal relationships and communities, in both positive and negative ways.", "Identify and develop personal research interests relating to digital culture and technology.", "Synthesize complex written arguments, summarize core ideas effectively, and pull out key concepts.", "Develop creative ways to communicate and teach core concepts to others.", "Introduction to the Course No assigned readings.", "The Technological Society", "Theories to make sense of our digital lives.", "In The Design of Everyday Things: Revised and Expanded Edition, Revised, Expanded ed. edition, 1\u201336.", "Techno-social Designing.", "Tragic Design: The Impact of Bad Product Design and How to Fix It (1st edition).", "-oreilly- com.proxy.lib.uwaterloo.ca/library /view/tragic-design /9781491923603/ch05.html", "Addressing Human Bias in Technology Design", "Confronting the Absence of Women in Technology Innovation.", "Community in the Network Society", "Computer Love: Replicating Social Order Through Early Computer Dating Systems.", "Ethical Dimensions of Technology", "TBD", "Assigned readings and playlists may change through the term.", "Summative Activites take a similar structure to your Module Reflections.", "In a few short classes, we can\u2019t cover everything.", "Your precis should directly provide the following:", "Make an argument for why your is topic sociologically relevant, and should it be covered in a third-year sociology course.", "Be creative!", "Schedule permitting, all projects will be shared and presented in class in celebratory teaching/viewing sessions", "Late Policies and Extension Requests", "Extensions longer than 1 week require:", "Notice of Recording", "However, if Health & Safety protocols demand a shift away from in-person teaching and towards online teaching, some activities for this course may involve recording, in partial fulfillment of the course learning outcomes.", "Phone: 519-884-0000 extension 213", "Full details can be found online on the Faculty of Arts website", "Do you want professors and interviewers to call you by a different first name?", "Intellectual property includes items such as:"]}, {"course_id": 12, "course_code": "STV 202", "course_name": "STV202 - Design and Society (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Design and Society Winter 2025", "Email: cshelley@uwaterloo.ca", "Email: js2kim@uwaterloo.ca", "View requirements for STV 202", "Topics include the nature of design, the social and cultural implications of design, the roles of designers in relation to the social contract, and design assessment in light of social values such as risk, fairness, progress, and sustainability.", "The course material provides a mixture of theoretical concepts and practical cases of their application.", "Describe concepts and perspectives relating to social and ethical aspects of good design.", "Analyze and evaluate designs in light of those concepts and perspectives.", "Compare concepts and perspectives and consider overlaps and differences among them.", "Reflect on the significance of social and ethical issues in their understanding of good design.", "The numbers in parentheses next to learning outcomes above refer to applicable Canadian Engineering Accreditation Board Engineering Graduate Attributes defined here: https://uwaterloo.ca/engineering/graduate-attributes", "Rational design & Social psychology.", "Social contracts & Agendas.", "Design and society: Social issues in technological design, Berlin: Springer.", "A 10-question, multiple-choice quiz is to be completed by each student on the course Learn site for each non-midterm module starting at the outset of week 2.", "Quiz questions each week relate to the textbook chapter(s) assigned for that week.", "Design discussions", "Discussions will take place each non-workshop week after week 1.", "Design presentations", "5 minutes) and may be chosen for viewing in subsequent classes.", "Midterms", "Midterm 1 covers chapters Good design through Culture, Midterm 2 covers chapters Social contract through Activism, and Midterm 3 covers chapters Risk through Sustainability.", "Grade exemptions", "To allow for situations not covered under the Late submissions policy (see below), each student\u2019s lowest quiz, discussion,  presentation, and workshop grade will be dropped from the calculation of their overall grade in each of those categories.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 13, "course_code": "STV 205", "course_name": "STV205 - Cybernetics and Society (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Cybernetics and Society Spring 2024", "This course will present an overview of cybernetics from automation and robotics to prosthetics and wearable computing.", "The roles of men and women in a post-human era will be discussed along with related themes dealing with gender, cyberspace, politics, and popular culture.", "Apply analogical thinking to examine technologies from a functional as well as a social and cultural perspective.", "Assess the kinds of problems addressed by different kinds of technologies and reflect upon your own problem-solving experiences.", "Understand the basic concepts of cybernetics from a historical perspective and discuss issues concerning the development of technologies with someone from an academic discipline different from your own.", "On Thursday at 9:00pm ET, a multiple-choice quiz will be published that you must complete by Friday at 11:59pm ET.", "The study materials are a mix of book chapters and articles as well as video and audio clips.", "Each week, except the first week, in STV 205 will follow this pattern:", "Module 1.1 First-Order Cybernetics: Norbert Wiener, Margaret Mead, Feedback, Information and Analogy - May 9", "Module 2.1 Second-Order Cybernetics: Heinz von Foerster, the Observer and the Observed, Determinism versus Constructivism, and the Attention Economy - June 6", "Module 2.3: Big Data Algorithms, Surveillance Capitalism, and the Smart City - June 20", "Module 3.2: Utopia, Dystopia and Anti-Utopia? - July 11", "Systems Thinkers by Magnus Ramage/Karen Shipp Yes", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 15, "course_code": "CS 343", "course_name": "CS343 - Concurrent and Parallel Programming (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["04:00PM - 05:20PM", "Email: pabuhr@uwaterloo.ca", "Email: pabuhr@uwaterloo.ca", "Email: dbwolff@uwaterloo.ca", "Email: e45lee@uwaterloo.ca", "Email: tbarnes@uwaterloo.ca", "A passing mark in the test portion of the final grade must be achieved to pass the course:", "else", "Inclusiveness", "In particular:", "Please inform us of these at the start of the course.", "Intellectual property includes items such as:", "Continuity Plan", "As part of the University\u2019s Continuity of Education Plan, every course should be designed with a plan that considers alternate arrangements for cancellations of classes and/or exams.", "In the case of minor disruptions (e.g. one lecture), the lecture content will be re-organized to fit the remaining time."]}, {"course_id": 16, "course_code": "CS 346", "course_name": "CS346 - Application Development (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Application Development Winter 2025", "10:30AM - 12:20PM EXP 1689", "Introduction to full-stack application design and development.", "Students will work in project teams to design and build complete, working applications and services using standard tools.", "Standard development tools and approaches will be used to ensure code quality and performance at every step of the development cycle.", "Work effectively as a member of a software development team.", "Design and develop different styles of application software in Kotlin, using the appropriate architectural and design patterns.", "Design services that can provide remote capabilities to your application", "Apply debugging and profiling techniques to address design and performance issues.", "Produce unit and integration tests as part of the development process.", "This computer should be capable of running our development toolchain.", "Team assessment Rating from team members", "Design proposal Detailed design document.", "Design Proposal", "This needs to include UML diagrams of your high-level architecture, and other diagrams as indicated.", "Product Releases", "There are multiple development iterations, where you will plan and implement features.", "You will get marks for delivering a product release, including supporting documents and a product installer.", "Team Formation", "Students are responsible for matching up and forming teams.", "Self-Declaration", "In either case, you should contact the instructor via email.", "Inclusiveness", "In particular:", "Please inform us of these at the start of the course.", "Ethical Behaviour", "This expectation extends to working together in project teams.", "Plagiarism and Third-Party Code", "The team is also allowed to use third-party source code or libraries for their project under these specific conditions:", "Code copied in this way must be acknowledged with a comment embedded directly in your source code in the appropriate section.", "Reuse of Materials", "You are not allowed to use such systems when writing quizzes, or for generating any part of your written submission (e.g., design document, user instructions, final report).", "You are allowed to use these tools to generate a limited amount of code towards your project, if you adhere to the policies described above under plagiarism.", "Content generated by these systems must be treated as a source and cited properly, just like any other third-party source, and you are limited in how much generated code can be used.", "Improper use of these tools will be subject to Policy 71 and an investigation into academic misconduct.", "Note that if you use these types of systems to generate code, you are responsible for the consequences.", "These models can (and often do) generate incorrect and illogical code.", "Intellectual property includes items such as:", "Continuity Plan", "As part of the University\u2019s Continuity of Education Plan, every course should be designed with a plan that considers alternate arrangements for cancellations of classes and/or exams.", "Cancellation of multiple classes may result in a reduction in the number of sprints and associated deliverables to fit the remaining time."]}, {"course_id": 17, "course_code": "CS 348", "course_name": "CS348 - Introduction to Database Management (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Introduction to Database Management Winter 2025", "S. Salihoglu", "S. Salihoglu", "This course is an introduction to database management systems (DBMSs), which are the core software systems that applications use to store, manage, query, and manipulate very large-scale data efficiently.", "Fundamentals of data management: the relational data model and its query languages; integrity constraints; indexes and views to make DBMSs efficient for an application workload; and transactions to ensure safe and concurrent access and manipulation of data, focusing on fundamental topics such as serializability and ACID guarantees of a DBMS.", "Database design methodology, which shows how to design \"good\" databases instead of \"bad\" ones and how this can be made formal using the theory of normalization.", "These principles and tools will be very important when you build your own data-intensive applications in your careers.", "In contrast, topics under (3) are from the perspective of system engineers that actually implement the DBMS, and aims to engage students interested in the low-level implementations of the core data structures, algorithms, and protocols DBMSs use to support higher-level applications.", "Data Model: Relational Model", "High Level Query Language: Relational Algebra & SQL, Datalog", "E/R Models", "Normal Forms", "Embedded vs Dynamic SQL", "Frameworks", "Physical Record Design", "Query Planning and Optimization", "Indexes", "RDF Systems", "Database System Concepts (DSC) (Seventh Edition) Abraham Silberschatz, Henry F. Forth and S.Sudarshan, McGraw Hill.", "Project-based: A1(10%)+A2(10%)+A3(10%)+Project(30%)+Midterm(15%)+Final(25%)"]}, {"course_id": 18, "course_code": "CS 349", "course_name": "CS349 - User Interfaces (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["04:00PM - 05:20PM", "Please contact her in regards to any accommodations, including those for illness and short-term absences.", "Bella Chen", "Zitao Wang", "Beginning in the second week, we hold regular weekday office hours in-person and online within the CS 349 team (via Microsoft Teams).", "An introduction to contemporary user interface implementation concepts, including event abstraction, graphical components, layout, feedback, testing, accessibility, and architectures to develop user interfaces.", "Explain architectural and algorithmic details underlying current user interfaces and user interface toolkits.", "Implement user interfaces in a browser using Typescript: (1) using the HTML Canvas; (2) using HTML elements and DOM manipulation, and (3) using a modern UI web development framework", "5 Feb 3 - Feb 7 Dispatch, Layout A1", "11 Mar 24 - Mar 29 Direct Manipulation, Accessibility", "Exams", "Final, in-person tbd tbd", "It has code relating to lectures and a git submodule with the SimpleKit UI toolkit.", "See the README for details for cloning and keeping everything up to date.", "A1-A4 4 x 13% = 52%", "You should conform to the tools and versions specified in the assignment description.", "Out-of-scope Language Features", "Please review policies for Academic Integrity, Using Code from Other Sources, and Using Advanced AI Systems under Course Policies.", "You may use code examples provided in-class (i.e., in the CS349 public repo).", "You may directly use or include portions of these in-class samples in your assignments.", "You may discuss how you accomplished something in general terms with other students, but you may not directly share code.", "Self-Declared Short-term Absence", "There are no extensions beyond the maximum 48-hour late period after the original deadline.", "You can use any code from this term's offering of CS 349 without documenting it as a source.", "This includes starter code for assignments, code shown in lectures, and code from the course code repo.", "Using Advanced AI Systems", "Use of advanced AI systems to generate code (ie.", "Intellectual property includes items such as:", "All source code written by the instructor and provided in lecture, as starter code for an assignment, or in a sample code repository.", "Inclusiveness", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 19, "course_code": "CS 442", "course_name": "CS442 - Principles of Programming Languages (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["08:30AM - 09:50AM MC 2035", "An exposure to important concepts and issues in contemporary programming languages.", "Reduction strategies (eager vs. lazy evaluation)", "Confluence and normalization", "Formal semantics", "Category theory and programming languages as calculi", "Post system/Post rules", "Small-step and big-step semantics", "Operational and denotational semantics", "Typed lambda calculus and statically-typed languages", "Typing rules and type-checking algorithms", "Progress and preservation theorems", "Type inference algorithms", "Programming paradigms and exemplar languages", "Logic languages and Prolog", "Imperative langauges and Pascal", "Concurrent languages and Erlang", "Systems languages and C/CompCert", "Implementation techniques for different paradigms", "Write efficient, readable programs from scratch in several new programming languages", "Define and implement (via interpreters written in these new programming languages) operational semantics for extensions of the lambda calculus distilling features from said languages", "Define typing rules for these extensions compatible with the type systems provided by said languages and implement type checking and type inference algorithms based on these rules", "State and prove relevant theorems (e.g., progress, preservation) about type systems", "Late or missing assignments will be handled on a case-by-case basis, with the general rule being that they are worth 0%."]}, {"course_id": 20, "course_code": "CS 444", "course_name": "CS444 - Compiler Construction (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["yizhou.zhang@uwaterloo.ca", "Compiler-compilers and translator writing systems.", "Stack storage organization and templates.", "Intermediate code."]}, {"course_id": 21, "course_code": "CS 448", "course_name": "CS448 - Database Systems Implementation (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Database Systems Implementation Winter 2023", "11:30AM -", "11:30AM -", "Yang, Jheng-Hong j587yang", "The course focuses on the database engine core technology by studying topics such as storage management (data layout, disk-based data structures), indexing, query processing algorithms, query optimization, transactional concurrency control, logging and recovery.", "The course focuses on the database engine core technology by studying topics such as storage management (data layout, disk-based data structures), indexing, query processing algorithms, query optimization, transactional concurrency control, logging and recovery.", "Review of relational database systems (3 hours)", "Fundamentals of Database Systems, 7/E BY Ramez Elmasri and Shamkant B. Navathe No"]}, {"course_id": 22, "course_code": "CS 449", "course_name": "CS449 - Human-Computer Interaction (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Human-Computer Interaction Fall 2024", "11:30AM -", "10:00AM - 11:20AM B2 350", "11:30AM -", "10:00AM - 11:20AM B2 350", "10:00AM - 11:20AM DC 1350", "LEC - Monday 10-11:30am DC 1350", "An introduction to the fundamental theories, methods, and research in the design and evaluation of novel computational artifacts designed to meet real-world human needs.", "Through lectures and design activities, students work in teams of 5 to design a solution for a real-world problem.", "The end result of the team project is a high-fidelity interactive prototype of a mobile application, targeted at solving a particular real-world problem.", "Identify the primary luminaries in Interactive Design and HCI", "Identify your target users", "Design studies to understand your users and their needs within a sociocultural context", "Create user data-driven designs and prototypes of different levels of fidelity", "Design studies to evaluate designs during different stages of the project", "Properly gather and analyze qualitative and quantitative data from semi-structured interviews, paper prototype evaluation, heuristic evaluations and cognitive walkthrough", "Discover a variety of HCI research methodologies", "Add a high-quality design of an interesting product to your design portfolio", "The success of a team project depends critically on each student being a responsible member of the team, i.e., showing up and participating.", "Special consideration can be made for a few exceptions (e.g., academic travel, illnesses and family emergencies).", "Deliverables and Late Penalties", "Intellectual property includes items such as:"]}, {"course_id": 23, "course_code": "CS 450", "course_name": "CS450 - Computer Architecture (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["10:00AM - 11:20AM MC 4021", "The course is intended to provide the student with an appreciation of modern computer design and its relation to system architecture, compiler technology, and operating system functionality.", "Understand the fundamental principles of computer architecture systems.", "Come up with novel designs that meet application demands, and evaluate the tradeoffs of different design choices based on the knowledge learned in this course.", "January 7, 2025 Introduction", "January 9, 2025 Fundamental Concepts", "January 14, 2025 ISA I", "January 21, 2025 Intro to Microarchitecture & Single Cycle", "January 23, 2025 Single-Cycle & Pipelining", "January 28, 2025 Control & Data Dependency", "January 30, 2025 Control Dependency & SIMD", "February 6, 2025 Branch Prediction I", "February 13, 2025 Introduction to microarchitecture simulation", "March 13, 2025 Memory Systems I", "March 18, 2025 Memory Systems II"]}, {"course_id": 24, "course_code": "CS 451", "course_name": "CS451 - Data-Intensive Distributed Computing (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Data-Intensive Distributed Computing Winter 2025", "10:00AM - 11:20AM MC 2017", "RCH 307", "10:00AM - 11:20AM MC 2017", "RCH 307", "Introduces students to infrastructure for data-intensive computing, with a focus on abstractions, frameworks, and algorithms that allow developers to distribute computations across many machines.", "Topics include core concepts (partitioning, replication, locality, consistency), computational models (MapReduce, dataflows, stream processing, bulk-synchronous parallel), and applications.", "Explain the key concepts in distributed big data projects", "Write clean and efficient Hadoop MapReduce and Spark code", "Understand and design distributed algorithms for the analysis of textual, graph, and relational data", "Explain the design issues involved with distributed relational and non-relational database systems such as Apache HBase / Google BigTable", "Introduction to Distributed Text Processing 1", "Introduction to Hadoop MapReduce 3", "Introduction to Apache Spark 3", "Distributed Database Systems 3", "This course includes the independent development and practice of specific skills, such as designing MapReduce and Spark code.", "Library for research-based assignments"]}, {"course_id": 25, "course_code": "CS 452", "course_name": "CS452 - Real-Time Programming (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["10:00AM - 11:20AM MC 4058", "Intended to give students experience with tools and techniques of real-time programming, this course includes not only issues of microcomputer architecture and a real-time programming language and operating system, but also hands-on experience programming a microcomputer for applications such as process control, data acquisition and communication.", "One part of the course is writing a small, real-time-capable operating system that runs on stand-alone computers and provides a low-level interface to control electric trains.", "program low level system services in assembly language,", "program hardware interfaces in C/C++,", "develop a multi-tasking runtime kernel providing message passing,", "develop a multi-task application based on message passing, and", "develop a calibrated control application for external hardware.", "Kernel 30", "Also, a TA and/or instructor might contact you to set up a meeting for a code review."]}, {"course_id": 26, "course_code": "CS 453", "course_name": "CS453 - Software and Systems Security (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Software and Systems Security Winter 2025", "04:00PM - 05:20PM", "04:00PM - 05:20PM", "Meng Xu", "Introduction to security issues in modern software, operating systems, and other computing platforms (e.g., mobile and cloud environments).", "Specific topics include comparing security and privacy, program security, operating system security, mobile security, hardware security, administrating security, and legal and ethical issues.", "Students completing this course should be able to identify common attack vectors against modern computing environments and deploy state-of-the-practice detection and defense practices.", "Module - Introduction to Software and System Security", "Jan 07: Lecture: Course logistics + Basis concepts in security", "Module - A Recap of Background Information", "Module - An In-depth Study of Memory Errors", "Jan 21: Lecture: Detecting memory errors dynamically", "Jan 23: Lecture: Detecting memory errors statically", "Module - Operating System Security", "Mar 06 Lecture: Access control and capabilities", "Module - Mobile Security", "Module - Hardware Security", "Module - Non-technical Aspects in Security", "Module - Hot Topics in Software and Systems Security", "Apr 03: Lecture: Software supply-chain security", "Computer Security and the Internet: Tools and Jewels from Malware to Bitcoin (2nd Edition) Textbook No 0", "Security in Computing (5th Edition) Textbook No 0"]}, {"course_id": 27, "course_code": "CS 454", "course_name": "CS454 - Distributed Systems (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Distributed Systems Winter 2025", "11:30AM -", "S. Al Kiswany", "PHY 313", "S. Al Kiswany", "08:30AM - 09:50AM MC 2035", "S. Al Kiswany", "11:30AM -", "S. Al Kiswany", "PHY 313", "S. Al Kiswany", "08:30AM - 09:50AM MC 2035", "S. Al Kiswany", "An introduction to distributed systems, emphasizing the multiple levels of software in such systems.", "Specific topics include fundamentals of data communications, network architecture and protocols, local-area networks, concurrency control in distributed systems, recovery in distributed systems, and clock synchronization.", "An introduction to distributed systems, emphasizing the multiple levels of software in such systems.", "Specific topics include fundamentals of data communications, network architecture and protocols, local-area networks, concurrency control in distributed systems, recovery in distributed systems, and clock synchronization.", "Introductory Concepts", "Introduction/Overview of networking concepts relevant for distributed systems", "5. Distributed File Systems (2)", "Architecture", "Semantics", "Service software design", "Name Spaces", "Name Resolution", "Physical and Logical Clock Synchronization", "Mutual Exclusion", "Election", "Consistency Models", "Data Analytics", "Online shopping", "Distributed Systems, 4th Edition, Maarten van Steen and Andrew Tanenbaum Available for free Yes 0", "Distributed Systems, 4th Edition, Maarten van Steen and Andrew Tanenbaum", "For assignments, do not use any public or web-based source code repository hosting service other than https://git.uwaterloo.ca.", "You may discuss general concepts and problems with classmates, tutors, TAs, and instructors.", "Copyright and Intellectual Property", "Intellectual property includes items such as:", "Math Faculty code-sharing policy: https://uwaterloo.ca/math/code-sharing-policy"]}, {"course_id": 28, "course_code": "CS 456", "course_name": "CS456 - Computer Networks (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["10:00AM - 11:20AM MC 2038", "10:00AM - 11:20AM MC 2038", "Email: noura.limam@uwaterloo.ca", "Recall, explain, and compare transmission media and access control schemes.", "Recall, summarize, and exemplify connection management and reliable message transmission.", "Recall, explain, and compare high-level communication services and distribution services.", "Application layer protocols", "A Top-Down Approach, Jim Kurose & Keith Ross, Addison-Wesley, 8th Edition the 7th edition will do Yes Starting at CAD 57.99"]}, {"course_id": 30, "course_code": "CS 459", "course_name": "CS459 - Privacy, Cryptography, Network and Data Security (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Privacy, Cryptography, Network and Data Security Winter 2025", "04:00PM - 05:20PM", "Office hours are assignment-dependent and their time/location will be disclosed during the introduction of each assignment.", "Introduction to privacy and security using cryptography and related techniques in networks, distributed systems, and data science.", "For at-rest protection, specific topics include the basics of cryptography and relevant ethics/policy concepts.", "Evaluate the use of cryptography to protect data assets in storage, transit, and use", "Analyze security and privacy threats to data assets, including the privacy level of various data release mechanisms, privacy-utility trade-offs, and statistical inference attacks to infer sensitive information", "Evaluate the use of network security hardware and software to protect data assets in transit and use.", "Introduction", "Lecture 1 - Logistics and Introduction to the course (Jan. 6th)", "Data Protected in Transit", "Assignments can be submitted multiple times, and the last one will be used for marking.", "Include a clear justification for your claims.", "Your paper should be a summary of past and current work on your topic, as well as an overview of known open problems and potential future directions in the area.", "Your proposal and paper paper should be formatted in the two-column ACM proceedings format, using one of the ACM SIG Proceedings Templates.", "The ACM templates include headings for \u201cCategories and Subject Descriptors\u201d, \u201cGeneral Terms\u201d, and \u201cKeywords\u201d, which you do not need to use.", "Otherwise, in general, create a public one so that your peers can benefit too.", "Email:", "We understand that these circumstances can be troubling, and you may need to speak with someone for emotional support."]}, {"course_id": 31, "course_code": "CS 480", "course_name": "CS480 - Introduction to Machine Learning (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Introduction to Machine Learning Winter 2025", "10:00AM - 11:20AM DWE 1501", "Introduction to modelling and algorithmic techniques for machines to learn concepts from data.", "Optimization-based learning: loss minimization. regularization.", "This is especially useful in complex tasks such as natural language processing, information retrieval, data mining, computer vision and robotics where it is not practical for a programmer to enumerate all possible situations in order to specify suitable instructions for all situations.", "The course will introduce the basics of machine learning and data analysis, and demonstrate how machine learning techniques have impacted life and society.", "The course starts with some classical tasks and algorithms in machine learning, then transitions to modern advances and successful applications in real life, and finally ends with discussions on the societal impact that machine learning has generated.", "A significant part of the course will be devoted to raising students' awareness on such ethical issues, including how to make machine learning algorithms fair and unbiased, how to protect individual privacy without compromising learning, how machine learning algorithms might be attacked, how to measure and improve the security of machine learning algorithms, and how to make machine learning algorithms explainable and interpretable.", "Recognize and formalize a task as a machine learning problem", "Identify suitable algorithms to tackle different machine learning problems", "Understand and implement a plethora of foundational machine learning algorithms", "Apply machine learning algorithms to real datasets", "Become aware of potential ethical and safety issues of machine learning on society", "Introduction (first lecture: Jan 7, 2025)", "Linear Regression", "Reproducing Kernels", "Multi-layer Perceptron", "Deep Neural Networks", "Attention", "Decision Trees", "Flow Models", "Variational Autoencoders", "Diffusion Models"]}, {"course_id": 32, "course_code": "CS 484", "course_name": "CS484 - Computational Vision (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Computational Vision Winter 2025", "10:00AM - 11:20AM MC 2034", "Introduction to image and vision understanding by computer.", "Camera-system geometry, image formation and lighting, and image acquisition.", "Processing of stereo images, and motion in image sequences.", "Applications of computer-vision systems.", "General Description", "Computer Vision encompasses a variety of innovative methods and algorithms leveraged in applications such as facial recognition, image searching, augmented reality, medical image analysis, automated mapping of environments, and digital effects in movies and photography.", "This course provides an introduction to the computational and mathematical foundations of computer vision and covers many of its standard applications.", "In case some points in the slides are skipped in class (e.g. review of basic background in linear algebra, or if time runs out), the students could be referred to the posted video lectures.", "The videos explain all the slides, including optional reviews of basic linear algebra, multi-variate calculus, and some (clearly marked) optional material in computer vision.", "iClicker we will use iClicker for occasional in-class polling.", "Mathematical skills: AMATH 242/CS 371 or CS 370 or Linear Algebra 2 (MATH 235/245)", "Comments on Linear Algebra", "Understanding computer vision methods requires certain level of confidence with linear algebra, which is actively used throughout the course.", "CS484 only briefly reviews some critical linear algebraic tools as they become needed, but there is absolutely no time to teach linear algebra on the same level (covering proofs and many basic examples) as it is done in the appropriate math courses.", "Based on observations from the previous years, students who took only one term of introductory linear algebra and do not remember much of it must be ready to commit (possibly substantial) extra time.", "At the same time, computer vision offers highly motivating and intuitive context for learning linear algebra.", "If you plan to take other courses on Data Analysis, AI, or Machine Learning, you will also appretiate stronger linear algebra skills.", "While CS484 covers only the absolutely necessary background in linear algebra, as well as multivariate calculus, some useful external links can be found in \"Math Resources\".", "This course introduces many standard computer vision problems and computational approaches for solving them.", "The context of image analysis also provides an intuitive and stimulating visual environment for developing and understanding numerical algorithms.", "Slides", "In case of substantial changes, the updated slides will be reposted online.", "The posted videos explain all the slides in details, including review of basic background in linear algebra and multi-variate calculus.", "You will be referred to specific relevant sections of these books in class.", "Computer Vision: Algorithms and Applications, 2010.", "Python's linear algebra library \"numpy\" will be widely used in all assignments.", "More details and code samples are posted here.", "This happens naturally as the first half of the course spends more time reviewing background from linear algebra, multi-variate calculus, and statistics.", "Assignments will require submission of code and a report.", "Typical image analysis algorithms produde output (geometric structures, segments, labelings) that can be visualized.", "The drop box remains open for late submissions for a few days past the due date/time of each assignment - TAs record each late day.", "Scholastic offences are taken seriously and students are directed to read the appropriate university policy.", "Assignment 4: low-level segmentation"]}, {"course_id": 33, "course_code": "CS 486", "course_name": "CS486 - Introduction to Artificial Intelligence (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Introduction to Artificial Intelligence Winter 2025", "08:30AM - 09:50AM MC 2038", "08:30AM - 09:50AM MC 2038", "Varun Dhanraj: vdhanraj@uwaterloo.ca", "Methods of general problem solving.", "Multi-agent systems.", "Methods of general problem solving.", "Introduction to mathematical logic Mechanical theorem proving.", "Available free for downlooad online at artint.info Yes"]}, {"course_id": 34, "course_code": "CS 488", "course_name": "CS488 - Introduction to Computer Graphics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Introduction to Computer Graphics Winter 2025", "04:00PM - 05:20PM", "04:00PM - 05:20PM", "Software and hardware for interactive computer graphics.", "Software and hardware for interactive computer graphics.", "The password will be released during the first week of classes.", "Software and hardware for interactive computer graphics.", "Implementation of 3-D transformations, clipping and projection routines.", "Course delivery will consist mostly of traditional lectures with occasional use of slides and technical demonstrations.", "Continuity Plans", "In case of a cancellation of in-person classes, the instructor will release in the course Lessons website required reading materials equivalent to the contents covered in each lecture.", "These materials can be regarded as illustrated transcripts of the traditional lectures.", "In case of a cancellation of in-person meetings, the course staff\u2019s office hours will be held online, with instructions fort these virtual office hours (VOH) to be provided via Learn.", "The graphics lab will be closed during periods in which in-person lectures need to be cancelled.", "Assignment deadlines will not be postponed so that students can troubleshoot the VM.", "write interactive 3D computer graphics programs;", "understand how linear and perspective transformations are used in modeling and rendering in 3D computer graphics;", "write a simple ray tracer.", "Mathematical Underpinnings", "Transformations", "Hidden Surfaces and Shading", "Realistic Rendering", "Animation", "Students must average at least a 50% in both the programming and examination components of the course to pass.", "Bonus marks obtained in one component are not carried over to the other component.", "The instructor reserves the right, where appropriate, to adjust raw marks downward in the case of cheating and upward in other situations.", "A1 to A4 have the same weight.", "In case of any issue related to their submission procedures, the student must contact the TAs before the day scheduled for the activity (assignment or project) using the appropriate means indicated below.", "Intellectual property includes items such as:", "phone: 1-866-925-5454;", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 35, "course_code": "CS 445", "course_name": "CS445 - Software Requirements Specification and Analysis (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Software Requirements Specification and Analysis Winter 2025", "10:00AM - 11:20AM MC 2035", "Email:x784chen@uwaterloo.ca", "Email: ar2elsha@uwaterloo.ca", "Email: d3pang@uwaterloo.ca", "Models, notations, and processes for software requirements identification, representation, analysis, and validation.", "ECE 451: View requirements for ECE 451", "The week of", "Deliverables", "1 Introduction", "3 RE Reference Model", "Jan 13 4 Domain Model 4 Domain Model D0 \u2013 Group members & Project idea", "Jan 27 7 Functional Modelling 8 OCL D1 \u2013 Domain Model & Stakeholders", "Feb 10 10 Quality Requirements 10 Quality Requirements D2 -  Use case Diagram & Description", "Feb 24 11 Requirements Conflict management 12 Prioritizing Requirements D3 \u2013 Functional Model & OCL", "Mar 3 13 Cost Estimation 14 Risk Analysis D4 \u2013 State Diagram", "Mar 17 15 Temporal Logic 16 Validation and Verification D5 \u2013 Cost Estimation & Risk Analysis", "Mar 31 17 Software Project Management 18 Requirement Engineering for AI Systems D6 - Quality Attributes and Temporal Logic", "Ability to separate requirements from specifications from domain assumptions and argue that a specification + domain assumptions satisfy requirements", "Ability to model requirements in a variety of modelling paradigms", "Ability to elicit and document non-functional requirements such that the to-be-developed software can be objectively tested for their satisfaction", "Ability to use tools to manage a Software Development Team.", "Why is requirements analysis complex?", "Functions as a modelling notation.  Pre- and post-conditions.", "Use-case diagrams.", "Functions over a class diagram.", "Modelling dynamic behaviour of a software system.", "UML State Machines.", "Specification patterns.", "7: Model Integration (1 hour)", "The expected contents and organization of a Software Requirements Specification (SRS).", "AI vs non-AI Systems based on what we covered in this course.", "Braek and Haugen, Engineering real-time systems: an object-oriented methodology using SDL, Prentice-Hall, 1993.", "Larman, Applying UML and Patterns, Prentice Hall, 2004.", "Maciaszek, Requirements Analysis and System Design, Addison Wesley, 2001.", "Bray, An Introduction to Requirements Engineering, Addison-Wesley, 2002.", "Nuseibeh and Zave, Software Requirements and Design:", "van Lamsweerde, Requirements Engineering: From System Goals to UML Models to Software Specifications, Wiley, 2009.", "Brooks, The Design of Design, Addison Wesley, 2010.", "Alan Davis, Just Enough Requirements Management: Where Software Development Meets Marketing, Dorset House Publishing, 2005.", "The project can be related to requirements engineering or a more general software engineering topic.", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 36, "course_code": "ECE 451", "course_name": "ECE451 - Software Requirements Specification and Analysis (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Software Requirements Specification and Analysis Winter 2025", "10:00AM - 11:20AM MC 2035", "Email:x784chen@uwaterloo.ca", "Email: ar2elsha@uwaterloo.ca", "Email: d3pang@uwaterloo.ca", "Models, notations, and processes for software requirements identification, representation, analysis, and validation.", "ECE 451: View requirements for ECE 451", "The week of", "Deliverables", "1 Introduction", "3 RE Reference Model", "Jan 13 4 Domain Model 4 Domain Model D0 \u2013 Group members & Project idea", "Jan 27 7 Functional Modelling 8 OCL D1 \u2013 Domain Model & Stakeholders", "Feb 10 10 Quality Requirements 10 Quality Requirements D2 -  Use case Diagram & Description", "Feb 24 11 Requirements Conflict management 12 Prioritizing Requirements D3 \u2013 Functional Model & OCL", "Mar 3 13 Cost Estimation 14 Risk Analysis D4 \u2013 State Diagram", "Mar 17 15 Temporal Logic 16 Validation and Verification D5 \u2013 Cost Estimation & Risk Analysis", "Mar 31 17 Software Project Management 18 Requirement Engineering for AI Systems D6 - Quality Attributes and Temporal Logic", "Ability to separate requirements from specifications from domain assumptions and argue that a specification + domain assumptions satisfy requirements", "Ability to model requirements in a variety of modelling paradigms", "Ability to elicit and document non-functional requirements such that the to-be-developed software can be objectively tested for their satisfaction", "Ability to use tools to manage a Software Development Team.", "Why is requirements analysis complex?", "Functions as a modelling notation.  Pre- and post-conditions.", "Use-case diagrams.", "Functions over a class diagram.", "Modelling dynamic behaviour of a software system.", "UML State Machines.", "Specification patterns.", "7: Model Integration (1 hour)", "The expected contents and organization of a Software Requirements Specification (SRS).", "AI vs non-AI Systems based on what we covered in this course.", "Braek and Haugen, Engineering real-time systems: an object-oriented methodology using SDL, Prentice-Hall, 1993.", "Larman, Applying UML and Patterns, Prentice Hall, 2004.", "Maciaszek, Requirements Analysis and System Design, Addison Wesley, 2001.", "Bray, An Introduction to Requirements Engineering, Addison-Wesley, 2002.", "Nuseibeh and Zave, Software Requirements and Design:", "van Lamsweerde, Requirements Engineering: From System Goals to UML Models to Software Specifications, Wiley, 2009.", "Brooks, The Design of Design, Addison Wesley, 2010.", "Alan Davis, Just Enough Requirements Management: Where Software Development Meets Marketing, Dorset House Publishing, 2005.", "The project can be related to requirements engineering or a more general software engineering topic.", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 37, "course_code": "CS 446", "course_name": "CS446 - Software Design and Architectures (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Software Design and Architectures Winter 2025", "10:00AM - 11:20AM MC 1056", "10:00AM - 11:20AM MC 1056", "10:00AM - 11:20AM MC 1056", "- Saarang Agarwal <saarang.agarwal@>", "- Bihui Jin <bihui.jin@>", "- Daniel Phan <daniel.phan@>", "- Amber Wang <jiale.wang@>", "ECE 452: View requirements for ECE 452", "Differentiate how various architectural styles and design patterns enhance and degrade a system\u2019s functional, non-functional and human value properties;", "Create and implement an architecture and design, refining it into a complete system;", "1 Jan 06 Mon Introduction to Class", "Jan 15 Wed Use Cases, Human Values", "Jan 17 Fri **P0** Team Formation", "Jan 31 Fri **P2** Project Proposal", "Feb 12 Wed **P3** Iteration 1 Demo", "Feb 26 Wed Design Patterns 2 - Structural", "9 Mar 03 Mon Design Patterns 3 - Behavioral", "Mar 05 Wed **P4** Iteration 2 Demo", "10 Mar 10 Mon Design Patterns 4", "Mar 19 Wed **P5** Iteration 3 Demo", "Apr 02 Wed **P6** Final Presentation", "Apr 04 Fri **P7** Final Report", "Jan 17 P0: Team Formation -", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 38, "course_code": "ECE 452", "course_name": "ECE452 - Software Design and Architectures (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Software Design and Architectures Winter 2025", "10:00AM - 11:20AM MC 1056", "10:00AM - 11:20AM MC 1056", "10:00AM - 11:20AM MC 1056", "- Saarang Agarwal <saarang.agarwal@>", "- Bihui Jin <bihui.jin@>", "- Daniel Phan <daniel.phan@>", "- Amber Wang <jiale.wang@>", "ECE 452: View requirements for ECE 452", "Differentiate how various architectural styles and design patterns enhance and degrade a system\u2019s functional, non-functional and human value properties;", "Create and implement an architecture and design, refining it into a complete system;", "1 Jan 06 Mon Introduction to Class", "Jan 15 Wed Use Cases, Human Values", "Jan 17 Fri **P0** Team Formation", "Jan 31 Fri **P2** Project Proposal", "Feb 12 Wed **P3** Iteration 1 Demo", "Feb 26 Wed Design Patterns 2 - Structural", "9 Mar 03 Mon Design Patterns 3 - Behavioral", "Mar 05 Wed **P4** Iteration 2 Demo", "10 Mar 10 Mon Design Patterns 4", "Mar 19 Wed **P5** Iteration 3 Demo", "Apr 02 Wed **P6** Final Presentation", "Apr 04 Fri **P7** Final Report", "Jan 17 P0: Team Formation -", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 39, "course_code": "CS 447", "course_name": "CS447 - Software Testing, Quality Assurance, and Maintenance (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Notice of Recording", "04:00PM - 05:20PM", "Weiyi Shang <wshang@uwaterloo.ca>", "Introduces students to systematic testing of software systems.", "ECE 453: View requirements for ECE 453", "Organized testing can help identify problems in software systems, enabling developers to fix these problems.", "And easier-to-test software is better software.", "\u2022 You will be able to create and evaluate test suites for reasonably-sized software systems.", "\u2022 You will learn how to effectively test during the software engineering process.", "Creating tests", "Test minimization", "Week 12 March 27th Field testing", "Late policy: every person can have a late (max 24 hours) deliverable once", "Notice of Recording"]}, {"course_id": 40, "course_code": "ECE 453", "course_name": "ECE453 - Software Testing, Quality Assurance, and Maintenance (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Notice of Recording", "04:00PM - 05:20PM", "Weiyi Shang <wshang@uwaterloo.ca>", "Introduces students to systematic testing of software systems.", "ECE 453: View requirements for ECE 453", "Organized testing can help identify problems in software systems, enabling developers to fix these problems.", "And easier-to-test software is better software.", "\u2022 You will be able to create and evaluate test suites for reasonably-sized software systems.", "\u2022 You will learn how to effectively test during the software engineering process.", "Creating tests", "Test minimization", "Week 12 March 27th Field testing", "Late policy: every person can have a late (max 24 hours) deliverable once", "Notice of Recording"]}, {"course_id": 0, "course_code": "CS 136L", "course_name": "CS136L - Tools and Techniques for Software Development (0.25)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Tools and Techniques for Software Development Winter 2025", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 3003", "E. Ciklabakkal", "E. Ciklabakkal", "08:30AM - 10:20AM MC 4042", "E. Ciklabakkal", "10:30AM - 12:20PM MC 4042", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 4060", "02:30PM - 04:20PM MC 4060", "E. Ciklabakkal", "10:30AM - 12:20PM MC 3003", "This course introduces students to tools and techniques useful in the software development lifecycle.", "Students learn to navigate and leverage commands and utilities in the Linux Command Line Shell.", "Students gain experience in version control software, writing scripts to automate tasks, and creating effective test cases to identify bugs.", "Students also gain experience in using built-in support for version control, testing, debugging, build automation, etc. in integrated development environments (IDEs).", "Interact with the Linux Operating System using a command line shell and gain familiarity with commands, utilities and tools.", "Create scripts to automate tasks and increase productivity while working on a software project.", "Design test cases and automate the testing process to check a program for functional correctness and incorrect memory usage.", "Use version control systems to share, contribute, manage and track code.", "Separately compile code modules and leverage build automation tools to do so efficiently.", "Module 0: Linux Shell, a first look", "Module 2: Testing and Debugging", "Module 9: Debugging", "Each lab consists of a number of lab problems.", "Each lab problem has two associated values, a lower one called the pass threshold and a higher one called the completion threshold.", "Special note on test cases: if a lab question asks you to submit test cases, you must create these tests yourself.", "Do not directly copy code from GenAI.", "Do not ask GenAI for a step-by-step breakdown of how to solve a lab problem.", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 1, "course_code": "CS 341", "course_name": "CS341 - Algorithms (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Algorithms Winter 2025", "10:00AM - 11:20AM MC 4061", "08:30AM - 09:50AM MC 1056", "The study of efficient algorithms and effective algorithm design techniques.", "Topics include divide and conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph search and backtrack, problems without algorithms, NP-completeness and its implications.", "DPV", "Introduction to Algorithms, by Cormen, Leiserson, Rivest and Stein, MIT Press.", "describe the main idea first,", "Extensions and Other Accommodations on Assignments", "Students can currently self-declare two kinds of absences on Quest: short-term absence and pandemic-related absence.", "Since a short-term absence lasts 2 days, this means the only accommodation we offer for a short-term absence is a 48 hour extension.", "If you request accommodations through AccessAbility Services (AAS) by filling out a Missed Course Component form, the accommodation is determined on a case-by-case basis through consultation with AAS, but will generally be one of the above options unless your situation is unusual.", "If you collaborate with others, you must clearly indicate the collaboration for each problem.", "This is not a software engineering course; we will not test your code against inputs that do not match our specifications.", "Continuity Plan", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 2, "course_code": "CS 348", "course_name": "CS348 - Introduction to Database Management (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Introduction to Database Management Winter 2025", "S. Salihoglu", "S. Salihoglu", "This course is an introduction to database management systems (DBMSs), which are the core software systems that applications use to store, manage, query, and manipulate very large-scale data efficiently.", "Fundamentals of data management: the relational data model and its query languages; integrity constraints; indexes and views to make DBMSs efficient for an application workload; and transactions to ensure safe and concurrent access and manipulation of data, focusing on fundamental topics such as serializability and ACID guarantees of a DBMS.", "Database design methodology, which shows how to design \"good\" databases instead of \"bad\" ones and how this can be made formal using the theory of normalization.", "These principles and tools will be very important when you build your own data-intensive applications in your careers.", "In contrast, topics under (3) are from the perspective of system engineers that actually implement the DBMS, and aims to engage students interested in the low-level implementations of the core data structures, algorithms, and protocols DBMSs use to support higher-level applications.", "Data Model: Relational Model", "High Level Query Language: Relational Algebra & SQL, Datalog", "E/R Models", "Normal Forms", "Embedded vs Dynamic SQL", "Frameworks", "Physical Record Design", "Query Planning and Optimization", "Indexes", "RDF Systems", "Database System Concepts (DSC) (Seventh Edition) Abraham Silberschatz, Henry F. Forth and S.Sudarshan, McGraw Hill.", "Project-based: A1(10%)+A2(10%)+A3(10%)+Project(30%)+Midterm(15%)+Final(25%)"]}, {"course_id": 3, "course_code": "CS 350", "course_name": "CS350 - Operating Systems (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Operating Systems Winter 2025", "07:00PM - 08:50PM", "Bernard Wong bernard AT uwaterloo DOT ca", "Hong Zhang honzhang AT uwaterloo DOT ca", "Karen Anderson kaanders@uwaterloo.ca", "An introduction to the fundamentals of operating system function, design, and implementation.", "Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security.", "An introduction to the fundamentals of operating system function, design, and implementation.", "Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security.", "Operating System Introduction (2 hours)", "Historical overview of operating system development.", "Simple memory management techniques: partitioning, dynamic loading, simple segmentation.", "File Systems (6 hours)", "Bonus content on a current topic in computing", "In a general way, understand operating systems: what they do, how they are used, and how they are implemented.", "Introduction Chapters 1-2 Intro  Slides", "Process API    Slides", "Fibers", "Synchronization", "System Calls and Exceptions   Context Switch & Sys Calls  Slides", "Virtual Memory Chapters 8,9 Address Spaces   Memory API", "Smaller Page Tables", "Devices and I/O Chapters 12 and 13 I/O Devices  Hard Disk Drives  Slides Disk", "File Systems Chapters 10 and 11 (excluding 11.8, 11.9) Files and Directories", "File System Implementation", "FSCK & Journaling  Slides Part 1", "Bonus: Debugging     Slides", "A Collection of Tutorials and Useful Information", "An Introduction to Programming with Threads, by Andrew Birrell", "Assignment 3: File Systems", "Operating System Concepts, 8th edition Silberschatz, Galvin and Gagne (John Wiley and Sons) No available free on-line", "We will be using a system for class-related discussions and announcements called Piazza.", "Piazza can generate a large volume of e-mails, and these settings may be modified to reduce the frequency of received notifications (as well as what types of notifications are received).", "Debugging: GDB Online Documentation", "An Introduction to Programming with Threads, by Andrew Birrell", "System V ABI", "COS Source Code and Documentation:", "Source Code Documentation", "OpenGrok Source Code Search", "OpenGrok Source Code Navigation", "Exams", "You are welcome to use these tools to help you understand the course material, but you must not:", "cut-and-paste your assignment code into them for debugging assistance.", "Also, these tools will not be available when you write the exam, so you need to understand how to solve these problems yourself in order to pass the course.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 4, "course_code": "CS 451", "course_name": "CS451 - Data-Intensive Distributed Computing (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Data-Intensive Distributed Computing Winter 2025", "10:00AM - 11:20AM MC 2017", "RCH 307", "10:00AM - 11:20AM MC 2017", "RCH 307", "Introduces students to infrastructure for data-intensive computing, with a focus on abstractions, frameworks, and algorithms that allow developers to distribute computations across many machines.", "Topics include core concepts (partitioning, replication, locality, consistency), computational models (MapReduce, dataflows, stream processing, bulk-synchronous parallel), and applications.", "Explain the key concepts in distributed big data projects", "Write clean and efficient Hadoop MapReduce and Spark code", "Understand and design distributed algorithms for the analysis of textual, graph, and relational data", "Explain the design issues involved with distributed relational and non-relational database systems such as Apache HBase / Google BigTable", "Introduction to Distributed Text Processing 1", "Introduction to Hadoop MapReduce 3", "Introduction to Apache Spark 3", "Distributed Database Systems 3", "This course includes the independent development and practice of specific skills, such as designing MapReduce and Spark code.", "Library for research-based assignments"]}, {"course_id": 5, "course_code": "STAT 330", "course_name": "STAT330 - Mathematical Statistics (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Mathematical Statistics Winter 2025", "10:30AM - 11:20AM DC 1351", "This course provides a mathematically rigorous treatment for topics covered in STAT230 and 231, and to make essential extensions to the multivariate case.", "Topics covered include independence of random variables, conditional expectation and the determination of the distribution of functions of random variables using the cumulative distribution method, change of variable and moment generating functions.", "Asymptotic properties of the maximum likelihood estimator are examined and used to construct confidence intervals or regions.", "Tutorial: tutorials will be used for going over solutions of practice problem sets and holding term tests.", "Have a deep understanding of various mathematical aspects of Statistics and Probability.", "Week 4 Chapter 3. Expectation & M.G.F. Term Test 1 January 28th", "Asymptotic Distributions", "Introduction to Probability and Mathematical Statistics by Bain and Engelhardt, Second Edition No 112", "Arrangements for students with official conflicts will be handled on a case by case basis."]}, {"course_id": 6, "course_code": "STAT 331", "course_name": "STAT331 - Applied Linear Models (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "Applied Linear Models Winter 2025", "08:30AM - 09:50AM MC 4020", "02:30PM - 03:20PM", "RCH 101", "Thursdays from 3:00-4:00pm in M3 3021", "Modelling the relationship between a response variable and several explanatory variables (an output-input system) via regression models.", "Model diagnostics and improvement.", "Algorithms for variable selection.", "Review of basic Normal theory, t, chi-squared, and F distributions.", "Simple linear regression.", "Analysis of variance.", "Multiple linear regression, variable selection techniques, indicator variables, diagnostics.", "Brief introduction to non-linear regression, factorial experimentation.", "Registered students can enroll in the class discussion board through Piazza.", "Search for your question first before posting.", "Do not expect a full solution to your question.", "To help maintain a safe, respectful, and productive community in which we \u2013 students and teaching team alike \u2013 can take risks in our learning/teaching, tackle challenging concepts, and ultimately grow as learners, we should endeavor to follow these mutual expectations:", "Explain the main concepts of linear regression models.", "Understand the methods of least squares and maximum likelihood estimation for model parameters.", "Interpret the model and its parameters (e.g., regression coefficients) in the context of any application.", "Draw inferences from a fitted model about the parameters of interest and make predictions.", "Apply the previous two outcomes when fitting linear models to real data using R.", "Assess model quality by diagnosing violations in underlying model assumptions (and identify strategies for improvement).", "Evaluate competing fitted models built using various model selection methods (and choose between them).", "Introduction", "The Straight Line Model", "Model formulation and interpretation", "Least squares estimation", "Mean response and residual variance estimation", "Introduction to R/RStudio", "Maximum likelihood estimation", "Estimators and their properties", "Important distributions", "Distributions of estimators", "Confidence intervals", "O - Ch. 2-4", "Straight Line Model in R", "Prediction intervals", "Intervals in R", "Hypothesis testing", "O - Ch. 4-5", "ANOVA and F test", "Model limits", "Data transformations", "O - Ch. 4-6", "O - Ch. 7", "A1 and Q1 Solutions", "Multivariate normal distribution", "The Linear Model", "Examples", "O - Ch. 8-9", "Estimation", "Estimators and their properties", "Distributions of estimators", "O - Ch. 9, 11, 12", "ANOVA and F test", "Significance tests", "General linear hypothesis", "O - Ch. 9, 11, 12", "A2 and Midterm Solutions", "Case Study: South African heart disease", "Nested models", "Additional sum of squares", "O - Ch. 12", "Outliers", "O - Ch. 13-14", "Influence", "O - Ch. 14-15", "A3 and Q2 Solutions", "One-variable-at-a-time selection methods", "Criteria-based selection methods", "O - Ch. 16", "This learning consists mostly of making sure you understand the concepts and steps that were used in class to solve problems and then solve exercises from the textbook on your own.", "Introduction to Regression Modeling by Abraham and Ledolter This textbook is an optional reference book (available for free on LEARN).", "R and R-Studio Free software.", "To serve as an opportunity to demonstrate your understanding, application, and integration of the course material, including practical application of the skills/concepts with the statistical software, R.", "Missed Assignment: The time window to complete these assessments are generous and, in general, a sickness lasting a couple of days will not be enough of a reason to ask for alternative accommodations and/or extension.", "Tips for Success", "Students should critically compare their work with available solutions and against the solutions of fellow classmates.", "Notice of Recording", "To help you decide if you should isolate, you can use the provincial self-assessment tool.", "In the scenario where we must transition back online the following contingencies will be used:", "These materials are made available for the personal use of students registered in the current offering of this course.", "Students may not distribute or reproduce these materials for commercial or non-commercial means.", "In particular:", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as mathematical proofs and the fitting, interpretation, and assessment of linear models in real applications.", "Library for research-based assignments"]}, {"course_id": 7, "course_code": "STAT 341", "course_name": "STAT341 - Computational Statistics and Data Analysis (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Computational Statistics and Data Analysis Winter 2025", "04:00PM - 05:20PM", "10:00AM - 11:20AM EIT 1015", "04:30PM - 05:20PM", "Megan French", "Daniel Zhang", "While personal matters can be communicated via email, Piazza should be the primary platform for Q&A outside of class.", "A computationally focused approach to statistical reasoning in the context of real data.", "Functional programming in R and algorithms will be used to define interesting attributes of finite populations and their sampling characteristics.", "Understand the fundamentals of population-based statistical analyses, as well as implicitly/explicitly defined population attributes", "Understand the basics of sampling and the underlying ideas/mechanisms of probability sampling and related issues", "Understand the basics of inductive inference including target and study populations, measurements, comparing subpopulations, random intervals and coverage probabilities, and resampling methods such as bootstrap", "Generate high-quality visualization and inferential statistics R output for the topics above", "Prepare reports that communicate your statistical analyses using LaTeX and R Markdown.", "Jan. 6 Introduction to the course", "location and scale invariance/equivariance", "Power transformations and linear relationships", "Implicitly defined Attributes", "Solving system of equations Assignment #1", "Iteratively re-weighted least-squares", "Sampling mechanisms and inclusion probabilities", "Sampling design", "9. Mar. 3 Anatomy of tests of significance", "A t-like discrepancy measure  Assignment #2", "Mar. 10 Multiple testing", "Student-t-based intervals", "Mar. 17  Introduction to resampling methods", "Bootstrap in regression", "Multiple samples and prediction", "Decomposition of APSE, bias-variance trade-off", "Training and Test sets", "K-fold cross validation Assignment #3", "Each folder will contain five files, e.g. for section 2.1-", "There will be a 2.5-hour, closed book, cumulative final exam during the Final Examination Period: April 9 \u2013 April 25.", "An INC grade is rarely granted and will be considered on a case-by-case basis, with decisions based largely on your performance throughout the semester.", "Self-Declared COVID-19 Related Absences: You may self-declare one absence per term during the formal lecture period for influenza-like illnesses.", "Course Software: R is a language and a free statistical computing and graphics software that we will use extensively throughout the course.", "The only time you may run into trouble is if you call a function from a package to handle a task you have been asked to code out explicitly.", "For example, if you are asked to code a function that calculates the mean of a vector in R, and your solution is to just call the function mean(), then you will not receive any marks.", "Communication: When you email your instructor, make sure you include the following information in your email:", "Including non-English characters in your email (sometimes imposed by installing a non-English operating system) prompts UW servers to spam your emails for the instructor.", "These characters most often appear in (not exclusively) the subject line, From, To, and Date/Time portions of previous communications if you reply to an email.", "You must use the web-based email platform if you suspect that you have non-English characters in your emails imposed by your computer, phone, tablet, etc.", "This course includes the independent development and practice of specific skills related to computational statistics and data analysis.", "Phone: 519-884-0000 extension 213"]}, {"course_id": 8, "course_code": "CS 115", "course_name": "CS115 - Introduction to Computer Science 1 (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Introduction to Computer Science 1 Winter 2025", "Diren Swayze", "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming.", "As we are aware of the varied ways in which this material might be of use in the future, we have included concepts that are beautiful and universal.", "Because of the fundamental nature of the concepts taught in CS 115, the course can serve both students whose primary interest in computers is in their use in their chosen areas of study and students intending to minor in CS.", "Module 01: Introduction Monday January 6", "Module 03: Strings and Symbols Monday January 13", "Module 06: Structural Recursion Monday February 3", "Module 08: Local Evaluation Monday February 24", "Module 09: Higher-Order Functions Monday March 3", "Exams", "You can submit each of those files as many times as you like before the deadline.", "Every time you submit a file, we'll run some basic checks on it to make sure it looks valid, and send you preliminary feedback via email.", "Re-marking", "The forms will be in a Survey on Learn for each assignment for two weeks."]}, {"course_id": 9, "course_code": "CS 135", "course_name": "CS135 - Designing Functional Programs (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Designing Functional Programs Winter 2025", "Monday -", "Monday", "07:00PM - 08:50PM", "08:30AM - 09:20AM", "10:30AM - 11:20AM MC 2034", "Charlie Clarke", "Email: claclark@uwaterloo.ca", "Karen Anderson", "Email: kaanders@uwaterloo.ca", "Email: dbwolff@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Sara Nayar", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "CS135 Problem-solving FAQ", "Assignment Marking Error: Submit a re-mark request, due within one week of release of marks.", "Read Me First", "We hope to guide you through a carefully designed curriculum that introduces you to core concepts in computer science.", "In a typical week, you will move through the following activities:", "You should get a feel for what information is where so you can find it quickly in the future.", "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming.", "Syntax and semantics of a functional programming language.", "Linear and nonlinear data structures.", "Abstraction and encapsulation.", "CS 135 Designing Functional Programs", "CS 135 is for students who would prefer a more conceptual treatment of introductory computer science in a simple language that is educationally effective but not commercially relevant.", "Hardware and Software", "Student labs are equipped with the DrRacket integrated development environment running on networked personal computers.", "References", "How To Design Programs by Felleisen, Findler, Flatt, and Krishnamurthi, MIT Press, 2003.", "Definition of lists, designing functions to process and produce lists, recursive definition of natural numbers, recursive data definitions.", "Non-Linear Structures (6 hours)", "Multi-clausal recursive data definitions, trees, mutually referential data definitions, design methods for complex data, iterative refinement, multiplexing.", "Early development of electronic computers and programming languages.", "History of concepts covered in this course.", "have understanding and experience with the topics in the course outline above", "Drop deadline 25", "Reading Week Starts", "Slides Description", "L01 Values and expressions Prefix notation, exact numbers, Boolean expressions, constants", "L04 Lists List values and expressions, composite data, data definitions", "iClicker pilot", "2024-08-26: CS135 is participating in a pilot comparison of iClicker and Vevox.", "The iClicker subscription should be free.", "iClicker Account", "Racket and DrRacket", "It is also simple and clean enough that we cover computer science content many CS students do not see until later in their CS careers.", "If you submit code written under some other system and it does not work in our currently-supported version of DrRacket, then we consider that code incorrect even if it works for you at home.", "Your work in CS135 will be assessed in a variety of ways.", "Coverage", "Using such off-limits material generally results in a significant loss of marks.", "In general, the basic tests will try to warn you if inappropriate functions and special forms are used.", "Submitting a partially completed solution is a good idea, just in case you don\u2019t get back to it before the due date and to serve as a backup in case your computer breaks or is stolen.", "Email Karen Anderson .", "Email the ISAs and ask them to \u201cmark it for feedback\u201d.", "Testing", "We do several kinds of testing on your submissions:", "Basic tests", "Each time you submit before the due date, we run a set of \u201cbasic tests\u201d on your submission.", "It\u2019s amazing how many fatal errors can appear during last-minute tidying up!", "Do not make your last submission immediately before the deadline \u2013 it gives you no time to check the Basic Test results and respond, if needed.", "The numeric mark appearing on the basic test marksheet is only for guidance.", "After the submission deadline we run a second set of tests to assess your code, including:", "These post-deadline tests and hand-marking form your mark for the assignment.", "If you procrastinate long enough, this rule can easily cause you to fail the course.", "We won\u2019t rehash the above policies, but we do want to make them concrete for CS135.", "A specific assignment may give exceptions to the above.", "You are welcome to use these tools to help you understand the course material, but you should not:", "cut-and-paste your assignment code into them for debugging assistance.", "Also, these tools will not be available when you write the exam, so you need to understand how to solve these problems yourself in order to pass the course.", "attempting to run malicious code during the submission or marking process."]}, {"course_id": 10, "course_code": "CS 145", "course_name": "CS145 - Designing Functional Programs (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Designing Functional Programs (Advanced Level)", "10:00AM - 11:20AM MC 2017", "Monday -", "Monday", "07:00PM - 08:50PM", "Email: troy.vasiga@uwaterloo.ca", "Office Hours: Tues and Thur 1:00-2:00pm in MC 6212,", "Email: kaanders@uwaterloo.ca", "Email: cs145@uwaterloo.ca", "Fri 2:30-3:30pm in MC 4065,", "Email: cs145@uwaterloo.ca", "This course introduces students to key concepts in the field of Computer Science, prepares students to complete the CS portion of their Math core requirements and, if desired, continue on to second-year core courses in CS, provides top students with appropriate challenges and enrichment, and explores topics in greater depth than is possible in CS 135.", "Audience", "Demonstrate above-average communication skills (listening, reading, writing) due to the lack of textbook support for much of the enrichment material", "Given a clear and concise statement of a problem or task, write a program from scratch of up to a hundred lines of properly-formatted and documented code in a functional programming language to solve the problem or complete the task", "Use elementary data structures, such as lists and trees, in programs", "Use higher-order functions to improve readability and efficiency of programs", "Analyze the worst-case running time of programs and describe examples of data that demonstrate that the analysis cannot be improved", "Demonstrate their understanding of the implementation of functional programming language features by coding small interpreters for Scheme-like languages", "An introduction to functional programming", "Function application and definition", "Substitution model", "Types in Scheme", "Structures", "Recursion on lists and integers", "Unary representation of integers", "Proving properties of programs", "Algorithm analysis", "Functions as values", "Anonymous functions", "Higher-order functions", "Local definitions", "Simplifying the language", "Binary representation of integers", "Immutable abstract data types", "Association lists", "Leaf-labelled and node-labelled trees", "S-expressions", "Interpreters", "Limits to computation", "Efficiency", "Purely-functional data structures", "Priority Queue ADT and Braun heaps", "Efficient maps: treaps, red-black trees, AA trees", "They will not be due each week on the same day, as is common in the other first-year CS courses and the first-year Math courses.", "Assignment questions are the main way to reinforce and deepen your understanding of the concepts and skills discussed in lecture.", "You will submit program files electronically to the Marmoset system, which runs tests on your code and informs you of the results fairly rapidly.", "You can still get a great mark in the course.", "Questions and concerns can be sent to instructor or ISA emails.", "When asking questions, first check in case the question has already been answered using the search bar above the feed/list of posts.", "Walk-in consulting hours may still be available if course staff are able to book a sufficiently-large room to follow distancing guidelines."]}, {"course_id": 11, "course_code": "CS 136", "course_name": "CS136 - Elementary Algorithm Design and Data Abstraction (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Elementary Algorithm Design and Data Abstraction Winter 2025", "08:30AM - 09:50AM MC 2017", "10:00AM - 11:20AM MC 2038", "10:00AM - 11:20AM MC 4059", "11:30AM -", "Monday -", "Monday", "07:00PM - 08:50PM", "This course builds on the techniques and patterns learned in CS135 while making the transition to use an imperative language.", "Topics discussed include iterative and recursive sorting algorithms; lists, stacks, queues, trees, and their application; abstract data types and their implementations.", "produce well-designed, properly formatted, documented and tested programs of a moderate size (200 lines) that can use basic I/O", "explain and demonstrate the use of the C memory model, including the explicit allocation and deallocation of memory", "explain and demonstrate the principles of modularization and abstraction", "implement, use and compare elementary data structures (structures, arrays, lists and trees) and abstract data type collections (stacks, queues, sequences, sets, dictionaries)", "If both exams are held in person", "If both exams must be held online", "If in-person exams cannot be held then they will be held online (if possible).", "You may also ask on the discussion forums in a private message.", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 12, "course_code": "CS 146", "course_name": "CS146 - Elementary Algorithm Design and Data Abstraction (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Elementary Algorithm Design and Data Abstraction (Advanced Level)", "Monday -", "Monday", "07:00PM - 08:50PM", "02:30PM - 03:20PM", "Brad In-person MC 6427", "On-line Consulting Hours: Microsoft Teams", "CS 146: Elementary Algorithm Design and Data Abstraction (advanced version)", "To familiarize students with key concepts in introductory computer science from an imperative perspective and to contrast this with the functional perspective taken in CS 145;", "To allow students to complete the CS portion of their Math core requirements and, if desired, to continue on to second-year core courses in CS;", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "Introduction to C and elementary mutation in Scheme", "The memory model.", "Variable declaration, assignment and infix expressions in C. Basic I/O in C. Compilation.", "Algorithm analysis in C. File I/O in C and Scheme.", "Program organization and testing methods.", "Space analysis in C and Scheme.", "Mutable lists, queues, deques, and trees in C. Time-space tradeoffs among mutable and immutable ADT implementations.", "Low-level abstractions", "Pointer arithmetic in C. Arrays in C and vectors in Scheme.", "Strings in C. Elementary hashing.", "Libraries in C and Scheme.", "Implementing high-level abstractions", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "The provided slides are not a substitute for attendance in any first-year CS course, but in CS 146, there are no slides, and the lecture summaries made available after lecture are an even worse substitute for attendance.", "Lectures will involve the development of ideas summarized very tersely in the handouts, as well as on-the-fly development of code, analyses, and proofs.", "CS145 and CS146 were originally designed as a year-long unit of curriculum, but eventually the individual courses drifted in their own directions.", "1.1 A note on logistics", "1.2 Review of forms of recursion and associated proof techniques", "1.3 In preparation for side effects", "1.4 Output", "1.5 Input", "1.6 First Introduction to C", "1.8 Memoization", "1.9 Mutation in C", "1.11 Boxes in C", "1.12 Advanced mutation", "1.13 Aliasing in C", "1.14 Memory and vectors", "1.15 Vectors in Racket", "1.16 Arrays in C", "1.18 ADTs in C; Amortized Analysis", "2 SIMPL: a simple imperative language", "2.1 Syntax and informal semantics", "2.2 Examples in several languages", "2.3 Formal semantics", "2.5 Proving imperative programs correct", "A primitive imperative language", "3.1 A primitive imperative language", "3.2 The PRIMPL simulator", "3.4 The SIMPL to A-PRIMPL compiler", "3.6 Strings in C", "3.7 Adding functions to SIMPL", "3.8 Adding both arrays and functions to SIMPL", "3.9 Implementing lists in PRIMPL", "4 MMIX: a realistic instruction set", "4.1 A more realistic processor", "4.2 The MMIX architecture", "4.2.1 Branches and Jumps", "4.2.2 Example", "4.2.3 Software Interrupts", "4.2.5 A Problem with Branches and Jumps", "4.4 Towards a SIMPL to MMIX compiler", "5.1 Storing primitive values", "5.3 Managing memory", "5.4 Structural and pointer equality", "5.5 Function application in a Racket interpreter", "5.7 Justifying the cost of Racket primitives", "5.8 Moving towards implementation in an imperative language", "6.2 Zippers", "6.3 A continuation-passing interpreter", "6.6.2 Mark-and-sweep", "6.6.3 Copying garbage collection", "6.7 Heterogeneous Data in C", "6.8 Multidimensional Arrays in C", "6.10 Variable-length Argument Lists", "7.1 Continuation-passing style", "7.2 Exception handling", "7.3 Undelimited continuations", "7.4 Delimited continuations", "7.5 Racket\u2019s implementation of continuations", "In CS 146, we will examine the imperative paradigm, and compare and contrast the way that efficient algorithms and data structures are designed in imperative and functional languages.", "Racket is a laboratory for current research on aspects of functional programming languages, and we will continue to look at interesting topics in this area, perhaps at the cost of some coherency in the flow of material.", "They will not be due each week on the same day, as is common in the other first-year CS courses and the first-year Math courses.", "Assignment questions are the main way to reinforce and deepen your understanding of the concepts and skills discussed in lecture.", "You will submit program files electronically to the Marmoset system , which runs tests on your code and informs you of the results fairly rapidly.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "(Please also note that we may use the trends in a student's submission history to estimate the likelihood of other forms of cheating as well.)", "Library for research-based assignments"]}, {"course_id": 13, "course_code": "CS 240", "course_name": "CS240 - Data Structures and Data Management (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Data Structures and Data Management Winter 2025", "10:00AM - 11:20AM RCH 112", "11:30AM -", "10:30AM - 11:20AM MC 4040", "11:30AM - 12:20PM MC 4040", "Email: oveksler@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "All of Tom's consulting hours are in-person in MC 4065.", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Instructional Support Coordinator: Karen Anderson", "Email: kaanders@uwaterloo.ca", "Introduction to widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms.", "CS 240: Data Structures and Data Management", "This course introduces widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms.", "Analyze, apply, and use various data structures and data-management techniques in a variety of applications", "Perform rigorous complexity analyses of simple algorithms and data structures, which includes writing correct mathematical proofs on inductively-defined structures and solving simple recurrence relations", "Select a good data structure to solve a specific algorithmic problem", "Apply data structures correctly and efficiently in one or more high-level programming languages, including C++", "Audience", "Successors: Most third-year CS major courses", "Conflicts: Other courses that seriously consider efficiency and correctness of fundamental data structures and their algorithms", "Analytical:", "Define and explain order notation; perform complexity analyses of simple algorithms", "Perform basic computations of discrete probability and expectation", "Use mathematical induction on recursively defined structures, including finding simple errors in inductive arguments", "Prove simple properties of program fragments correct through the use of pre-conditions and post-conditions for loops and recursive calls", "Computational and algorithmic:", "Design, implement, test, and debug C++ programs to solve problems requiring hundreds of lines of code", "Define the ADTs for stacks and queues; write efficient implementations in C/C++", "Describe tree structures, including binary search trees and multi-way trees; use these structures in C/C++ programs", "Describe basic sorting algorithms (including Quicksort) and implement them in C/C++", "Perform rigorous asymptotic analyses of simple algorithms and express the result using order notation; compare algorithms based on their asymptotic complexity; and prove formal results involving order notation", "Apply the priority-queue ADT to solve various application problems, implement a priority queue using heaps, and analyze the complexity of common implementations of heap operations", "Develop best-, worst- and average-case analyses of sorting algorithms, including Quicksort, and explain the ramifications of these analyses in practice; explain the basic principles of randomized algorithms and their potential advantages, specifically in the case of Quicksort; explain the difference between comparison-based sorting and non-comparison-based sorting algorithms, and when and why the latter may run faster; and apply sorting-based techniques to algorithmic problems, such as elimination of duplicates", "Explain the advantages and disadvantages of various hashing techniques; identify the best hashing techniques to use in a particular application scenario; and recognize when hashing techniques are preferable to other dictionary implementations", "Design data structures for real-world data (where keys are often inherently multidimensional) in such a way that common operations (including range search) can be implemented efficiently", "Design special data structures that can efficiently store and process words and strings, and select and apply a suitable technique for data compression in a specific application scenario", "Introduction and review (3 hours)", "Basic computer model: the random-access machine", "Runtime of an algorithm: worst-case, best-case, and average-case", "Review of stacks and queues", "Priority queue ADT and simple implementations", "Sorting and analysis of randomized algorithms (5 hours)", "Quicksort (non-randomized): worst-case, best-case, and average-case complexity", "Randomized quicksort and its analysis; application to selection and its analysis", "Lower bound on comparison-based sorting", "Non-comparison-based sorting algorithms (e.g., Counting Sort and Radix Sort)", "Dictionary ADT and simple implementations", "Binary search trees (insert and delete operations and analysis)", "Key-indexed search, simple hash functions", "Range search in a binary search tree", "Algorithms and data structures for text processing (8 hours)", "Sometimes these include animations/overlays, in case of which there will be both a Display version (with them) and a Print version (omitting them, but otherwise the same content).", "The slides for each module will be posted as the term progresses.", "Module 1 Introduction and Asymptotic Analysis M1.pdf", "Module 3 Sorting, Average-Case and Randomized Algorithms M3.pdf", "Optional: Goodrich & Tamassia   8.3", "Module 8 Range-Searching in Dictionaries of Points   Course notes Chapter 8", "A0.tex", "A1.tex", "The following books are on reserve in the DC library for reference and additional resources:", "Algorithm Design and Applications (2015)", "Also covers cuckoo hashing.", "Sedgewick] Algorithms in C++, Third Edition (1998)", "Computational Geometry: Algorithms and Applications", "CLRS] Introduction to Algorithms, 2nd edition (2001)", "Introduction to Algorithms, 2nd edition is also avaliable online (in campus).", "This website will be the primary means of communication and distribution of materials for the course.", "The course uses a number of different tools for distributing information and receiving submissions.", "These are not worth credit, but may help you in self-testing your understanding of the material.", "Only one programming question can be shifted to the final exam.", "If more than this has verification for non-submittal, then it will be considered on a case-by-case basis.", "A student with a medical reason may not be granted an INC because they have not performed sufficiently well during the academic term.", "An INC will be granted ONLY if there is a strong reason for missing the exam (generally a serious medical issue verified by a doctor's note) AND a satisfactory performance during the term (both assignments and midterm).", "Academic Dishonesty", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "The first criterion for marking is the correctness, the second criterion is efficiency.", "describe the main idea first in words,", "In the case that you are using facts stated in lectures/modules, be sure to cite where you got them from.)", "Files should be named .cpp, where the specific file name will be specified in the assignment.", "You should include sufficiently many comments in your code that the main ideas of design and correctness are clear.", "One-line changes: In the case you passed the public test, and failed some secret tests, if your program works with a one line change, then we may accept it for remarking and give some marks after deducting a penalty (typically 10-20% of the programming question).", "Here are some ways to create PDF files:", "Create your solution in LaTeX. LaTeX is a document preparation system that uses a mark-up language to write/create and co-ordinate different parts of documents, including diagrams and was introduced in Assignment 0.", "The following are least preferred methods since the results may be hard for markers to read and/or the files may be too large.", "Submitting a Re-Mark Request: Please email cs240@uwaterloo.ca in order to submit a request.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 14, "course_code": "CS 240E", "course_name": "CS240E - Data Structures and Data Management (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Data Structures and Data Management (Enriched)", "10:00AM - 11:20AM MC 4041", "Email: biedl [", "Email: cs240e", "All of Tom's consulting hours are in-person in MC 4065.", "Email: cs240", "Instructional Support Coordinator: Karen Anderson", "Email: kaanders [", "Module 1 Introduction and Asymptotic Analysis Course notes Chapter 1 (skip 1.5 for now)", "(updated)  Sorting, Average-Case and Randomized Algorithms Course notes Chapter 3 (and parts of 1.5)", "Optional: Goodrich & Tamassia   8.3", "Module 8 Range-Searching in Dictionaries of Points Course notes Chapter 8", "Tutorial 3 Friday, January 24 Average-case vs expected, sorting", "The following books are on reserve in the DC library for reference and additional resources:", "Algorithm Design and Applications (2015)", "Also covers cuckoo hashing.", "Sedgewick] Algorithms in C++, Third Edition (1998)", "Computational Geometry: Algorithms and Applications", "CLRS] Introduction to Algorithms, 2nd edition (2001)", "Introduction to Algorithms, 2nd edition is also avaliable online (in campus).", "Only one programming question can be shifted to the final exam.", "If more than this has verification for non-submittal, then it will be considered on a case-by-case basis.", "A student with a medical reason may not be granted an INC because they have not performed sufficiently well during the academic term.", "An INC will be granted ONLY if there is a strong reason for missing the exam (generally a serious medical issue verified by a doctor's note) AND a satisfactory performance during the term (both assignments and midterm).", "Academic Dishonesty", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "Communication & Resources in CS 240E", "CS240E uses a variety of platforms in order to communicate and provide course materials to students.", "If your issue is confidential, but not specifically for one member of the course personnel, then a better option might be a private post to piazza.", "You can ignore these if you are comfortable with the material.", "Written assignments are submitted electronically using Crowdmark - a web-based submission and marking system.", "To submit files for Assignments, follow these instructions:", "Under each question, you can select files to add them to your submission for that question.", "You can submit and re-submit files as many times as you want before the deadline.", "Logging In", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 15, "course_code": "CS 241", "course_name": "CS241 - Foundations of Sequential Programs (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["ISA", "Yiwen Dong", "ISC", "The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages.", "Write short machine- and assembly-language programs to perform simple data manipulation", "Write a basic assembler supporting labels", "Give formal specifications for regular languages, including regular expressions and finite-state machines", "Write a scanner capable of dealing with a typical high-level programming language (given the specification)", "Give a grammar for a context-free language and create derivations for strings in a context-free language", "Perform context-sensitive analysis including type checking for high-level languages", "Write a simple code generator for an imperative language, i.e., one doing little or no optimization", "Apply appropriate design decisions when programming in C/C++ based on a detailed understanding of the way memory is used by a running C/C++ program", "Week 1: Introduction and Modules 1, 2", "20M+40F", "This course includes the independent development and practice of specific skills, such as development of large software artifacts.", "Library for research-based assignments"]}, {"course_id": 16, "course_code": "CS 241E", "course_name": "CS241E - Foundations of Sequential Programs (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["03:30PM - 04:20PM MC 1056", "02:30PM - 03:20PM", "07:00PM - 08:50PM", "The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages.", "Non-enriched version: Any CS 241E student may switch to the regular version of CS 241 during the first two weeks of lectures.", "Machine-level implementation of high-level language features (9 hours)", "Introduction to formal languages.", "Regular languages, regular expressions and finite state machines.", "Semantic Analysis and Code generation (6 hours)", "Dynamic Memory Allocation.", "Write short machine- and assembly-language programs to perform simple data manipulation.", "Write a basic assembler supporting labels.", "Give formal specifications for regular languages, including regular expressions and bubble diagrams.", "Write a scanner capable of dealing with a typical high-level programming language (given the specification).", "Give a grammar for a context-free language and, given a grammar, produce a derivation for a given string in the language.", "Write a simple code generator for an imperative language, i.e., one doing little or no optimization.", "Apply appropriate design decisions when programming in C/C++ based on a detailed understanding of the way memory is used by a running C/C++ program.", "I Sept. 5 Introduction", "A link to the Marmoset system and instructions for using it may be found on the course web page.", "Intellectual property includes items such as:", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as implementing and debugging a compiler.", "Library for research-based assignments"]}, {"course_id": 17, "course_code": "CS 245", "course_name": "CS245 - Logic and Computation (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Logic and Computation Winter 2025", "10:30AM - 11:20AM MC 4041", "Formalizing the notions of correct and incorrect reasoning, defining what is computable, and exploring the limits of computation.", "The course covers a variety of topics related to logic and computation that are required as background for other courses in Computer Science.", "It differs both in tone and content from a logic course one would typically find in a mathematics program.", "Develop mathematical reasoning skills", "Improve understanding of propositional and first-order logic, including key notions, such as: expressing natural language statements as logical formulas, distinguishing between correct and incorrect reasoning (between valid and invalid logical arguments), constructing a formal proof, distinguishing between syntax and semantics", "Explore the limits of computers, including decidability and undecidability", "Introduction", "Structural induction and its use in proving statements about formulas", "Adequate sets of connectives", "Soundness and completeness of formal deduction", "Applications of propositional logic to computer science, such as: Automated proofs: Resolution, Davis-Putnam Procedure; Hardware and software veri\ufb01cation", "First-Order Logic", "Limitations of propositional logic, and the necessity of first-order logic for reasoning about objects and properties", "Quanti\ufb01ers, universe of discourse, translation between English and first-order logic formulas", "Syntax of first-order logic: terms, formulas", "Semantics of first-order logic: valuations", "Proving argument validity in first-order logic (semantically)", "Formal deduction in first-order logic; Proving argument validity by formal deduction (syntactically)", "Applications of first-order logic to computer science, such as: Automated theorem provers and veri\ufb01ers; Databases", "Decidability and Peano Arithmetic", "Turing Machine as a model of computation", "Undecidability: Basic notions, undecidability of the Halting Problem and other decision problems", "The Peano axioms for number theory (including the induction axiom), undecidability of Peano Arithmetic", "An Important Application of Logic to Computer Science", "Hoare triples", "partial and total correctness", "Formalize English sentences into properly formed formulas in the propositional and first-order logic and, conversely, interpret such formulas in English", "Formalize the notion of correct reasoning and proof, and be able to construct formal proofs", "Realize the limitation of formal proof systems", "Understand the applications of logic to computer science", "This means that you must decide whether to exercise your option to submit late before the deadline, and refrain from making a partial submission in this case.", "There will be a marked quiz due in each week when there will not be a Crowdmark assignment due or a mid-term examination.", "This course includes the independent development and practice of specific skills, including writing numerous proofs using numerous abstract definitions.", "Library for research-based assignments"]}, {"course_id": 18, "course_code": "CS 245E", "course_name": "CS245E - Logic and Computation (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["10:00AM - 11:20AM MC 2034", "Tuesday -", "This includes:", "Basic sematic notions:", "Truth tables", "A formal proof system for Propositional logic", "Soundness and completeness theorems for the proof system", "Basic sematic notions", "Structures for a vocabulary", "Logical truths and logical implications", "Translations between FOL formulas and English and mathematical statements.", "A formal proof system for Predicate logic", "Soundness theorem for the proof system", "However, the focus of this version of the course is more on fundamental and mathematical concepts (on the expense of developing technical skills, such as designing formal proofs).", "We will use propositional logic as a main tool for demonstration key logical concepts such as", "Structural induction its justification and many applications.", "soundness and completeness theorems", "the expressive power of the logic (what can and what cannot be expressed).", "We will revisit these topics for first order logic.", "Finally, we will discuss applications of logic to computer science, in particular showing limitations of computations (undesirability)."]}, {"course_id": 19, "course_code": "CS 246", "course_name": "CS246 - Object-Oriented Software Development (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Object-Oriented Software Development Winter 2025", "10:00AM - 11:20AM MC 1056", "10:30AM - 11:20AM MC 3003", "11:30AM - 12:20PM MC 3003", "Tuesday -", "Ross Evans rpevans@uwaterloo.ca", "Introduction to object-oriented programming and to tools and techniques for software development.", "Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites.", "This course introduces students to object-oriented programming in C++ to facilitate designing, coding, debugging, testing, and documenting medium-sized programs.", "Students learn to read a specification and design software to implement it.", "Important skills are selecting appropriate data structures and control structures, writing reusable code, reusing existing code, understanding basic performance issues, developing debugging skills, and learning to test a program.", "C++", "Introduction to C++", "I/O and Strings", "Basic language constructs and Functions", "Exceptions", "Introduction to Templates", "Exception safety", "Template functions and algorithms", "Object-Oriented Programming", "UML class models", "Constructors and Destructors", "Encapsulation", "Inheritance", "Design patterns: Iterator, Observer, Decorator, Factory method, Template method, Non-virtual interface (NVI), and the Pimpl idiom", "Inheritance: vtables", "Multiple inheritance", "Design quality", "MVC (model-view-controller) architecture", "Design, implement, test, and debug C++ programs to solve problems requiring hundreds of lines of code, making appropriate use of", "types, variables, arrays, strings, and dynamic memory; loops, conditionals, and other control structures; structures, unions, and enumerations; procedures and functions; the preprocessor; formatted and unformatted I/O", "a subset of the STL, including vector, list, and map", "assertions and exceptions", "test suites for regression testing, white and black box testing", "structured programming, incremental development", "interface design, abstractions, information hiding, cohesion and coupling", "a subset of UML to specify classes, objects and relationships among them", "a selection of design patterns", "Explain the following properties of the memory model used in C++, including their impact on time and space efficiency when designing code: bytes vs. words, memory as an array, run-time stack and stack frames, memory allocation on the heap vs. automatic allocation on the stack, pointers as memory addresses, the representation of objects in memory", "You must complete A0 in order to receive marks for the rest of the course.", "A1 Basic C++ Monday, January 20 Monday, January 27 5", "A2 Introduction to OOP Monday, February 3 Monday, February 10 6", "A4 Design Patterns Monday, March 10 Monday, March 17 8", "Note: Marmoset is not a compiler!", "Do not submit C++ code to Marmoset, without first attempting to compile it yourself.", "Students from different sections can be in the same group.", "Working on a group is an important learning experience for software development in a team.", "Students in a group will be responsible for forming and managing the group.", "Please be very careful in selecting your group as there are always groups that end up having major issues every term.", "Exams", "Examination Date Final Grade Weight", "Each weekly set of problems completed succesfully can be used to replace 0.5% of the final grade from the final exam.", "In the case where both a midterm and final exam can be held, the final course grade will be calculated from the following components and weights:", "To pass the course, you must satisfy these three conditions:", "A grade of at least 45% on the weighted average of assignments A1-A4", "Assignments1to4  = (A1*5 + A2*6 + A3*6 + A4*8) / 25", "Normal = A1*5 + A2*6 + A3*6 + A4*8 + A5*15 + Midterm*20 + Final*(40-0.5*TutorialsCompleted) + 0.5*TutorialsCompleted", "if (MidtermInPerson==TRUE && FinalInPerson==TRUE)", "else", "if (MidtermInPerson==FALSE && FinalInPerson==TRUE)", "else", "if (MidtermInPerson==TRUE && FinalInPerson==FALSE)", "else", "if (MidtermInPerson==FALSE && FinalInPerson==FALSE)", "else", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments"]}, {"course_id": 20, "course_code": "CS 246E", "course_name": "CS246E - Object-Oriented Software Development (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Object-Oriented Software Development (Enriched)", "Tuesday -", "CS246 description: Introduction to object-oriented programming and to tools and techniques for software development.", "Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites.)", "functions and classes as the basic building blocks for abstractions", "function and class templates; exception safety", "object-oriented design principles; design patterns", "language features in combination", "Software library development for general client use.", "Principles of object-oriented software design.", "A selection of software design patterns.", "A1     10%", "Office hours: the list of office hours can be found at https://student.cs.uwaterloo.ca/~cs246e/F24/officehours.shtml", "Note: Marmoset is not a compiler!", "Please do not submit C++ code to Marmoset without first attempting to compile it yourself.", "The release test for a problem gives you the result of running your program on one basic test case (usually a case that appears in the assignment specification).", "So be sure to test your code thoroughly, so that you pass as many of our secret tests as possible.", "Testing", "Hand-Marking", "Note that correctly-working code is only one component of an assignment mark.", "Intellectual property includes items such as:", "CAN I POST MY CODE ONLINE?", "The second complicating factor concerns the question of who actually owns assignment solutions.", "The instructor supplies the question, a framework for the solution (including rules, guidelines, and possibly some starter code or libraries) and has in mind the general structure of what a correct solution ought to look like.", "the instructor(s) may permit posting of only those portions of assignments that were not provided as starter code;", "The instructors' policy for a given offering of a course will be stated in the course outline.", "If you wish to share your code with potential employers, and your instructor does not permit you to publicly post your solutions, you may host your code in a private repository, and provide a password to potential employers (for example, on your resume).", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 21, "course_code": "CS 251", "course_name": "CS251 - Computer Organization and Design (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "Computer Organization and Design Winter 2025", "11:30AM -", "RCH 307", "10:30AM - 11:20AM EV3 1408", "Silvia Zhang cs251@uwaterloo.ca", "Basics of digital logic design.", "Data representation and manipulation.", "Basics of processor design.", "This course enables students to develop an accurate mental model of the architecture and organization of physical computers and it introduces them to theoretical and practical concepts relevant to the structure and design of modern digital computers.", "Design simple combinational and sequential hardware at the logic gate level in order to implement simple algorithms and computations, such as addition, multiplication, and data-path control for processors.", "Describe number systems used by computer hardware, including IEEE floating point and two's complement.", "Analyze how machine language is executed by hardware, and describe a simple pipelined processor architecture for executing a RISC machine language.", "Explain basic cache and virtual-memory architectures, and how they can impact performance.", "Introduction and ARM (~3 hours)", "Combinational logic and basic components.", "Basic Processor Design (~9 hours)", "Processor design using single-cycle control.", "Multi-cycle control.", "Virtual memory.", "Multi-processor systems and core processors.", "Patterson and Hennessy: \"Computer Organization and Design\".", "Students registering their clicker for other sections will receive a grade of zero on clicker questions.", "else", "Notice of Recording", "In general, assignments submitted late and without an approved extension by the course ISC will not be accepted and will be given a grade of zero.", "If a student makes a short-term 48-hour declaration, they may contact the course ISC to obtain a 48-hour extension.", "Note that penalties are significantly higher for exams and for repeat offenders.", "Discussion of assignments is allowed, but each student must hand in their own copy of the assignment and word-for-word copying is not allowed.", "In-Class Discipline", "A student who is found to be disruptive during lectures will be given only one verbal warning for the term.", "Students should attend the section they're enrolled in and only the section they're enrolled in", "Further, a weekly quiz will be given and used in place of clickers in the marking scheme.", "Dropping lowest clickers marks, lowest quiz score", "Online Exams", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:"]}, {"course_id": 23, "course_code": "CS 486", "course_name": "CS486 - Introduction to Artificial Intelligence (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Introduction to Artificial Intelligence Winter 2025", "08:30AM - 09:50AM MC 2038", "08:30AM - 09:50AM MC 2038", "Varun Dhanraj: vdhanraj@uwaterloo.ca", "Methods of general problem solving.", "Multi-agent systems.", "Methods of general problem solving.", "Introduction to mathematical logic Mechanical theorem proving.", "Available free for downlooad online at artint.info Yes"]}, {"course_id": 24, "course_code": "CS 448", "course_name": "CS448 - Database Systems Implementation (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Database Systems Implementation Winter 2023", "11:30AM -", "11:30AM -", "Yang, Jheng-Hong j587yang", "The course focuses on the database engine core technology by studying topics such as storage management (data layout, disk-based data structures), indexing, query processing algorithms, query optimization, transactional concurrency control, logging and recovery.", "The course focuses on the database engine core technology by studying topics such as storage management (data layout, disk-based data structures), indexing, query processing algorithms, query optimization, transactional concurrency control, logging and recovery.", "Review of relational database systems (3 hours)", "Fundamentals of Database Systems, 7/E BY Ramez Elmasri and Shamkant B. Navathe No"]}, {"course_id": 25, "course_code": "CS 454", "course_name": "CS454 - Distributed Systems (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Distributed Systems Winter 2025", "11:30AM -", "S. Al Kiswany", "PHY 313", "S. Al Kiswany", "08:30AM - 09:50AM MC 2035", "S. Al Kiswany", "11:30AM -", "S. Al Kiswany", "PHY 313", "S. Al Kiswany", "08:30AM - 09:50AM MC 2035", "S. Al Kiswany", "An introduction to distributed systems, emphasizing the multiple levels of software in such systems.", "Specific topics include fundamentals of data communications, network architecture and protocols, local-area networks, concurrency control in distributed systems, recovery in distributed systems, and clock synchronization.", "An introduction to distributed systems, emphasizing the multiple levels of software in such systems.", "Specific topics include fundamentals of data communications, network architecture and protocols, local-area networks, concurrency control in distributed systems, recovery in distributed systems, and clock synchronization.", "Introductory Concepts", "Introduction/Overview of networking concepts relevant for distributed systems", "5. Distributed File Systems (2)", "Architecture", "Semantics", "Service software design", "Name Spaces", "Name Resolution", "Physical and Logical Clock Synchronization", "Mutual Exclusion", "Election", "Consistency Models", "Data Analytics", "Online shopping", "Distributed Systems, 4th Edition, Maarten van Steen and Andrew Tanenbaum Available for free Yes 0", "Distributed Systems, 4th Edition, Maarten van Steen and Andrew Tanenbaum", "For assignments, do not use any public or web-based source code repository hosting service other than https://git.uwaterloo.ca.", "You may discuss general concepts and problems with classmates, tutors, TAs, and instructors.", "Copyright and Intellectual Property", "Intellectual property includes items such as:", "Math Faculty code-sharing policy: https://uwaterloo.ca/math/code-sharing-policy"]}, {"course_id": 26, "course_code": "CS 480", "course_name": "CS480 - Introduction to Machine Learning (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Introduction to Machine Learning Winter 2025", "10:00AM - 11:20AM DWE 1501", "Introduction to modelling and algorithmic techniques for machines to learn concepts from data.", "Optimization-based learning: loss minimization. regularization.", "This is especially useful in complex tasks such as natural language processing, information retrieval, data mining, computer vision and robotics where it is not practical for a programmer to enumerate all possible situations in order to specify suitable instructions for all situations.", "The course will introduce the basics of machine learning and data analysis, and demonstrate how machine learning techniques have impacted life and society.", "The course starts with some classical tasks and algorithms in machine learning, then transitions to modern advances and successful applications in real life, and finally ends with discussions on the societal impact that machine learning has generated.", "A significant part of the course will be devoted to raising students' awareness on such ethical issues, including how to make machine learning algorithms fair and unbiased, how to protect individual privacy without compromising learning, how machine learning algorithms might be attacked, how to measure and improve the security of machine learning algorithms, and how to make machine learning algorithms explainable and interpretable.", "Recognize and formalize a task as a machine learning problem", "Identify suitable algorithms to tackle different machine learning problems", "Understand and implement a plethora of foundational machine learning algorithms", "Apply machine learning algorithms to real datasets", "Become aware of potential ethical and safety issues of machine learning on society", "Introduction (first lecture: Jan 7, 2025)", "Linear Regression", "Reproducing Kernels", "Multi-layer Perceptron", "Deep Neural Networks", "Attention", "Decision Trees", "Flow Models", "Variational Autoencoders", "Diffusion Models"]}, {"course_id": 27, "course_code": "CS 484", "course_name": "CS484 - Computational Vision (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Computational Vision Winter 2025", "10:00AM - 11:20AM MC 2034", "Introduction to image and vision understanding by computer.", "Camera-system geometry, image formation and lighting, and image acquisition.", "Processing of stereo images, and motion in image sequences.", "Applications of computer-vision systems.", "General Description", "Computer Vision encompasses a variety of innovative methods and algorithms leveraged in applications such as facial recognition, image searching, augmented reality, medical image analysis, automated mapping of environments, and digital effects in movies and photography.", "This course provides an introduction to the computational and mathematical foundations of computer vision and covers many of its standard applications.", "In case some points in the slides are skipped in class (e.g. review of basic background in linear algebra, or if time runs out), the students could be referred to the posted video lectures.", "The videos explain all the slides, including optional reviews of basic linear algebra, multi-variate calculus, and some (clearly marked) optional material in computer vision.", "iClicker we will use iClicker for occasional in-class polling.", "Mathematical skills: AMATH 242/CS 371 or CS 370 or Linear Algebra 2 (MATH 235/245)", "Comments on Linear Algebra", "Understanding computer vision methods requires certain level of confidence with linear algebra, which is actively used throughout the course.", "CS484 only briefly reviews some critical linear algebraic tools as they become needed, but there is absolutely no time to teach linear algebra on the same level (covering proofs and many basic examples) as it is done in the appropriate math courses.", "Based on observations from the previous years, students who took only one term of introductory linear algebra and do not remember much of it must be ready to commit (possibly substantial) extra time.", "At the same time, computer vision offers highly motivating and intuitive context for learning linear algebra.", "If you plan to take other courses on Data Analysis, AI, or Machine Learning, you will also appretiate stronger linear algebra skills.", "While CS484 covers only the absolutely necessary background in linear algebra, as well as multivariate calculus, some useful external links can be found in \"Math Resources\".", "This course introduces many standard computer vision problems and computational approaches for solving them.", "The context of image analysis also provides an intuitive and stimulating visual environment for developing and understanding numerical algorithms.", "Slides", "In case of substantial changes, the updated slides will be reposted online.", "The posted videos explain all the slides in details, including review of basic background in linear algebra and multi-variate calculus.", "You will be referred to specific relevant sections of these books in class.", "Computer Vision: Algorithms and Applications, 2010.", "Python's linear algebra library \"numpy\" will be widely used in all assignments.", "More details and code samples are posted here.", "This happens naturally as the first half of the course spends more time reviewing background from linear algebra, multi-variate calculus, and statistics.", "Assignments will require submission of code and a report.", "Typical image analysis algorithms produde output (geometric structures, segments, labelings) that can be visualized.", "The drop box remains open for late submissions for a few days past the due date/time of each assignment - TAs record each late day.", "Scholastic offences are taken seriously and students are directed to read the appropriate university policy.", "Assignment 4: low-level segmentation"]}, {"course_id": 29, "course_code": "MATH 127", "course_name": "MATH127 - Calculus 1 for the Sciences (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Functions of a real variable: powers, rational functions, trigonometric, exponential and logarithmic functions, their properties and inverses.", "Intuitive discussion of limits and continuity.", "Definition and interpretation of the derivative, derivatives of elementary functions, derivative rules and applications.", "Fundamental theorems and antiderivatives; change of variable.", "have extensive familiarity with a number of basic but fundamental models that showcase the role of calculus in their respective disciplines.", "have experience describing and interpreting mathematical procedures in precise language (i.e., in complete sentences) within the context of short but formal project reports.", "If you are unable to acquire one of these calculators, you must contact your instructor in the first week or two of the course so an equivalent alternative can be identified and added to the exam proctors' list of permitted aids."]}, {"course_id": 30, "course_code": "MATH 137", "course_name": "MATH137 - Calculus 1 for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "10:30AM - 11:20AM MC 4059", "Monday -", "Monday", "07:00PM - 08:50PM", "Absolute values and inequalities.", "Sequences and their limits.", "Introduction to series.", "Limits of functions and continuity.", "Applications of the Mean Value theorem, Taylor polynomials and Taylor's theorem, Big-O notation.", "We will study these ideas as they relate to sequences and functions.", "First, we will examine sequences and what it means for one to converge.", "Next, we will use our knowledge of sequences to discuss functions, including limits and derivatives.", "Write clear and well-organized mathematical solutions and proofs.", "Solve problems in Calculus through logical thinking and careful analysis.", "Determine if a recursively-defined sequence converges and prove it using mathematical induction.", "Compute the limits of various functions using both the formal definition of the limit, arithmetic rules for limits,and l'Hopital's Rule.", "Find solutions to optimization and related rates problems.", "Sketch curves by first analyzing a given function and its derivatives.", "4: Jan 27 - 31 2.1 - 2.2 Functions and their Limits, Sequential Characterization of Functions, Squeeze Theorem Quiz 3", "7: Mar 3 - 7 3.5 -  3.7 Linear Approximation, Newton's Method, IFT Quiz 6", "8: Mar 10 - 14 3.8 - 4.2 Implicit and Logarithmic Differentiation, Related Rates, Local & Global Extrema, EVT Quiz 7", "9: Mar 17 - 21 \u2021 4.3 - 4.6 MVT and its Applications, Shape of a Function via 1st and 2nd Derivatives Quiz 8", "FE: Mar 31 - Apr 4 4.9 - 4.10 Curve Sketching, Optimization Quiz 10", "Notice of Recording", "Phone: 519-884-0000 extension 213", "Please let us", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 31, "course_code": "MATH 147", "course_name": "MATH147 - Calculus 1 (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["11:30AM - 12:20PM MC 4059", "04:30PM - 05:20PM", "Monday -", "Monday", "07:00PM - 08:50PM", "Introduction to mathematical proofs: Week 1;", "2. Sequences and Limits: Weeks 2 \u2013 4;", "3. Functions and Continuity: Weeks 5\u20138;", "Introduction to Real Analysis, by R. Bartle and D. Sherbert No", "Any missed assignment will be given a score of zero.", "For any missed examination, you must have a valid reason and appropriate supporting documentation.", "In case VIF or STAD covers the midterm, the midterm may be excused, and its weight may be transferred to the final exam."]}, {"course_id": 32, "course_code": "MATH 128", "course_name": "MATH128 - Calculus 2 for the Sciences (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["F. Dunbar", "Instructor: Fiona Dunbar", "Separable and linear first order differential equations and applications.", "Introduction to sequences.", "Parametric/vector representation of curves; particle motion and arc length.", "Polar coordinates in the plane.", "use integration techniques to solve linear first-order equations and improper integrals,", "visualize and approximate higher-order differential equations,", "interpret and derive power series representation of a function,", "use the concept of linear approximation and apply it to Taylor polynomials as well as use techniques for quantifying approximation error,", "understand the relationship between vector-valued functions, polar coordinates, and applications of integration to arc lengths.", "If you are unable to acquire one of these calculators, you must contact your instructor in the first week or two of the course so an equivalent alternative can be identified and added to the exam proctors' list of permitted aids.", "This course includes the independent development and practice of specific skills, such as integration techniques, visualizing/approximating higher-order differential equations, deriving power series, linear approximation and applying to Taylor polynomials, using vector-valued functions, polar coordinates, and applications of integration to arc lengths.", "Library for research-based assignments"]}, {"course_id": 33, "course_code": "MATH 138", "course_name": "MATH138 - Calculus 2 for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "08:30AM - 09:20AM", "09:30AM - 10:20AM MC 4059", "10:30AM - 11:20AM MC 4061", "E. Bembenek", "11:30AM - 12:20PM MC 4021", "cpthowel@uwaterloo.ca", "E. Yalcin", "02:30PM - 03:20PM", "08:30AM - 09:20AM QNC 2502", "Introduction to the Riemann integral and approximations.", "Antiderivatives and the fundamental theorem of calculus.", "Applications of the integral.", "Improper integrals.", "Linear and separable differential equations and applications.", "Binomial series, functions defined as power series and Taylor series.", "The goal of this course is to further expand your knowledge of calculus and its applications for one-variable functions.", "First, we will explore areas under curves and the Fundamental Theorem of Calculus, integration techniques, and applications of integration including finding the area between two curves, volumes of solids of revolution, and the average value of a function.", "We will study how to solve separable differential equations and linear differential equations as well as their applications to population growth and Newton's Law of Cooling.", "Write clear and well-organized mathematical solutions and proofs.", "Solve problems in Calculus through logical thinking and careful analysis.", "Set up and evaluate Riemann integrals for simple functions", "Apply various integration techniques including change of variable, integration by parts, trigonometric substitution, and partial fractions.", "Solve separable and first-order linear differential equations.", "Compute the radius and interval of convergence for power series.", "Compute Taylor Polynomials and Taylor series for many elementary functions.", "1: Jan 6 - 10 1.1 - 1.3 Riemann Sums, Definite Integrals, Average Value", "5: Feb 3 - 7 2.1 - 2.2.2, 2.3 Intro to DEs, Direction Fields, Separable and First-Order Linear DEs Quiz 4", "8: Mar 10 - 14 4.1 - 4.3 Intro to Power Series, Differentiation & Integration of Power Series Quiz 7", "FE: Mar 31 - Apr 4 4.8 Big-O Notation Quiz 10", "Notice of Recording", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}]