[{"course_id": 39, "course_code": "CS 447", "course_name": "CS447 - Software Testing, Quality Assurance, and Maintenance (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 14, "major_name": "Software Engineering Specialization", "topics": ["Notice of Recording", "04:00PM - 05:20PM", "Weiyi Shang <wshang@uwaterloo.ca>", "Introduces students to systematic testing of software systems.", "ECE 453: View requirements for ECE 453", "Organized testing can help identify problems in software systems, enabling developers to fix these problems.", "And easier-to-test software is better software.", "\u2022 You will be able to create and evaluate test suites for reasonably-sized software systems.", "\u2022 You will learn how to effectively test during the software engineering process.", "Creating tests", "Test minimization", "Week 12 March 27th Field testing", "Late policy: every person can have a late (max 24 hours) deliverable once", "Notice of Recording"]}, {"course_id": 0, "course_code": "CS 136L", "course_name": "CS136L - Tools and Techniques for Software Development (0.25)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Tools and Techniques for Software Development Winter 2025", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 3003", "E. Ciklabakkal", "E. Ciklabakkal", "08:30AM - 10:20AM MC 4042", "E. Ciklabakkal", "10:30AM - 12:20PM MC 4042", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 4060", "02:30PM - 04:20PM MC 4060", "E. Ciklabakkal", "10:30AM - 12:20PM MC 3003", "This course introduces students to tools and techniques useful in the software development lifecycle.", "Students learn to navigate and leverage commands and utilities in the Linux Command Line Shell.", "Students gain experience in version control software, writing scripts to automate tasks, and creating effective test cases to identify bugs.", "Students also gain experience in using built-in support for version control, testing, debugging, build automation, etc. in integrated development environments (IDEs).", "Interact with the Linux Operating System using a command line shell and gain familiarity with commands, utilities and tools.", "Create scripts to automate tasks and increase productivity while working on a software project.", "Design test cases and automate the testing process to check a program for functional correctness and incorrect memory usage.", "Use version control systems to share, contribute, manage and track code.", "Separately compile code modules and leverage build automation tools to do so efficiently.", "Module 0: Linux Shell, a first look", "Module 2: Testing and Debugging", "Module 9: Debugging", "Each lab consists of a number of lab problems.", "Each lab problem has two associated values, a lower one called the pass threshold and a higher one called the completion threshold.", "Special note on test cases: if a lab question asks you to submit test cases, you must create these tests yourself.", "Do not directly copy code from GenAI.", "Do not ask GenAI for a step-by-step breakdown of how to solve a lab problem.", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 1, "course_code": "CS 341", "course_name": "CS341 - Algorithms (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Algorithms Winter 2025", "10:00AM - 11:20AM MC 4061", "08:30AM - 09:50AM MC 1056", "The study of efficient algorithms and effective algorithm design techniques.", "Topics include divide and conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph search and backtrack, problems without algorithms, NP-completeness and its implications.", "DPV", "Introduction to Algorithms, by Cormen, Leiserson, Rivest and Stein, MIT Press.", "describe the main idea first,", "Extensions and Other Accommodations on Assignments", "Students can currently self-declare two kinds of absences on Quest: short-term absence and pandemic-related absence.", "Since a short-term absence lasts 2 days, this means the only accommodation we offer for a short-term absence is a 48 hour extension.", "If you request accommodations through AccessAbility Services (AAS) by filling out a Missed Course Component form, the accommodation is determined on a case-by-case basis through consultation with AAS, but will generally be one of the above options unless your situation is unusual.", "If you collaborate with others, you must clearly indicate the collaboration for each problem.", "This is not a software engineering course; we will not test your code against inputs that do not match our specifications.", "Continuity Plan", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 4, "course_code": "CS 451", "course_name": "CS451 - Data-Intensive Distributed Computing (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Data-Intensive Distributed Computing Winter 2025", "10:00AM - 11:20AM MC 2017", "RCH 307", "10:00AM - 11:20AM MC 2017", "RCH 307", "Introduces students to infrastructure for data-intensive computing, with a focus on abstractions, frameworks, and algorithms that allow developers to distribute computations across many machines.", "Topics include core concepts (partitioning, replication, locality, consistency), computational models (MapReduce, dataflows, stream processing, bulk-synchronous parallel), and applications.", "Explain the key concepts in distributed big data projects", "Write clean and efficient Hadoop MapReduce and Spark code", "Understand and design distributed algorithms for the analysis of textual, graph, and relational data", "Explain the design issues involved with distributed relational and non-relational database systems such as Apache HBase / Google BigTable", "Introduction to Distributed Text Processing 1", "Introduction to Hadoop MapReduce 3", "Introduction to Apache Spark 3", "Distributed Database Systems 3", "This course includes the independent development and practice of specific skills, such as designing MapReduce and Spark code.", "Library for research-based assignments"]}, {"course_id": 6, "course_code": "STAT 331", "course_name": "STAT331 - Applied Linear Models (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "Applied Linear Models Winter 2025", "08:30AM - 09:50AM MC 4020", "02:30PM - 03:20PM", "RCH 101", "Thursdays from 3:00-4:00pm in M3 3021", "Modelling the relationship between a response variable and several explanatory variables (an output-input system) via regression models.", "Model diagnostics and improvement.", "Algorithms for variable selection.", "Review of basic Normal theory, t, chi-squared, and F distributions.", "Simple linear regression.", "Analysis of variance.", "Multiple linear regression, variable selection techniques, indicator variables, diagnostics.", "Brief introduction to non-linear regression, factorial experimentation.", "Registered students can enroll in the class discussion board through Piazza.", "Search for your question first before posting.", "Do not expect a full solution to your question.", "To help maintain a safe, respectful, and productive community in which we \u2013 students and teaching team alike \u2013 can take risks in our learning/teaching, tackle challenging concepts, and ultimately grow as learners, we should endeavor to follow these mutual expectations:", "Explain the main concepts of linear regression models.", "Understand the methods of least squares and maximum likelihood estimation for model parameters.", "Interpret the model and its parameters (e.g., regression coefficients) in the context of any application.", "Draw inferences from a fitted model about the parameters of interest and make predictions.", "Apply the previous two outcomes when fitting linear models to real data using R.", "Assess model quality by diagnosing violations in underlying model assumptions (and identify strategies for improvement).", "Evaluate competing fitted models built using various model selection methods (and choose between them).", "Introduction", "The Straight Line Model", "Model formulation and interpretation", "Least squares estimation", "Mean response and residual variance estimation", "Introduction to R/RStudio", "Maximum likelihood estimation", "Estimators and their properties", "Important distributions", "Distributions of estimators", "Confidence intervals", "O - Ch. 2-4", "Straight Line Model in R", "Prediction intervals", "Intervals in R", "Hypothesis testing", "O - Ch. 4-5", "ANOVA and F test", "Model limits", "Data transformations", "O - Ch. 4-6", "O - Ch. 7", "A1 and Q1 Solutions", "Multivariate normal distribution", "The Linear Model", "Examples", "O - Ch. 8-9", "Estimation", "Estimators and their properties", "Distributions of estimators", "O - Ch. 9, 11, 12", "ANOVA and F test", "Significance tests", "General linear hypothesis", "O - Ch. 9, 11, 12", "A2 and Midterm Solutions", "Case Study: South African heart disease", "Nested models", "Additional sum of squares", "O - Ch. 12", "Outliers", "O - Ch. 13-14", "Influence", "O - Ch. 14-15", "A3 and Q2 Solutions", "One-variable-at-a-time selection methods", "Criteria-based selection methods", "O - Ch. 16", "This learning consists mostly of making sure you understand the concepts and steps that were used in class to solve problems and then solve exercises from the textbook on your own.", "Introduction to Regression Modeling by Abraham and Ledolter This textbook is an optional reference book (available for free on LEARN).", "R and R-Studio Free software.", "To serve as an opportunity to demonstrate your understanding, application, and integration of the course material, including practical application of the skills/concepts with the statistical software, R.", "Missed Assignment: The time window to complete these assessments are generous and, in general, a sickness lasting a couple of days will not be enough of a reason to ask for alternative accommodations and/or extension.", "Tips for Success", "Students should critically compare their work with available solutions and against the solutions of fellow classmates.", "Notice of Recording", "To help you decide if you should isolate, you can use the provincial self-assessment tool.", "In the scenario where we must transition back online the following contingencies will be used:", "These materials are made available for the personal use of students registered in the current offering of this course.", "Students may not distribute or reproduce these materials for commercial or non-commercial means.", "In particular:", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as mathematical proofs and the fitting, interpretation, and assessment of linear models in real applications.", "Library for research-based assignments"]}, {"course_id": 7, "course_code": "STAT 341", "course_name": "STAT341 - Computational Statistics and Data Analysis (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Computational Statistics and Data Analysis Winter 2025", "04:00PM - 05:20PM", "10:00AM - 11:20AM EIT 1015", "04:30PM - 05:20PM", "Megan French", "Daniel Zhang", "While personal matters can be communicated via email, Piazza should be the primary platform for Q&A outside of class.", "A computationally focused approach to statistical reasoning in the context of real data.", "Functional programming in R and algorithms will be used to define interesting attributes of finite populations and their sampling characteristics.", "Understand the fundamentals of population-based statistical analyses, as well as implicitly/explicitly defined population attributes", "Understand the basics of sampling and the underlying ideas/mechanisms of probability sampling and related issues", "Understand the basics of inductive inference including target and study populations, measurements, comparing subpopulations, random intervals and coverage probabilities, and resampling methods such as bootstrap", "Generate high-quality visualization and inferential statistics R output for the topics above", "Prepare reports that communicate your statistical analyses using LaTeX and R Markdown.", "Jan. 6 Introduction to the course", "location and scale invariance/equivariance", "Power transformations and linear relationships", "Implicitly defined Attributes", "Solving system of equations Assignment #1", "Iteratively re-weighted least-squares", "Sampling mechanisms and inclusion probabilities", "Sampling design", "9. Mar. 3 Anatomy of tests of significance", "A t-like discrepancy measure  Assignment #2", "Mar. 10 Multiple testing", "Student-t-based intervals", "Mar. 17  Introduction to resampling methods", "Bootstrap in regression", "Multiple samples and prediction", "Decomposition of APSE, bias-variance trade-off", "Training and Test sets", "K-fold cross validation Assignment #3", "Each folder will contain five files, e.g. for section 2.1-", "There will be a 2.5-hour, closed book, cumulative final exam during the Final Examination Period: April 9 \u2013 April 25.", "An INC grade is rarely granted and will be considered on a case-by-case basis, with decisions based largely on your performance throughout the semester.", "Self-Declared COVID-19 Related Absences: You may self-declare one absence per term during the formal lecture period for influenza-like illnesses.", "Course Software: R is a language and a free statistical computing and graphics software that we will use extensively throughout the course.", "The only time you may run into trouble is if you call a function from a package to handle a task you have been asked to code out explicitly.", "For example, if you are asked to code a function that calculates the mean of a vector in R, and your solution is to just call the function mean(), then you will not receive any marks.", "Communication: When you email your instructor, make sure you include the following information in your email:", "Including non-English characters in your email (sometimes imposed by installing a non-English operating system) prompts UW servers to spam your emails for the instructor.", "These characters most often appear in (not exclusively) the subject line, From, To, and Date/Time portions of previous communications if you reply to an email.", "You must use the web-based email platform if you suspect that you have non-English characters in your emails imposed by your computer, phone, tablet, etc.", "This course includes the independent development and practice of specific skills related to computational statistics and data analysis.", "Phone: 519-884-0000 extension 213"]}, {"course_id": 9, "course_code": "CS 135", "course_name": "CS135 - Designing Functional Programs (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Designing Functional Programs Winter 2025", "Monday -", "Monday", "07:00PM - 08:50PM", "08:30AM - 09:20AM", "10:30AM - 11:20AM MC 2034", "Charlie Clarke", "Email: claclark@uwaterloo.ca", "Karen Anderson", "Email: kaanders@uwaterloo.ca", "Email: dbwolff@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Sara Nayar", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "CS135 Problem-solving FAQ", "Assignment Marking Error: Submit a re-mark request, due within one week of release of marks.", "Read Me First", "We hope to guide you through a carefully designed curriculum that introduces you to core concepts in computer science.", "In a typical week, you will move through the following activities:", "You should get a feel for what information is where so you can find it quickly in the future.", "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming.", "Syntax and semantics of a functional programming language.", "Linear and nonlinear data structures.", "Abstraction and encapsulation.", "CS 135 Designing Functional Programs", "CS 135 is for students who would prefer a more conceptual treatment of introductory computer science in a simple language that is educationally effective but not commercially relevant.", "Hardware and Software", "Student labs are equipped with the DrRacket integrated development environment running on networked personal computers.", "References", "How To Design Programs by Felleisen, Findler, Flatt, and Krishnamurthi, MIT Press, 2003.", "Definition of lists, designing functions to process and produce lists, recursive definition of natural numbers, recursive data definitions.", "Non-Linear Structures (6 hours)", "Multi-clausal recursive data definitions, trees, mutually referential data definitions, design methods for complex data, iterative refinement, multiplexing.", "Early development of electronic computers and programming languages.", "History of concepts covered in this course.", "have understanding and experience with the topics in the course outline above", "Drop deadline 25", "Reading Week Starts", "Slides Description", "L01 Values and expressions Prefix notation, exact numbers, Boolean expressions, constants", "L04 Lists List values and expressions, composite data, data definitions", "iClicker pilot", "2024-08-26: CS135 is participating in a pilot comparison of iClicker and Vevox.", "The iClicker subscription should be free.", "iClicker Account", "Racket and DrRacket", "It is also simple and clean enough that we cover computer science content many CS students do not see until later in their CS careers.", "If you submit code written under some other system and it does not work in our currently-supported version of DrRacket, then we consider that code incorrect even if it works for you at home.", "Your work in CS135 will be assessed in a variety of ways.", "Coverage", "Using such off-limits material generally results in a significant loss of marks.", "In general, the basic tests will try to warn you if inappropriate functions and special forms are used.", "Submitting a partially completed solution is a good idea, just in case you don\u2019t get back to it before the due date and to serve as a backup in case your computer breaks or is stolen.", "Email Karen Anderson .", "Email the ISAs and ask them to \u201cmark it for feedback\u201d.", "Testing", "We do several kinds of testing on your submissions:", "Basic tests", "Each time you submit before the due date, we run a set of \u201cbasic tests\u201d on your submission.", "It\u2019s amazing how many fatal errors can appear during last-minute tidying up!", "Do not make your last submission immediately before the deadline \u2013 it gives you no time to check the Basic Test results and respond, if needed.", "The numeric mark appearing on the basic test marksheet is only for guidance.", "After the submission deadline we run a second set of tests to assess your code, including:", "These post-deadline tests and hand-marking form your mark for the assignment.", "If you procrastinate long enough, this rule can easily cause you to fail the course.", "We won\u2019t rehash the above policies, but we do want to make them concrete for CS135.", "A specific assignment may give exceptions to the above.", "You are welcome to use these tools to help you understand the course material, but you should not:", "cut-and-paste your assignment code into them for debugging assistance.", "Also, these tools will not be available when you write the exam, so you need to understand how to solve these problems yourself in order to pass the course.", "attempting to run malicious code during the submission or marking process."]}, {"course_id": 12, "course_code": "CS 146", "course_name": "CS146 - Elementary Algorithm Design and Data Abstraction (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Elementary Algorithm Design and Data Abstraction (Advanced Level)", "Monday -", "Monday", "07:00PM - 08:50PM", "02:30PM - 03:20PM", "Brad In-person MC 6427", "On-line Consulting Hours: Microsoft Teams", "CS 146: Elementary Algorithm Design and Data Abstraction (advanced version)", "To familiarize students with key concepts in introductory computer science from an imperative perspective and to contrast this with the functional perspective taken in CS 145;", "To allow students to complete the CS portion of their Math core requirements and, if desired, to continue on to second-year core courses in CS;", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "Introduction to C and elementary mutation in Scheme", "The memory model.", "Variable declaration, assignment and infix expressions in C. Basic I/O in C. Compilation.", "Algorithm analysis in C. File I/O in C and Scheme.", "Program organization and testing methods.", "Space analysis in C and Scheme.", "Mutable lists, queues, deques, and trees in C. Time-space tradeoffs among mutable and immutable ADT implementations.", "Low-level abstractions", "Pointer arithmetic in C. Arrays in C and vectors in Scheme.", "Strings in C. Elementary hashing.", "Libraries in C and Scheme.", "Implementing high-level abstractions", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "The provided slides are not a substitute for attendance in any first-year CS course, but in CS 146, there are no slides, and the lecture summaries made available after lecture are an even worse substitute for attendance.", "Lectures will involve the development of ideas summarized very tersely in the handouts, as well as on-the-fly development of code, analyses, and proofs.", "CS145 and CS146 were originally designed as a year-long unit of curriculum, but eventually the individual courses drifted in their own directions.", "1.1 A note on logistics", "1.2 Review of forms of recursion and associated proof techniques", "1.3 In preparation for side effects", "1.4 Output", "1.5 Input", "1.6 First Introduction to C", "1.8 Memoization", "1.9 Mutation in C", "1.11 Boxes in C", "1.12 Advanced mutation", "1.13 Aliasing in C", "1.14 Memory and vectors", "1.15 Vectors in Racket", "1.16 Arrays in C", "1.18 ADTs in C; Amortized Analysis", "2 SIMPL: a simple imperative language", "2.1 Syntax and informal semantics", "2.2 Examples in several languages", "2.3 Formal semantics", "2.5 Proving imperative programs correct", "A primitive imperative language", "3.1 A primitive imperative language", "3.2 The PRIMPL simulator", "3.4 The SIMPL to A-PRIMPL compiler", "3.6 Strings in C", "3.7 Adding functions to SIMPL", "3.8 Adding both arrays and functions to SIMPL", "3.9 Implementing lists in PRIMPL", "4 MMIX: a realistic instruction set", "4.1 A more realistic processor", "4.2 The MMIX architecture", "4.2.1 Branches and Jumps", "4.2.2 Example", "4.2.3 Software Interrupts", "4.2.5 A Problem with Branches and Jumps", "4.4 Towards a SIMPL to MMIX compiler", "5.1 Storing primitive values", "5.3 Managing memory", "5.4 Structural and pointer equality", "5.5 Function application in a Racket interpreter", "5.7 Justifying the cost of Racket primitives", "5.8 Moving towards implementation in an imperative language", "6.2 Zippers", "6.3 A continuation-passing interpreter", "6.6.2 Mark-and-sweep", "6.6.3 Copying garbage collection", "6.7 Heterogeneous Data in C", "6.8 Multidimensional Arrays in C", "6.10 Variable-length Argument Lists", "7.1 Continuation-passing style", "7.2 Exception handling", "7.3 Undelimited continuations", "7.4 Delimited continuations", "7.5 Racket\u2019s implementation of continuations", "In CS 146, we will examine the imperative paradigm, and compare and contrast the way that efficient algorithms and data structures are designed in imperative and functional languages.", "Racket is a laboratory for current research on aspects of functional programming languages, and we will continue to look at interesting topics in this area, perhaps at the cost of some coherency in the flow of material.", "They will not be due each week on the same day, as is common in the other first-year CS courses and the first-year Math courses.", "Assignment questions are the main way to reinforce and deepen your understanding of the concepts and skills discussed in lecture.", "You will submit program files electronically to the Marmoset system , which runs tests on your code and informs you of the results fairly rapidly.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "(Please also note that we may use the trends in a student's submission history to estimate the likelihood of other forms of cheating as well.)", "Library for research-based assignments"]}, {"course_id": 13, "course_code": "CS 240", "course_name": "CS240 - Data Structures and Data Management (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Data Structures and Data Management Winter 2025", "10:00AM - 11:20AM RCH 112", "11:30AM -", "10:30AM - 11:20AM MC 4040", "11:30AM - 12:20PM MC 4040", "Email: oveksler@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "All of Tom's consulting hours are in-person in MC 4065.", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Instructional Support Coordinator: Karen Anderson", "Email: kaanders@uwaterloo.ca", "Introduction to widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms.", "CS 240: Data Structures and Data Management", "This course introduces widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms.", "Analyze, apply, and use various data structures and data-management techniques in a variety of applications", "Perform rigorous complexity analyses of simple algorithms and data structures, which includes writing correct mathematical proofs on inductively-defined structures and solving simple recurrence relations", "Select a good data structure to solve a specific algorithmic problem", "Apply data structures correctly and efficiently in one or more high-level programming languages, including C++", "Audience", "Successors: Most third-year CS major courses", "Conflicts: Other courses that seriously consider efficiency and correctness of fundamental data structures and their algorithms", "Analytical:", "Define and explain order notation; perform complexity analyses of simple algorithms", "Perform basic computations of discrete probability and expectation", "Use mathematical induction on recursively defined structures, including finding simple errors in inductive arguments", "Prove simple properties of program fragments correct through the use of pre-conditions and post-conditions for loops and recursive calls", "Computational and algorithmic:", "Design, implement, test, and debug C++ programs to solve problems requiring hundreds of lines of code", "Define the ADTs for stacks and queues; write efficient implementations in C/C++", "Describe tree structures, including binary search trees and multi-way trees; use these structures in C/C++ programs", "Describe basic sorting algorithms (including Quicksort) and implement them in C/C++", "Perform rigorous asymptotic analyses of simple algorithms and express the result using order notation; compare algorithms based on their asymptotic complexity; and prove formal results involving order notation", "Apply the priority-queue ADT to solve various application problems, implement a priority queue using heaps, and analyze the complexity of common implementations of heap operations", "Develop best-, worst- and average-case analyses of sorting algorithms, including Quicksort, and explain the ramifications of these analyses in practice; explain the basic principles of randomized algorithms and their potential advantages, specifically in the case of Quicksort; explain the difference between comparison-based sorting and non-comparison-based sorting algorithms, and when and why the latter may run faster; and apply sorting-based techniques to algorithmic problems, such as elimination of duplicates", "Explain the advantages and disadvantages of various hashing techniques; identify the best hashing techniques to use in a particular application scenario; and recognize when hashing techniques are preferable to other dictionary implementations", "Design data structures for real-world data (where keys are often inherently multidimensional) in such a way that common operations (including range search) can be implemented efficiently", "Design special data structures that can efficiently store and process words and strings, and select and apply a suitable technique for data compression in a specific application scenario", "Introduction and review (3 hours)", "Basic computer model: the random-access machine", "Runtime of an algorithm: worst-case, best-case, and average-case", "Review of stacks and queues", "Priority queue ADT and simple implementations", "Sorting and analysis of randomized algorithms (5 hours)", "Quicksort (non-randomized): worst-case, best-case, and average-case complexity", "Randomized quicksort and its analysis; application to selection and its analysis", "Lower bound on comparison-based sorting", "Non-comparison-based sorting algorithms (e.g., Counting Sort and Radix Sort)", "Dictionary ADT and simple implementations", "Binary search trees (insert and delete operations and analysis)", "Key-indexed search, simple hash functions", "Range search in a binary search tree", "Algorithms and data structures for text processing (8 hours)", "Sometimes these include animations/overlays, in case of which there will be both a Display version (with them) and a Print version (omitting them, but otherwise the same content).", "The slides for each module will be posted as the term progresses.", "Module 1 Introduction and Asymptotic Analysis M1.pdf", "Module 3 Sorting, Average-Case and Randomized Algorithms M3.pdf", "Optional: Goodrich & Tamassia   8.3", "Module 8 Range-Searching in Dictionaries of Points   Course notes Chapter 8", "A0.tex", "A1.tex", "The following books are on reserve in the DC library for reference and additional resources:", "Algorithm Design and Applications (2015)", "Also covers cuckoo hashing.", "Sedgewick] Algorithms in C++, Third Edition (1998)", "Computational Geometry: Algorithms and Applications", "CLRS] Introduction to Algorithms, 2nd edition (2001)", "Introduction to Algorithms, 2nd edition is also avaliable online (in campus).", "This website will be the primary means of communication and distribution of materials for the course.", "The course uses a number of different tools for distributing information and receiving submissions.", "These are not worth credit, but may help you in self-testing your understanding of the material.", "Only one programming question can be shifted to the final exam.", "If more than this has verification for non-submittal, then it will be considered on a case-by-case basis.", "A student with a medical reason may not be granted an INC because they have not performed sufficiently well during the academic term.", "An INC will be granted ONLY if there is a strong reason for missing the exam (generally a serious medical issue verified by a doctor's note) AND a satisfactory performance during the term (both assignments and midterm).", "Academic Dishonesty", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "The first criterion for marking is the correctness, the second criterion is efficiency.", "describe the main idea first in words,", "In the case that you are using facts stated in lectures/modules, be sure to cite where you got them from.)", "Files should be named .cpp, where the specific file name will be specified in the assignment.", "You should include sufficiently many comments in your code that the main ideas of design and correctness are clear.", "One-line changes: In the case you passed the public test, and failed some secret tests, if your program works with a one line change, then we may accept it for remarking and give some marks after deducting a penalty (typically 10-20% of the programming question).", "Here are some ways to create PDF files:", "Create your solution in LaTeX. LaTeX is a document preparation system that uses a mark-up language to write/create and co-ordinate different parts of documents, including diagrams and was introduced in Assignment 0.", "The following are least preferred methods since the results may be hard for markers to read and/or the files may be too large.", "Submitting a Re-Mark Request: Please email cs240@uwaterloo.ca in order to submit a request.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 18, "course_code": "CS 245E", "course_name": "CS245E - Logic and Computation (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["10:00AM - 11:20AM MC 2034", "Tuesday -", "This includes:", "Basic sematic notions:", "Truth tables", "A formal proof system for Propositional logic", "Soundness and completeness theorems for the proof system", "Basic sematic notions", "Structures for a vocabulary", "Logical truths and logical implications", "Translations between FOL formulas and English and mathematical statements.", "A formal proof system for Predicate logic", "Soundness theorem for the proof system", "However, the focus of this version of the course is more on fundamental and mathematical concepts (on the expense of developing technical skills, such as designing formal proofs).", "We will use propositional logic as a main tool for demonstration key logical concepts such as", "Structural induction its justification and many applications.", "soundness and completeness theorems", "the expressive power of the logic (what can and what cannot be expressed).", "We will revisit these topics for first order logic.", "Finally, we will discuss applications of logic to computer science, in particular showing limitations of computations (undesirability)."]}, {"course_id": 19, "course_code": "CS 246", "course_name": "CS246 - Object-Oriented Software Development (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Object-Oriented Software Development Winter 2025", "10:00AM - 11:20AM MC 1056", "10:30AM - 11:20AM MC 3003", "11:30AM - 12:20PM MC 3003", "Tuesday -", "Ross Evans rpevans@uwaterloo.ca", "Introduction to object-oriented programming and to tools and techniques for software development.", "Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites.", "This course introduces students to object-oriented programming in C++ to facilitate designing, coding, debugging, testing, and documenting medium-sized programs.", "Students learn to read a specification and design software to implement it.", "Important skills are selecting appropriate data structures and control structures, writing reusable code, reusing existing code, understanding basic performance issues, developing debugging skills, and learning to test a program.", "C++", "Introduction to C++", "I/O and Strings", "Basic language constructs and Functions", "Exceptions", "Introduction to Templates", "Exception safety", "Template functions and algorithms", "Object-Oriented Programming", "UML class models", "Constructors and Destructors", "Encapsulation", "Inheritance", "Design patterns: Iterator, Observer, Decorator, Factory method, Template method, Non-virtual interface (NVI), and the Pimpl idiom", "Inheritance: vtables", "Multiple inheritance", "Design quality", "MVC (model-view-controller) architecture", "Design, implement, test, and debug C++ programs to solve problems requiring hundreds of lines of code, making appropriate use of", "types, variables, arrays, strings, and dynamic memory; loops, conditionals, and other control structures; structures, unions, and enumerations; procedures and functions; the preprocessor; formatted and unformatted I/O", "a subset of the STL, including vector, list, and map", "assertions and exceptions", "test suites for regression testing, white and black box testing", "structured programming, incremental development", "interface design, abstractions, information hiding, cohesion and coupling", "a subset of UML to specify classes, objects and relationships among them", "a selection of design patterns", "Explain the following properties of the memory model used in C++, including their impact on time and space efficiency when designing code: bytes vs. words, memory as an array, run-time stack and stack frames, memory allocation on the heap vs. automatic allocation on the stack, pointers as memory addresses, the representation of objects in memory", "You must complete A0 in order to receive marks for the rest of the course.", "A1 Basic C++ Monday, January 20 Monday, January 27 5", "A2 Introduction to OOP Monday, February 3 Monday, February 10 6", "A4 Design Patterns Monday, March 10 Monday, March 17 8", "Note: Marmoset is not a compiler!", "Do not submit C++ code to Marmoset, without first attempting to compile it yourself.", "Students from different sections can be in the same group.", "Working on a group is an important learning experience for software development in a team.", "Students in a group will be responsible for forming and managing the group.", "Please be very careful in selecting your group as there are always groups that end up having major issues every term.", "Exams", "Examination Date Final Grade Weight", "Each weekly set of problems completed succesfully can be used to replace 0.5% of the final grade from the final exam.", "In the case where both a midterm and final exam can be held, the final course grade will be calculated from the following components and weights:", "To pass the course, you must satisfy these three conditions:", "A grade of at least 45% on the weighted average of assignments A1-A4", "Assignments1to4  = (A1*5 + A2*6 + A3*6 + A4*8) / 25", "Normal = A1*5 + A2*6 + A3*6 + A4*8 + A5*15 + Midterm*20 + Final*(40-0.5*TutorialsCompleted) + 0.5*TutorialsCompleted", "if (MidtermInPerson==TRUE && FinalInPerson==TRUE)", "else", "if (MidtermInPerson==FALSE && FinalInPerson==TRUE)", "else", "if (MidtermInPerson==TRUE && FinalInPerson==FALSE)", "else", "if (MidtermInPerson==FALSE && FinalInPerson==FALSE)", "else", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments"]}, {"course_id": 32, "course_code": "MATH 128", "course_name": "MATH128 - Calculus 2 for the Sciences (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["F. Dunbar", "Instructor: Fiona Dunbar", "Separable and linear first order differential equations and applications.", "Introduction to sequences.", "Parametric/vector representation of curves; particle motion and arc length.", "Polar coordinates in the plane.", "use integration techniques to solve linear first-order equations and improper integrals,", "visualize and approximate higher-order differential equations,", "interpret and derive power series representation of a function,", "use the concept of linear approximation and apply it to Taylor polynomials as well as use techniques for quantifying approximation error,", "understand the relationship between vector-valued functions, polar coordinates, and applications of integration to arc lengths.", "If you are unable to acquire one of these calculators, you must contact your instructor in the first week or two of the course so an equivalent alternative can be identified and added to the exam proctors' list of permitted aids.", "This course includes the independent development and practice of specific skills, such as integration techniques, visualizing/approximating higher-order differential equations, deriving power series, linear approximation and applying to Taylor polynomials, using vector-valued functions, polar coordinates, and applications of integration to arc lengths.", "Library for research-based assignments"]}, {"course_id": 33, "course_code": "MATH 138", "course_name": "MATH138 - Calculus 2 for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "08:30AM - 09:20AM", "09:30AM - 10:20AM MC 4059", "10:30AM - 11:20AM MC 4061", "E. Bembenek", "11:30AM - 12:20PM MC 4021", "cpthowel@uwaterloo.ca", "E. Yalcin", "02:30PM - 03:20PM", "08:30AM - 09:20AM QNC 2502", "Introduction to the Riemann integral and approximations.", "Antiderivatives and the fundamental theorem of calculus.", "Applications of the integral.", "Improper integrals.", "Linear and separable differential equations and applications.", "Binomial series, functions defined as power series and Taylor series.", "The goal of this course is to further expand your knowledge of calculus and its applications for one-variable functions.", "First, we will explore areas under curves and the Fundamental Theorem of Calculus, integration techniques, and applications of integration including finding the area between two curves, volumes of solids of revolution, and the average value of a function.", "We will study how to solve separable differential equations and linear differential equations as well as their applications to population growth and Newton's Law of Cooling.", "Write clear and well-organized mathematical solutions and proofs.", "Solve problems in Calculus through logical thinking and careful analysis.", "Set up and evaluate Riemann integrals for simple functions", "Apply various integration techniques including change of variable, integration by parts, trigonometric substitution, and partial fractions.", "Solve separable and first-order linear differential equations.", "Compute the radius and interval of convergence for power series.", "Compute Taylor Polynomials and Taylor series for many elementary functions.", "1: Jan 6 - 10 1.1 - 1.3 Riemann Sums, Definite Integrals, Average Value", "5: Feb 3 - 7 2.1 - 2.2.2, 2.3 Intro to DEs, Direction Fields, Separable and First-Order Linear DEs Quiz 4", "8: Mar 10 - 14 4.1 - 4.3 Intro to Power Series, Differentiation & Integration of Power Series Quiz 7", "FE: Mar 31 - Apr 4 4.8 Big-O Notation Quiz 10", "Notice of Recording", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 34, "course_code": "MATH 148", "course_name": "MATH148 - Calculus 2 (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["08:30AM - 09:20AM", "Instructor: Michael Brannan", "E-mail: michael.brannan@uwaterloo.ca", "Week of", "3 Jan. 20 Fundamental Theorem of Calculus  A1", "4 Jan. 27 Techniques of Integration  A2", "5 Feb. 3 More Techniques and Improper Integration", "6 Feb. 10 Applications of Integration A3", "8 Mar. 3 Convergence Tests A4", "10 Mar 17 Sequences and Series of Functions A5", "11 Mar. 24 Power Series", "12 Mar. 31 Differential Equations A6", "Principles of Mathematical Analysis."]}, {"course_id": 41, "course_code": "MATH 237", "course_name": "MATH237 - Calculus 3 for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["The gradient vector and the directional derivative.", "Multiple integrals in various co-ordinate systems.", "Choose appropriate techniques from differential multivariable calculus to solve optimization problems both with and without constraints.", "Choose appropriate coordinate systems, build linear mappings, and apply the Change of Variable Theorem to evaluate double and triple integrals.", "Unit 1: Graphs of Scalar Functions", "Unit 3: Continuous Functions", "Week 3 Unit 4: The Linear Approximation and Partial Derivatives MA Unit 4", "Unit 7: Directional Derivatives and the Gradient Vector", "Unit 11: Coordinate Systems", "Unit 13: Jacobians and Inverse Mappings", "Beyond this, no extensions will be given without a timely and documented justified cause, including opportunely and officially reporting absences to the university.", "Communication Etiquette", "Avoiding Academic Offences", "If you are unable to acquire one of these calculators, you must contact your instructor in the first week or two of the course so an equivalent alternative can be identified and added to the exam proctors' list of permitted aids.", "This course includes the independent development and practice of specific skills, such as: analyze functions of two or more variables with respect to limits, continuity, differentiability, and linear approximation; choose appropriate techniques from differential multivariable calculus to solve optimization problems; choose appropriate coordinate systems, build linear mappings, and apply the Change of Variable Theorem to evaluate double and triple integrals.", "Library for research-based assignments"]}, {"course_id": 43, "course_code": "MATH 239", "course_name": "MATH239 - Introduction to Combinatorics (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Introduction to Combinatorics Winter 2025", "11:30AM - 12:20PM MC 4059", "09:30AM - 10:20AM MC 4021", "P. Nelson", "08:30AM - 09:20AM QNC 1502", "S. Pfannerer-Mittas", "10:30AM - 11:20AM MC 4058", "11:30AM - 12:20PM MC 4058", "09:30AM - 10:20AM MC 4042", "02:30PM - 03:20PM", "10:30AM - 11:20AM PHY 150", "04:30PM - 05:20PM", "You should have no reason to contact them directly, but you can find their email addresses through Learn.", "First name Last name", "Guilherme Zeus Dantas E Moura", "Theodore Morrison", "Matthew Kroeker", "Introduction to graph theory: colourings, matchings, connectivity, planarity.", "Introduction to combinatorial analysis: generating series, recurrence relations, binary strings, plane trees.", "MATH 239 is an introduction to combinatorics with a particular focus on counting techniques and graph theory.", "extract coefficients from rational generating series", "find maximum matchings in bipartite graphs", "understand and use the concepts of paths, cycles, trees, bipartiteness, and planarity in graph theory", "be comfortable writing proofs for results on discrete objects", "2 Jan 13,15,17 Generating series, Sum and Product lemmas, Negative Binomial Theorem, Integer Compositions Part I: 2.1-2.3", "5 Feb 3,5,7 Solving linear recurrence relations, Binary trees, irrational generating series Part I: 4.1, 4.2, 4.4 Assignment 4, Feb 7", "6 Feb 10,12,14 Introduction to graph theory Part II: 4.1-4.6 Assignment 5, Feb 14", "Grading scheme A", "Students are encouraged to collaborate on solving the questions but each student must write their own solutions independently in their own words.", "Please inform of us these at the start of the course.", "Library for research-based assignments"]}, {"course_id": 44, "course_code": "MATH 249", "course_name": "MATH249 - Introduction to Combinatorics (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Introduction to Combinatorics (Advanced Level)", "09:30AM - 10:20AM MC 2017", "For graph theory, while we will focus on the same topics covered in MATH 239 (planarity and bipartite matching), our coverage of those topics will differ substantially in depth and in the techniques that we employ; in particular, we will see striking applications of algebra.", "extract coefficients from rational generating series", "find maximum matchings in bipartite graphs", "understand and use the concepts of paths, cycles, trees, bipartiteness, and planarity in graph theory", "be comfortable writing proofs for results on discrete objects", "2 Jan 13,15,17 Generating series, Sum and Product lemmas, Negative Binomial Theorem, Integer Compositions Part I: 2.1-2.3", "5 Feb 3,5,7 Solving linear recurrence relations, Binary trees, irrational generating series Part I: 4.1, 4.2, 4.4 Assignment 4, Feb 7", "6 Feb 10,12,14 Introduction to graph theory Part II: 4.1-4.6 Assignment 5, Feb 14", "Grading scheme A", "Students are encouraged to collaborate on solving the questions but each student must write their own solutions independently in their own words.", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 45, "course_code": "STAT 230", "course_name": "STAT230 - Probability (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["03:30PM - 04:20PM MC 4045", "09:30AM - 10:20AM MC 4045", "02:30PM - 03:20PM", "03:30PM - 04:20PM MC 2017", "08:30AM - 09:20AM", "Pavel Shuldiner; E-mail: pavel.shuldiner@uwaterloo.ca; M3 4108", "Come with well-organized questions to make the best use of your time.", "Requests must be emailed to sasugradadv@uwaterloo.ca", "Joint probability functions, marginal probability functions, and conditional probability functions of two or more discrete random variables and functions of random variables are also discussed.", "Post-requisite:", "Define a probability model and determine probabilities of events using counting techniques.", "Define and use probability mass functions, probability density functions, and cumulative distribution functions to determine probabilities of events.", "Use moment generating functions as a tool to determine expected values.", "This learning consists of taking the time to carefully read the lecture notes on your own, ensuring you understand the concepts and steps demonstrated in the lectures to tackle examples, and then solving the end-of-section problems.", "Definitions of Probability", "Mathematical Probability Models", "1.1", "1.2", "Counting in Uniform Probability Models", "Addition and Multiplication Rules for Counting", "Permutations and Combinations", "Counting in Uniform Probability Models", "Addition and Multiplication Rules for Counting", "Permutations and Combinations", "Addition Rules for Unions of Events", "1.3", "2.1", "2.2", "2.3", "Conditional Probability and Product Rules for Intersections of Events", "Probability Mass Functions, Cumulative Distribution Functions", "Functions of Random Variables", "3.2", "Expectation of a Random Variable", "Expectation of a Function of a Random Variable, Properties of Expectation", "Moment Generating Functions", "3.3", "3.4", "3.5", "Basic Terminology and Techniques", "Joint Probability Mass Functions, Marginal Probability Mass Functions", "3.5", "4.1", "Multinomial Distribution", "Linear Combinations of Random Variables", "4.2", "4.4", "Linear Combinations of Random Variables", "Law of Total Expectation", "4.4", "4.5", "4.6", "Law of Total Expectation", "Cumulative Distribution Function, Probability Density Function", "Functions of Random Variables", "4.6", "Expectation of a Random Variable", "Moments of a Distribution, Moment Generating Functions, Mean, Variance, Standard Deviation", "Exponential Distribution", "Normal Distribution", "Exponential Distribution", "Normal Distribution", "Use of the Normal Distribution in Approximations", "Therefore, you should plan to spend between 3 and 6 hours each week in out-of-class learning.", "This learning consists mainly of ensuring you understand the concepts and steps used in class to solve problems and then solving exercises from the Course Notes on your own.", "A 2.5-hour final cumulative examination will be held during the final exam period in April.", "In the case of extenuating circumstances, you must provide sufficient documentation via e-mail to Divya Lala at divya.lala@uwaterloo.ca as soon as possible to verify your absence's circumstances.", "Re-mark Requests:", "Cancellation of In-Person Classes:", "Intellectual property includes items such as:", "Students may not distribute or reproduce these materials for commercial or non-commercial means.", "This course includes the independent development and practice of specific skills for solving real-life problems using introductory probability rules.", "Library for research-based assignments"]}, {"course_id": 47, "course_code": "STAT 231", "course_name": "STAT231 - Statistics (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "03:30PM - 04:20PM DC 1350", "02:30PM - 03:20PM", "11:30AM - 12:20PM MC 1085", "03:30PM - 04:20PM", "10:30AM - 11:20AM EIT 1015", "09:30AM - 10:20AM EIT 1015", "Email: aslynko@uwaterloo.ca", "Email: liqun.diao@uwaterloo.ca", "Email: yangjc@uwaterloo.ca", "Email: henan.xu@uwaterloo.ca", "Funmilayo Adeku", "Email: fadeku@uwaterloo.ca", "This course provides a systematic approach to empirical problem solving which will enable students to critically assess the sampling protocol and conclusions of an empirical study including the possible sources of error in the study and whether evidence of a causal relationship can be reasonably concluded.", "The connection between the attributes of a population and the parameters in the named distributions covered in STAT230 will be emphasized.", "Numerical and graphical techniques for summarizing data and checking the fit of a statistical model will be discussed.", "The method of maximum likelihood will be used to obtain point and interval estimates for the parameters of interest as well as testing hypotheses.", "The interpretation of confidence intervals and p-values will be emphasized.", "The Chi-squared and t distributions will be introduced and used to construct confidence intervals and tests of hypotheses including likelihood ratio tests.", "Contingency tables and Gaussian response models including the two sample Gaussian and simple linear regression will be used as examples.", "Course Information Webpage", "Please do not send these questions via email.", "I expect everyone to be respectful to each other, any posts that do not meet the principles in Policy 33: Ethical Behaviour will be removed.", "Email", "Please send emails from uwaterloo.ca email address and include the session number and student ID number.", "Continuity Plans", "Use numerical and graphical summaries of a data set to describe the characteristics of a variate and to check the fit of a statistical model to the data.", "Use the steps of PPDAC to identify both the objectives and possible sources of error in an empirical study, and to critically evaluate the conclusions.", "Identify the connection between attributes of a population and the parameters in the named distributions (Binomial, Poisson, Multinomial, Exponential, Normal).", "Define and use the likelihood function to obtain point estimates of the unknown parameters in a model particularly for the Binomial, Poisson, Multinomial, Exponential and Gaussian (Normal) models.", "Use a pivotal quantity to construct a confidence interval for a parameter in some specific cases, and interpret the confidence interval.", "Use the likelihood function to construct and conduct a test of hypothesis for an unknown parameter in a model.", "Interpret p-values and describe the connection with confidence intervals.", "Define the properties of the Chi-squared and t distribution.", "Define a Gaussian response model including simple linear regression; determine point and interval estimates and conduct tests of hypotheses for the parameters in a Gaussian model.", "Use a Goodness of Fit test to test the fit of a model, independence in a two-way table and equality of proportions for two or more groups", "Describe the importance of randomization and pairing in experimental design and be able to recognize whether a study design allows the researcher to conclude cause and effect.", "This learning consists of taking the time to carefully read the course notes on your own, making sure you understand the concepts and steps demonstrated in the lectures to tackle examples, and then solving the end-of-chapter problems.", "Monday", "Friday", "Welcome", "1.1 Introduction to Statistical Sciences", "1.3 Numerical Data Summaries", "1.3 Graphical Summaries", "1.4 Probability Distributions and Statistical Models", "1.5 Data Analysis and Statistical Inference", "1.6 Introduction to R and RStudio", "2.1 Choosing a Statistical Model", "2.2 Estimation of Parameters", "2.3 Method of Maximum Likelihood", "2.4 Likelihood Functions for Multinomial Models", "2.5 Invariance Property of MLE", "2.6 Checking the Model", "3.1 Planing and Conducting Empirical Studies", "3.2 Steps of PPDAC", "3.3 Case Study", "4.1 Statistical Models and Estimation", "4.2 Estimators and Sampling Distributions", "4.4 Confidence Intervals and Pivotal Quantities", "4.5 The Chi-Squared and t Distributions", "4.6 Likelihood-Based Confidence Intervals", "4.7 Confidence Intervals for Parameters in the Gaussian model", "4.7 Confidence Intervals for Parameters in the Gaussian model (Continued)", "5.1 Introduction to Hypothesis Testing", "5.2 Test of Hypotheses for Parameters in the Gaussian Model", "Relationship Between Hypothesis Testing and Confidence Intervals", "5.3 Likelihood Ratio Test of Hypothesis - One parameter", "6.1 Gaussian Response Models", "6.2 Simple Linear Regression: Maximum Likelihood and Least Squares Estimates", "Confidence Interval for Parameters in the Model", "6.3 Checking Model Assumptions and Residual Plots", "Randomization, Paring, and Experimental Design", "7.1 Likelihood Ratio Test for the Multinomial Model", "7.2 Goodness of Fit Tests", "This learning consists mostly of making sure you understand the concepts and steps that were introduced and used in class to solve examples and then solving problems from the Course Notes on your own.", "R Statistical Software", "R and the RStudio development environment can be downloaded from here.", "All assessments are proctored, in-person, and closed-book exams.", "A 2.5-hour cumulative final examination will be held during the final exam period (April 9 - 25, 2025).", "If you have a question regarding the marking of an assessment, you should first check the posted solutions on LEARN.", "First and last name", "Session number", "Please be specific and explain your rationale for a remark.", "Notice of Recording", "Short-term absence", "COVID-19-related absence", "No limits on number of submissions per term and only available during the formal lecture period", "In particular:", "Please inform us of these at the start of the course.", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments"]}, {"course_id": 49, "course_code": "STAT 431", "course_name": "STAT431 - Generalized Linear Models and their Applications (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Generalized Linear Models and their Applications Winter 2025", "Review of the normal linear model and maximum likelihood estimation; regression models for binomial, Poisson and multinomial data; generalized linear models; and other topics in regression modelling.", "The primary objective of this course is to introduce students to generalized linear models.", "Attention will be mainly directed towards theory and applications involving binary, categorical, and count data, although the generalized linear model will be presented in its full generality for responses from the exponential family.", "This course introduces several useful regression techniques for the analysis of data arising in many different settings (ie\uff0c medicine, industry, psychology etc.).", "The intended audience consists of students interested in advanced regression modeling.", "The objectives are to help students develop an understanding of the statistical theory and to equip them with the ability to fit regression models for a wide range of problems.", "run generalized linear regression for binary, categorical and count data and have a deep understanding of the underlying theories.", "Week 7 Dose-Response Models Lecture 11", "An Introduction to Generalized Linear Models by Dobson, AJ and Barnett, AG, fourth edition No 92", "Software: Students are encouraged to use R for coding problems in assignments, but feel free to use any computing software you feel comfortable with.", "An introduction to R: https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf.", "Arrangements for students with official conflicts will be handled on a case by case basis."]}, {"course_id": 50, "course_code": "STAT 441", "course_name": "STAT441 - Statistical Learning - Classification (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["10:00AM - 11:20AM B1 271", "Email: mlysy@uwaterloo.ca", "STAT 841: View requirements for STAT 841", "Describe the basic principles and methods of statistical classification.", "Know when to use each of these methods on a given dataset.", "Evaluate and compare the output of various classifiers.", "An Introduction to Statistical Learning with Applications in R, by James, Witten, Hastie & Tibshirani https://www.statlearning.com", "There will be two closed-book midterms worth 15% each on the following dates:", "There are no make-up midterms in this course.", "Discussion Board", "Please self-enroll at https://piazza.com/uwaterloo.ca/winter2025/stat441841cm763.", "You can generally expect a response from TAs within two business days.", "Software", "Material and assignments will require the use of R and Python programming languages, as well as the technical document writing programs for these languages: R Markdown and Quarto.", "Regrades", "Email", "Emails which do not adhere to this standard will generally be ignored.", "Intellectual property includes items such as:", "In particular:", "Please inform us of these at the start of the course."]}, {"course_id": 51, "course_code": "STAT 442", "course_name": "STAT442 - Data Visualization (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "Data Visualization Winter 2025", "11:30AM - 12:20PM B1 271", "Discussion Board", "Email", "Response time", "Both human perception and statistical properties inform the methods used to display and visually explore categorical, continuous, time-ordered, map, and high dimensional data.", "Statistical concepts visually presented include variability, densities, quantiles, conditioning, and hypothesis testing.", "Interactive graphics include linking, brushing, motion, and the navigation of high dimensional spaces guided via projection indices.", "Interpret and critique the most commonly used kinds of visualizations today.", "Create a variety of univariate, bivariate, and multivariate graphs using base R and the tidyverse.", "Look up the necessary code to complete additional graphs not covered here.", "Book - Data Science - A First Introduction.", "Book - The Chicago Guide to Multivariate Analysis, Jane E. Miller", "Book - Cool Infographics - Effective Communication with Data Visualization and Design, Randy Krum.", "Industry Paper - Making Data Meaningful, United Nations Economic Commission for Europe.", "Notice of Recording", "No waiving of this penalty will occur for technical issues.", "Details can be found here: https://uwaterloo.ca/math/accommodations", "Phone: 519-884-0000 extension 213", "Lots of people look like they have it together in public and online when they're a mess inside too.", "They got you into university, so they've already done most of the work, but at this point, the most they can really do for you decide if you can get into graduate school before doing industry experience.", "Don't let that be your reason for thinking this is as good as it gets.", "In particular:", "Please inform me of these at the start of the course."]}, {"course_id": 54, "course_code": "CO 487", "course_name": "CO487 - Applied Cryptography (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 1, "major_name": "Data Science (Bachelor of Computer Science - Honours)", "topics": ["Instructor: Samuel Jaques", "Email: sejaques@uwaterloo.ca", "Timothy Miller", "Nicolas Swanson", "A broad introduction to modern cryptography, highlighting the tools and techniques used to secure internet and messaging applications.", "It is one of the core technologies for securing the emerging information infrastructure.", "This course is a comprehensive introduction to modern cryptography that is aimed primarily at those interested in applications.", "In the area of public-key cryptography, topics will include an overview of specific systems (Diffie\u2013Hellman, RSA, DSA, etc.) and a few advanced protocols.", "The security of these schemes and the use of public-key techniques for generating digital signatures will be described.", "Linear and differential cryptanalysis of ciphers.", "Define the main information security goals of confidentiality, integrity, authentication, and availability", "Explain the intended security properties of each cryptographic primitive and analyze relationships between security properties", "Explain mathematical techniques underlying standardized cryptographic algorithms", "Identify flaws in uses of cryptographic algorithms", "Determine which cryptographic algorithms can be used and combined to build systems with desired functionality and security", "Understand and contextualize the cryptography and security around them in daily life", "0 1 (Jan 6-8) Introduction", "Symmetric Encryption", "3.6 9 Elliptic Curve Cryptography 4 Yes", "4   Applications", "Understanding Cryptography: From Established Symmetric and Asymmetric Ciphers to Post-Quantum Algorithms, 2nd edition, Springer, 2024 Primary reference.", "A1: January 23", "A4: March 20", "This will be clearly indicated for each such question.", "In that case you are required to work independently.", "These questions will test your ability to identify the important concepts introduced in lectures, and your understanding of them.", "In particular:", "Please inform us of these at the start of the course.", "Library for research-based assignments"]}, {"course_id": 0, "course_code": "CS 136L", "course_name": "CS136L - Tools and Techniques for Software Development (0.25)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 2, "major_name": "Data Science (Bachelor of Mathematics - Honours)", "topics": ["Tools and Techniques for Software Development Winter 2025", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 3003", "E. Ciklabakkal", "E. Ciklabakkal", "08:30AM - 10:20AM MC 4042", "E. Ciklabakkal", "10:30AM - 12:20PM MC 4042", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 4060", "02:30PM - 04:20PM MC 4060", "E. Ciklabakkal", "10:30AM - 12:20PM MC 3003", "This course introduces students to tools and techniques useful in the software development lifecycle.", "Students learn to navigate and leverage commands and utilities in the Linux Command Line Shell.", "Students gain experience in version control software, writing scripts to automate tasks, and creating effective test cases to identify bugs.", "Students also gain experience in using built-in support for version control, testing, debugging, build automation, etc. in integrated development environments (IDEs).", "Interact with the Linux Operating System using a command line shell and gain familiarity with commands, utilities and tools.", "Create scripts to automate tasks and increase productivity while working on a software project.", "Design test cases and automate the testing process to check a program for functional correctness and incorrect memory usage.", "Use version control systems to share, contribute, manage and track code.", "Separately compile code modules and leverage build automation tools to do so efficiently.", "Module 0: Linux Shell, a first look", "Module 2: Testing and Debugging", "Module 9: Debugging", "Each lab consists of a number of lab problems.", "Each lab problem has two associated values, a lower one called the pass threshold and a higher one called the completion threshold.", "Special note on test cases: if a lab question asks you to submit test cases, you must create these tests yourself.", "Do not directly copy code from GenAI.", "Do not ask GenAI for a step-by-step breakdown of how to solve a lab problem.", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 1, "course_code": "CS 341", "course_name": "CS341 - Algorithms (0.50)", "term_name": "Required Courses", "program_name": "Data Science", "program_id": 44, "major_id": 2, "major_name": "Data Science (Bachelor of Mathematics - Honours)", "topics": ["Algorithms Winter 2025", "10:00AM - 11:20AM MC 4061", "08:30AM - 09:50AM MC 1056", "The study of efficient algorithms and effective algorithm design techniques.", "Topics include divide and conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph search and backtrack, problems without algorithms, NP-completeness and its implications.", "DPV", "Introduction to Algorithms, by Cormen, Leiserson, Rivest and Stein, MIT Press.", "describe the main idea first,", "Extensions and Other Accommodations on Assignments", "Students can currently self-declare two kinds of absences on Quest: short-term absence and pandemic-related absence.", "Since a short-term absence lasts 2 days, this means the only accommodation we offer for a short-term absence is a 48 hour extension.", "If you request accommodations through AccessAbility Services (AAS) by filling out a Missed Course Component form, the accommodation is determined on a case-by-case basis through consultation with AAS, but will generally be one of the above options unless your situation is unusual.", "If you collaborate with others, you must clearly indicate the collaboration for each problem.", "This is not a software engineering course; we will not test your code against inputs that do not match our specifications.", "Continuity Plan", "In particular:", "Please inform of us these at the start of the course."]}]