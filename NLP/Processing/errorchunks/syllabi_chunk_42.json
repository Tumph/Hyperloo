[{"course_id": 116, "course_code": "ECE 327", "course_name": "ECE327 - Digital Hardware Systems (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["Digital Hardware Systems Winter 2025", "ECE 327 / ECE 627", "10:00AM - 11:20AM E7 4053", "11:30AM -", "ECE 327 101", "ECE 327 201", "04:30PM - 05:20PM E7 4053", "04:30PM - 05:20PM", "04:30PM - 05:20PM E7 4053", "Maran Ma: E2-3354A Wednesday 1:30-2:30pm", "Design and modelling of digital hardware systems using a hardware description language.", "Power analysis and optimization.", "View requirements for ECE 327", "ECE 627:", "Introduction to power analysis and optimization.", "Introduction to faults and testing.", "View requirements for ECE 627", "The design and engineering of computing chips is an exciting, and valuable skill that spans multiple engineering disciplines including software engineering, parallel programming, verification and reasoning, compilation techniques, down to physical/analog/electrical effects.", "This course will help open the door to careers in the richly-rewarding chip design industry in a variety of roles such as RTL developers, verification engineers, system-level developers, and future leaders and managers.", "ECE327 will be vital to navigate these exciting times.", "We must think about and understand concurrent operations at a cycle-by-cycle level of abstraction.", "There are commonly used paradigms, and design patterns that we must known when organizing the RTL code.", "We will learn how to break down a complex design into these components, and learn how to reason about correctness, and understand their translation to hardware primitives.", "Most digital design are constrained to fit specific cost targets, and the analysis tools help guide the design process with appropriate feedback.", "These compilation iterations are fundamental to digital design and a good designer knows how to direct the tools, rewrite Verilog code, and generate the desired hardware.", "A class project will be used to tie together all the key design lessons we learn in this course.", "We will be developing a large-language model (LLM) solution involving a matrix multiplier as part of the project.", "Describe hardware components at the RTL-level in Verilog, verify these designs through simulation, and map these design to an FPGA fabric.", "Introduction - Introduction to hardware design, quick look at concurrency, debugging, synthesis and entire hardware design flow.", "Reasoning about parallelism in Verilog and drawing timing waveforms/diagrams from the code and vice versa.", "State Machines - Sequential logic design in the form of controllers (or state machines).", "Retiming - Automating pipelining of feed-forward datapaths.", "Strategies and ideas for retiming steps.", "Static Scheduling - Time-shared reuse of hardware resources.", "Construction of static scheduling tables based on resource constraints.", "Design of state machine controllers, and datapaths building blocks.", "Dynamic Scheduling - Dynamic scheduling of resource shared datapaths.", "Timing Analysis - Understanding clock frequency and algorithms for timing analysis.", "Elmore Delay - Simplified high-level model of wire delays.", "Power - Power/energy analysis of hardware components.", "Analytical expressions for power and energy.", "ECE627-only] FPGAs - FPGA Logic, Interconnect, and Architecture, Introduction to reconfigurable hardware/FPGAs, understanding logic design, interconnect and overall composition.", "For relevant labs, the course uses the AMD/Xilinx Pynq FPGA boards available in E2-2356A.", "FPGA board deployment will be done as part of some of the labs, and you will get a chance to rectify errors should this fail.", "Remember, the final exam covers the entire course!", "Precise determination will be done on a case-by-case basis.", "- For any missed graded item, we offer the option of taking a final if you miss it for a legitimate reason as per university guidelines.", "Plagiarism in ECE327 will likely manifest in the form of copying RTL code, scripts, bitstreams as-is or recast with minor modifications.", "We have a MOSS configuration to check code plagiarism and we take this seriously.", "We understand that these circumstances can be troubling, and you may need to speak with someone for emotional support."]}, {"course_id": 118, "course_code": "ECE 350", "course_name": "ECE350 - Real-Time Operating Systems (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["Real-Time Operating Systems Winter 2025", "ECE 350", "ECE 350 001", "08:30AM - 09:50AM E7 4053", "11:30AM -", "ECE 350 201", "01:30PM - 04:20PM E2 2356A", "ECE 350 202", "01:30PM - 04:20PM E2 2356A", "01:30PM - 04:20PM E2 2356A", "ECE 350 101", "10:00AM - 11:20AM E7 4053", "About Prof. Zarnett", "8 years industry engineering experience in display & imaging", "Research specialization brain-machine interfacing", "Ahmed Elbaroudy - ammaelba@uwaterloo.ca", "Neeraj Nagar - nnagar@uwaterloo.ca", "Memory and virtual memory and caching; I/O devices, drivers, and permanent storage management; process scheduling; queue management in the kernel; real-time kernel development.", "Aspects of multi-core operating systems.", "View requirements for ECE 350", "Understand the differences between non-real-time and real-time operating system.", "The course notes should be pretty much everything you need for this course.", "I read them so you don\u2019t have to!", "They are neither required nor recommended, but I'll list them here in case you truly wish to look at them.", "Operating Systems Internals and Design Principles (9th Edition).", "Please bring this situation to the attention of the course staff as soon as possible so that can be resolved quickly.", "However, each group must submit their own, independently-developed code for each lab.", "Similarly, each person must submit their own, independently-developed code for each assignment.", "I suggest you avoid looking at other people\u2019s code entirely, but if you do, then you should not be doing that anywhere you might be writing your own code.", "The temptation to write your code just like what you see is simply too high.", "However, penalties may be more severe for repeat offenders (see below for information on Academic Integrity).", "All of the above applies to multiple instances \u2014 a student caught in several incidents of academic dishonesty will be subject to the above penalties for each of the incidents.", "The teaching team is keenly aware of the existence of generative AI (e.g., Github Copilot, ChatGPT) and how such tools can be used to write and test code.", "It almost goes without saying, but we ask you to be respectful and polite when communicating via this medium and to assume the best about others, as tone can be di\ufb03cult to interpret on a discussion forum.", "The human visual system has evolved to perceive saber\u2010toothed tigers in the savannah.", "We encourage everyone to be respectful of their classmates and to not distract them.", "Wise use of computers and the Internet can be helpful for fully engaging in class.", "From the command prompt, you can use compilers and text\u2010mode web browsers (w3m, lynx, links/elinks, etc....) tmux may also be helpful in managing multiple terminal sessions."]}, {"course_id": 119, "course_code": "ECE 356", "course_name": "ECE356 - Database Systems (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["Notice of Recording", "Database Systems Fall 2024", "ECE 356", "ECE 356 001", "11:30AM -", "08:30AM - 09:50AM E7 4417", "Data models, file systems, database system architectures, query languages, integrity and security, database design.", "View requirements for ECE 356", "Relational databases empower the vast majority of dynamic websites as well as a variety of information management systems in private and public sector organizations.", "ECE356 explores the concepts and techniques that make such databases convenient, efficient, and reliable.", "The course additionally includes an introduction to data mining and NoSQL.", "model data using entity-relationship (ER) diagrams", "understand the relational model and design a relational schema for a data set", "execute SQL commands against a remote database using Java Database Connectivity (JDBC)", "identify integrity constraints and functional dependencies in data", "apply the theory of database normalization to optimize the design of a relational schema", "understand the basics of transaction execution, concurrency control, and recovery in databases", "understand SQL injection attacks, as well as password hashing and salting", "perform simple data mining and analytics operations on real data sets", "design a denormalized schema for a NoSQL database", "September 4-10 intro, relational model SSH, mysql command line tool     first week of classes", "September 11-17 relational algebra, SQL relational algebra", "October 2-8 normalization normal forms and normalization", "Exams", "A make-up final exam, if offered by the instructor, may be scheduled in a future academic term.", "The instructor will not offer a make-up midterm, and will instead consider shifting the weight of a missed midterm towards the final exam.", "Members of the teaching team may also evaluate students' proficiency in the use of software in connection with lab work.", "If a student's solution differs substantially from the solution recognized by the teaching team, the student may be asked to provide sample inputs and outputs to evaluate the correctness of their solution.", "Collaboration", "Exams may cover both theory and practice, including your ability to read and write SQL code.", "Notice of Recording"]}, {"course_id": 124, "course_code": "ECE 406", "course_name": "ECE406 - Algorithm Design and Analysis (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["Notice of Recording", "Algorithm Design and Analysis Winter 2025", "ECE 406", "ECE 406 001", "11:30AM -", "E. Creager", "04:00PM - 05:20PM", "E. Creager", "04:00PM - 05:20PM", "\u2022 Rushabh Solanki", "ECE 406:", "Design and analysis of efficient, correct algorithms.", "Advanced data structures, divide-and-conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph algorithms, search and backtrack, inherently hard and unsolvable problems, approximation and randomized algorithms, and amortized analysis.", "View requirements for ECE 406", "How to design efficient algorithms using divide and conquer, greedy algorithms, and dynamic programming.", "The kinds of problems that can be solved with linear programming, and why they can be solved efficiently.", "What it means to reduce one problem to another, and how it used in complexity analysis", "Introduction to algorithms Chapter 0 0.5 hours", "Divide and conquer algorithms Chapter 2 5 hours", "Graphs, decompositions and depth-first search Chapter 3 3 hours", "Linear Programming: Simplex algorithm, duality theorem Chapter 7 4 hours", "No lectures during ECE midterms week (Feb 24--28)", "LEC001] Tue 2:30--3:30pm in E7-5353", "Assignments Information and Guidelines: Assignments are given roughly every other week, and their primary goal is to give you practice in designing and analyzing algorithms.", "You must list these collaborators at the top of the first page of your assignment (there is no penalty for listing collaborators, but it ensures we do not falsely identify plagiarism).", "In submitting an assignment, you are \u201csigning off on your work\u201d as described in the academic integrity form at https://uwaterloo.ca/academic-integrity/. The penalty for a first plagiarism offence is -100% for the assignment.", "* Each student must turn in a signed academic integrity form to confirm their understanding of the above policies.", "Notice of Recording"]}, {"course_id": 125, "course_code": "ECE 409", "course_name": "ECE409 - Cryptography and System Security (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["Cryptography and System Security Winter 2025", "04:00PM - 05:20PM", "08:30AM - 09:50AM E7 5353", "Introduction to cryptology and computer security, theory of secure communications, points of attack, conventional cryptographic systems, public key cryptographic systems, standards, firewalls, wireless system security, applications.", "View requirements for ECE 409", "This course will provide introduction to  cryptography and system security.", "It covers  basic concepts in cryptography and system security,   types of attacks, trust and threat models,  pseudorandomness, computational security,  symmetric-key  cryptography,  public-key cryptography,   attacks on cryptographic operations,   network security protocols,   wireless system security and privacy,  applications in IoT systems,   special topics on  privacy preserving  AI,   quantum key  distribution and post-quantum cryptography.", "Explain the principles of cryptography and system security.", "Explain how practical schemes of symmetric-key cryptography and public-key cryptography are designed and implemented.", "Analyze the security and privacy protections in wireless systems and their applications in IoT.", "Apply security principles to solve problems in concrete applications.", "Introduction  to Cryptography  and System Security", "Cryptography and cryptanalysis", "Basic protections: encryption and authentication", "Classification of cryptosystems", "Basic  concepts of secure systems.", "Types of attacks,  trust and threat model", "Computational security and one-way functions", "Chapter 3. Symmetric-key Cryptographic Systems", "Arithmetics of binary finite fields", "Secure hash functions: SHA1, SHA2 and SHA3", "MAC and forgery attack", "Time-memory trade-off attacks and attacks by AI", "Public-key Cryptographic Systems", "Arithmetic operations", "Security of public-key cryptography (factorization, DL, LWE)", "Practical public-key systems (DH, RSA, DSA, ECC)", "Fault side-channel attacks", "Network Security Protocols", "Implementing secure systems:  PKI  and  X.509 certificates", "Hop-by-hop versus end-to-end protections and VPN", "Chapter 6. Wireless System Security", "5G security architecture for IoT security and privacy", "Privacy preserving machine learning: secret sharing; securing federate learning", "Basic concepts for quantum cryptography", "Quantum key distribution", "Post-quantum cryptography", "Communication System Security L.L. Chen and G. Gong", "R. Anderson, Security Engineering A Guide to Building Dependable Distributed Systems, Wiley, 2014 (Anderson14).", "Schneier on Security, http://www.schneier.com/blog/. A blog covering current computer security and privacy issues.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 129, "course_code": "ECE 432", "course_name": "ECE432 - Radio Frequency Integrated Devices and Circuits (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["Radio Frequency Integrated Devices and Circuits Spring 2024", "08:30AM - 09:50AM E7 4433", "S. Su", "04:00PM - 05:20PM", "An introduction to the theory and practice of Radio Frequency (RF) Integrated Circuit design.", "Physics and modelling of RF integrated components such as resistor, inductor, capacitor (RLC) passives, diodes, metal oxide semiconductor field-effect transistors (MOSFETs), high electron mobility transistors, hetero-junction bipolar transistors.", "An introduction to radio frequency and high-speed integrated circuit design.", "Topics include physics and modelling of passive components (diode, R, L, C, transformer, and transmission line) and transistors (MOSFETs and BJTs) on a silicon chip; design of transistor-level circuit building blocks, including wideband/tuned amplifiers, frequency synthesizers (e.g., oscillators, phase-locked loops), mixers and multipliers, power amplifiers, filters; signal processing and conditioning techniques and analysis of modern communication and computing systems.", "Innovative and complete designs may be good candidates for peer-reviewed publications in IEEE CASS and SSCS.", "Students will use industry-standard design tools and flows, with potential for top designs to be ported to advanced CMOS technologies, fabricated, and measured at UWaterloo.", "Analyze and design the main circuit blocks of a modern transceiver", "Specify components, circuits and sub-systems for use in high-speed/RF circuits", "Describe the behavior of RF and high-speed systems in terms of sensitivity, dynamic range, etc.", "Device Physics and Modeling (Diode, MOS and BJT)", "Amplifiers (Basic Topologies and Biasing) Homework 1", "Impedance Matching and Filters Homework 2", "Tuned Amplifiers (Narrowband LNAs) Lab 3", "Communication and Computing Systems Lab 4", "Signal Processing and Modulation Techniques Homework 4", "Mixers and Multipliers Lab 5", "Power Amplifiers, Nonlinearity and Distortion Homework 5", "A. S. Sedra & K. C. Smith, Microelectronic Circuits 8th edition Yes", "laptop/desktop used for simulations Yes", "If you miss both exams, it will be handled on a case-by-case basis."]}, {"course_id": 130, "course_code": "ECE 444", "course_name": "ECE444 - Integrated Analog Electronics (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["Integrated Analog Electronics Winter 2025", "11:30AM -", "04:00PM - 05:20PM", "08:30AM - 09:50AM E7 4433", "Email", "Analog electronics exploits the physical behaviour of electronic devices to create electronic systems.", "The performance of single and multiple transistor amplifying stages are studied.", "Followed by a study of biasing, current mirror, and output stages, which are then combined in the study of operational amplifier circuits.", "Frequency response and feedback are then reviewed leading to a detailed study of stability and compensation for multistage and operational amplifiers.", "View requirements for ECE 444", "Analog integrated circuits (ICs) exploit the physical behaviour of electronic devices to create electronic systems.", "We will study the performance of single- and multiple-transistor amplifying stages.", "This is followed by a study of biasing, current mirrors, and output stages, which are then combined in the study of operational amplifiers.", "We then review frequency response and feedback, leading to a detailed study of stability and compensation for multistage and operational amplifiers.", "We will mostly study complementary metal-oxide-semiconductor (CMOS) circuits, but will use bipolar junction transistors (BJTs) for certain applications.", "The course finishes with a look at switched-capacitor circuits and data converters, including analog-to-digital converters (ADCs) and digital-to-analog converters (DACs).", "The knowledge and skills you will learn in this course will prepare you to:", "Pursue graduate studies in IC design (this is usually necessary to work as an IC designer in industry).", "Analyze and design some common analog IC components.", "Model and simulate analog IC components at different levels of abstraction.", "MOSFETs: regions of operation, small-signal models, body effect, weak inversion, intrinsic gain, and transition frequency", "Cascode operational transconductance amplifiers (OTAs) and Gm-C filters", "Current and voltage references", "CMOS two-stage OTA and frequency compensation", "Power amplifiers and output stages", "Data converters", "**NOTE:", "Closed book and closed notes", "Non-programmable, non-graphing scientific calculator is allowed", "A formula sheet will be provided", "The labs involve using LTspice from Analog Devices to design and simulate various circuit blocks using a commercially-available CMOS IC technology.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills, such as circuit simulation.", "Library for research-based assignments"]}, {"course_id": 131, "course_code": "ECE 451", "course_name": "ECE451 - Software Requirements Specification and Analysis (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["Software Requirements Specification and Analysis Winter 2025", "10:00AM - 11:20AM MC 2035", "Email:x784chen@uwaterloo.ca", "Email: ar2elsha@uwaterloo.ca", "Email: d3pang@uwaterloo.ca", "Models, notations, and processes for software requirements identification, representation, analysis, and validation.", "ECE 451: View requirements for ECE 451", "The week of", "Deliverables", "1 Introduction", "3 RE Reference Model", "Jan 13 4 Domain Model 4 Domain Model D0 \u2013 Group members & Project idea", "Jan 27 7 Functional Modelling 8 OCL D1 \u2013 Domain Model & Stakeholders", "Feb 10 10 Quality Requirements 10 Quality Requirements D2 -  Use case Diagram & Description", "Feb 24 11 Requirements Conflict management 12 Prioritizing Requirements D3 \u2013 Functional Model & OCL", "Mar 3 13 Cost Estimation 14 Risk Analysis D4 \u2013 State Diagram", "Mar 17 15 Temporal Logic 16 Validation and Verification D5 \u2013 Cost Estimation & Risk Analysis", "Mar 31 17 Software Project Management 18 Requirement Engineering for AI Systems D6 - Quality Attributes and Temporal Logic", "Ability to separate requirements from specifications from domain assumptions and argue that a specification + domain assumptions satisfy requirements", "Ability to model requirements in a variety of modelling paradigms", "Ability to elicit and document non-functional requirements such that the to-be-developed software can be objectively tested for their satisfaction", "Ability to use tools to manage a Software Development Team.", "Why is requirements analysis complex?", "Functions as a modelling notation.  Pre- and post-conditions.", "Use-case diagrams.", "Functions over a class diagram.", "Modelling dynamic behaviour of a software system.", "UML State Machines.", "Specification patterns.", "7: Model Integration (1 hour)", "The expected contents and organization of a Software Requirements Specification (SRS).", "AI vs non-AI Systems based on what we covered in this course.", "Braek and Haugen, Engineering real-time systems: an object-oriented methodology using SDL, Prentice-Hall, 1993.", "Larman, Applying UML and Patterns, Prentice Hall, 2004.", "Maciaszek, Requirements Analysis and System Design, Addison Wesley, 2001.", "Bray, An Introduction to Requirements Engineering, Addison-Wesley, 2002.", "Nuseibeh and Zave, Software Requirements and Design:", "van Lamsweerde, Requirements Engineering: From System Goals to UML Models to Software Specifications, Wiley, 2009.", "Brooks, The Design of Design, Addison Wesley, 2010.", "Alan Davis, Just Enough Requirements Management: Where Software Development Meets Marketing, Dorset House Publishing, 2005.", "The project can be related to requirements engineering or a more general software engineering topic.", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 133, "course_code": "ECE 457A", "course_name": "ECE457A - Co-operative and Adaptive Algorithms (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["Co-operative and Adaptive Algorithms Fall 2024", "ECE 457A", "E7 3343", "\u2022 Huda Diab Abdulgalil: Email hdiababd@uwaterloo.ca", "The course starts by addressing the ill-structured problems and need for computational intelligence methods.", "It introduces the concepts of heuristics and their use in conjunction with search methods, solving problems using heuristics and metaheuristics, constraints satisfaction.", "The course also introduces the concepts of co-operation and adaptations and how they are influencing new methods for solving complex problems.", "The course starts by illustrating how the concepts of co-operation and adaptation are manifested in nature and how such models are inspiring new types of solutions methods.", "Topics to be covered include search algorithms, game playing, constraints satisfaction, meta-heuristics, evolutionary computing methods, swarm intelligence, ant-colony algorithms, particle swarm methods, adaptive and learning algorithms and the use of these algorithms in solving continuous and discrete problems that arise in engineering applications.", "View requirements for ECE 457A", "Motivate the need for algorithms that exhibit a degree of intelligence: logical, computational, and biologically inspired.", "Introduce the concepts of cooperation and adaptations and how they are influencing new methods for solving complex problems.", "Illustrate the use of these algorithms in solving continuous and discrete, and machine learning problems", "Introduction: About this course, AI, Adaptation, Cooperation, goals and definitions of artificial intelligence;", "ill-structured problems and need for approximate algorithms, cooperation and adaptation in nature.", "Search: state space problem formulation and representation;", "use of heuristic search methods and meta-heuristic algorithms", "Trajectory Methods: Tabu search", "Engineering use cases", "Engineering use cases", "Mathematical Models of Genetic Algorithms", "Introduction to Swarm Intelligence: cooperation and adaptation methods inspired by nature.", "Engineering use cases", "Engineering use cases", "Evolutionary Programming: Continuous and Discrete EP", "Finite State Machine Optimization", "Evolutionary Strategies", "Self-Adaptive Evolution Strategies", "Introduction to evolutionary computing Introduction to evolutionary computing, by Eiben and A, Smith, J.E, Springer, Berlin, 2003.", "Search and Optimization by Metaheuristics Techniques and Algorithms Inspired by Nature Search and Optimization by Metaheuristics Techniques and Algorithms Inspired by Nature Ke-Lin Du, M. N. S. Swamy No", "Search Algorithms Types: Breadth and Depth First Search Algorithm Search Algorithms Types: Breadth and Depth First Search Algorithm Merium Hazem Anwar Labib Bishara, Merihan Hazem Anwar Labib Bishara No", "**The lecture notes are copy-right protected material.", "Such behaviour includes:", "Adhering to the principles of academic integrity when conducting and reporting research.\u201d"]}, {"course_id": 134, "course_code": "ECE 457B", "course_name": "ECE457B - Fundamentals of Computational Intelligence (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["Fundamentals of Computational Intelligence Winter 2025", "ECE 457B", "Monday, Friday -", "10:00AM - 11:20AM E7 5353", "04:00PM - 05:20PM", "Da Saem Lee : ds3lee@uwaterloo.ca", "Communication and Discussion", "If you really have a critical time issue, or you don't want the TA's to see the message (for any reason at all), then you should send Prof. Crowley a direct message on Teams chat in addition to email.", "Model-based prediction and classification.", "Multiple examples and case studies such as autonomous driving, intelligent manufacturing, natural language understanding, speech recognition, computer vision, stock market prediction, disease early detection and diagnosis.", "View requirements for ECE 457B", "It encompasses a broad spectrum of supervised learning topics, including nonparametric and parametric models, linear and nonlinear approaches, deep learning paradigms, and probabilistic models.", "Theoretical knowledge is translated into practice through tutorials on industry-standard tools such as PyTorch and Keras.", "Interactive classroom discussions will pivot around both the practical trade- offs inherent in real-world applications and the theoretical underpinnings that provide an intuitive grasp of the field.", "These topics are an outline, and each year some subset of non-core topics will be skipped due to time constraints and in order to benefit students through deeper focus.", "Classification I", "Distance based - k-Nearest Neighbours (kNN)", "Fundamentals of Parameter Estimation and Learning", "MAP Implementation as Classification: Naive Bayes Algorithm", "Dimensionality Reduction and Manifold Learning", "Vector Embeddings : TF-IDF, Word2Vec, BERT", "Kernel Methods and Latent Models", "k-Means Algorithm, DBScan Algorithm", "Anomaly Detection: Classification, Outlier, Density, and Isolation based", "Classification III : Data, Image and Time-series classification using Deep Learning", "Representation Learning II: Auto-encoders and Variational Auto-Encoders", "Attention and Transformer Networks", "Some additional information and links might be here for older courses.", "A visual grading tool for pdfs submissions of tests and assignments, allows limited online test with mark-down text entry and multiple choice questions.", "Some assignments and tests might be made available online for submission using this tool as well.", "Arxiv Tutorials - pdfs will be posted to hypothes.is and others links will be provided to a number of detailed tutorials on some course topics.", "The first half covers many of basics of this course, while the second half focusses on Deep Learning only.", "Exams", "Completing the assignments will require multiple skills:", "familiarity with statistical, probabilistic analysis of data and results", "logical design and clear description of a expeirmental methodology", "programming various algorithms for processing, training and analysis of data to achieve given tasks (programming will be in Python using libraries such as sci-kit learn and tensorflow, pytorch, pandas)", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 135, "course_code": "ECE 459", "course_name": "ECE459 - Programming for Performance (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["ECE 459", "Monday, Friday -", "08:30AM - 09:50AM E7 5353", "04:00PM - 05:20PM", "Monday, Friday -", "04:00PM - 05:20PM", "11:30AM -", "07:00PM - 07:50PM E7 5353", "07:00PM - 07:50PM E7 5353", "About Prof. Zarnett", "Then I got the AIF in the mail and decided I didn't want to study Computer Engineering after all.", "I'm an Associate Professor of Electrical and Computer Engineering.", "Some of you will know me as the previous Director of Software Engineering from back when you were in 1A. I studied math/CS yet convinced PEO to license me as a P.Eng.", "My research interests focus on using compiler and static analysis techniques to ensure program correctness.", "The LI is responsible for technical matters related to the assignments: git.uwaterloo.ca, git in general, administering the systems where you need to run your labs.", "And I enjoy engaging in discussions about these fields.", "Thanushon Sivakaran <tsivakar@uwaterloo.ca>", "Profiling computer systems; bottlenecks, Amdahl's law.", "View requirements for ECE 459", "Many modern software systems must process large amounts of data, either in the form of huge data sets or vast numbers of (concurrent) transactions.", "This course introduces students to techniques for profiling, rearchitecting, and implementing software systems that can handle industrial-sized inputs.", "These techniques will enable you to design and build critical software infrastructure, especially in an age of Big Data.", "While you may have seen some of these ideas in the context of operating systems (ECE350/SE350/CS350/MTE241) and concurrency (ECE252/CS343), this course gives you tools to make code run faster.", "Design and apply techniques for profiling, rearchitecting, and implementing software systems that can handle industrial-sized inputs.", "We intend to use these slots until we reach the end of the course material.", "The notes cite a number of sources, some of which are useful books.", "Rust familiarization and use of nonblocking I/O;", "Auto\u2010grading and auto\u2010feedback systems, including marmoset, may be used for the evaluation of some of your assignments.", "Acceptable collaboration includes discussing ideas and structures with others, as well as helping others debug their code.", "If your code is too close in structure to someone else's code, you are going to have a problem.", "Or, let's sum this up in two short instructions:", "The teaching team is keenly aware of the existence of generative AI (e.g., Github Copilot, ChatGPT) and how such tools can be used to write and test code.", "It almost goes without saying, but we ask you to be respectful and polite when communicating via this medium and to assume the best about others, as tone can be di\ufb03cult to interpret on a discussion forum.", "The human visual system has evolved to perceive saber\u2010toothed tigers in the savannah.", "We encourage everyone to be respectful of their classmates and to not distract them.", "Wise use of computers and the Internet can be helpful for fully engaging in class.", "From the command prompt, you can use compilers and text\u2010mode web browsers (w3m, lynx, links/elinks, etc....) tmux may also be helpful in managing multiple terminal sessions.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 139, "course_code": "ECE 488", "course_name": "ECE488 - Multivariable Control Systems (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["Multivariable Control Systems Winter 2025", "ECE 488", "Monday, Friday -", "D. Davison", "04:00PM - 05:20PM", "ECE 488 101", "08:00PM -", "D. Davison", "Instructor Dan Davison", "EIT-3114", "Review of feedback control design fundamentals; SISO controller parameterizations; the fundamental effect of MIMO interaction; introduction to state-space models in continuous and discrete time; SISO techniques for MIMO design; optimal control; model-predictive control design; state estimation; decoupling, MIMO PID control design; applications in areas such as aerospace systems.", "View requirements for ECE 488", "Course pre-requisites:", "This course builds on classical control theory from a first control course (ECE380, MTE360, BME356, SYDE352, or equivalent).", "I assume you have good working knowledge of Laplace transforms, transfer functions, Bode plots, block diagrams, and basic control tools (Routh-Hurwitz stability test, root locus plots, Nyquist plots, design of PID/lead/lag controllers).", "To develop tools that allow us to analyze and design control systems that have multiple inputs and/or multiple outputs.", "(7) Proficiently interpret and analyze MIMO systems (Chapter 4)", "(9) Proficiently manipulate and analyze MIMO state-space systems (Chapter 5)", "(11) Explain the advantages and disadvantages of state-space and transfer-function techniques for MIMO control (Chapter 5)", "Tests and final exam", "Tests and final exam", "Tests and final exam", "Tests and final exam", "Tests and final exam", "\"Impact of engineering on society and the environment\"", "\"Economics and project management\"", "Mon Feb 10 Lecture Ch 3 pp.157-164 and P3 & P4", "These slots will compensate for lectures that are cancelled during the ECE Midterm Week.", "You can send a print request online at https://wstore.uwaterloo.ca/pages/w-print-student.", "Chapter 4:  \"Control System Design\", by Goodwin, Graebe, and Salgado, 2001", "Summary of marked components", "Tests and final exam", "Any reason for missing a test, other than those listed above, results in a score of zero on that test.", "The purpose of the Project Exercises is to increase your understanding of the techniques and ideas presented in the lectures by applying them to a quasi-realistic system.", "In-person students who faithfully attend the in-person lectures can get bonus marks.", "I will occasionally distribute slips to each person present in the lecture room.", "Correctly answer a simple question on the slip, and put the slip in the box at the front of the room.", "Most of the 36 lecture videos explain how a random subset of viewers can get a 0.5% bonus mark.", "Mixed learning modes:  Students who switch between in-person and online learning may collect a mixture of in-person and online bonus marks."]}, {"course_id": 150, "course_code": "MSE 333", "course_name": "MSE333 - Simulation Analysis and Design (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["Simulation Analysis and Design Fall 2024", "email hshavandi@uwaterloo.ca", "email", "Onur Kilinc okilinc@uwaterloo.ca", "This course introduces the use of discrete event simulation as an approach for understanding and analyzing complex management systems.", "Topics include an introduction to simulation modelling, general purpose and special purpose simulation languages, designing valid and credible simulation models, input data analysis, output analysis and experimental design.", "View requirements for MSE 333", "Define key terms and concepts in simulation analysis and design [", "3. Use statistical methods to find the type of distributions, estimate the parameters, and implement goodness-of-fit tests.", "4. Analyze, design and build simulation models for stochastic systems.", "5. Verify and validate simulation models using statistical methods and software (e.g., Excel and Arena).", "Investigate the system\u2019s performance measures through the simulation model for different scenarios and conclude the results.", "Attribute Definition", "Demonstrated competence in university level mathematics, natural sciences, engineering fundamentals, and specialized engineering knowledge appropriate to the program.", "Problem Analysis", "An ability to use appropriate knowledge and skills to identify, formulate, analyze, and solve complex engineering problems in order to reach substantiated conclusions.", "Investigation", "An ability to conduct investigations of complex problems by methods that include appropriate experiments, analysis and interpretation of data, and synthesis of information in order to reach valid conclusions.", "Design", "An ability to design solutions for complex, open-ended engineering problems and to design systems, components or processes that meet specified needs with appropriate attention to health and safety risks, applicable standards, and economic, environmental, cultural and societal considerations.", "Communication Skills", "An ability to communicate complex engineering concepts within the profession and with society at large.", "Such ability includes reading, writing, speaking and listening, and the ability to comprehend and write effective reports and design documentation, and to give and effectively respond to clear instructions.", "An understanding of the roles and responsibilities of the professional engineer in society, especially the primary role of protection of the public and the public interest.", "Impact on Society", "Such ability includes an understanding of the interactions that engineering has with the economic, social, health, safety, legal, and cultural aspects of society, the uncertainties in the prediction of such interactions; and the concepts of sustainable design and development and environmental stewardship.", "Ethics and Equity", "Economics and Project Management", "Life-long Learning", "An ability to identify and to address their own educational needs in a changing world in ways sufficient to maintain their competence and to allow them to contribute to the advancement of knowledge.", "Week of", "Introduction to Simulation", "Introduction to Simulation and Ch 2. Simulation in Excel", "Enrolling project groups", "W3: Sep 16 & 18", "W4: Sep 23 & 25", "Queuing Models", "W8: Oct 21 & 23", "Queuing Models", "Queuing models and Ch 7. Random Numbers", "Input modeling", "Verification and Validation", "Ch 11 & 12: O/P Analysis: Estimation of Absolute and Relative Performance", "Discrete-Event System Simulation, 5th Edition, Prentice Hall, New York.", "In case of using any application like Excel or Arena, a screenshot of the pages should be included in the PDF file and then the application files should be submitted through created Learn Dropbox folder.", "Note: In case of simulation system design problem, an outline of the program or code (pseudo-code and/or flowchart) must be included in the pdf file posted on Crowdmark.", "Pdf file should be self-explanatory without your program file.", "Eg: \u201cMSci333_StudentID_Asg*_P**\u201d", "ARENA: Name the entities, variables, attributes and modules appropriately and in a self-explanatory manner."]}, {"course_id": 152, "course_code": "MSE 343", "course_name": "MSE343 - Human-Computer Interaction (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["Human-Computer Interaction Fall 2024", "10:00AM - 11:20AM QNC 2502", "10:00AM - 11:20AM QNC 2502", "11:30AM - 12:20PM QNC 2502", "This course is designed to provide in-depth exposure to the concepts of human-computer interaction and methods of interactive information system design.", "The course will focus on techniques for building information systems that meet human needs and capabilities by following a system development lifecycle: user requirements analysis, information and interaction design, prototyping and evaluation.", "View requirements for MSE 343", "Explain and justify the benefits and drawbacks of user-centred design", "Describe guidelines and models that can be applied to interface design", "Apply a variety of methods to involve the people who use an application in the design process", "Evaluate the usability of an interface", "Explain and justify the benefits and drawbacks of user-centred design 1 KB c) Demonstrate understanding of engineering fundamentals.", "Describe guidelines and models that can be applied to interface design 1 KB d) Demonstrate understanding of specialized engineering knowledge", "Apply a variety of methods to involve the people who use an application in the design process 4 Des b) Generate and implement solutions to complex open-ended problems", "Evaluate the usability of an interface 4 Des c) Evaluate/test solutions and refine designs to better meet requirements", "Process and Requirements", "Introduction to HCI Chapters 1 & 9", "User-centred design Course Notes", "Gathering Requirements and Task-centred design Chapter 10", "Designing Alternatives + Prototyping", "Interface Types & Graphical screen design Chapter 6", "Evaluate", "Evaluating Interfaces with Users: Qualitative Methods Chapters 13 & 7", "Analytical Evaluation: Heuristic Evaluation & Fitts\u2019 Law Chapter 15", "Social & Emotional Interaction Chapter 4 & 5", "Psychology of everyday things & Cognition Chapter 3 & Notes", "Interaction Design: Beyond human computer interaction, 4th edition.", "You will be working in a team of three to five for all these milestones.", "There will be a set of online and in-person activities taking the place of the lab session in this course.", "You can complete these by simply attending class and participating in the activities; there will be a time limit to submit your materials.", "Up until the date of the final exam, you may submit any submitted material for regrading under the following conditions:", "(Ask them first!)", "Extensions", "No extensions will be given after a submission date.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 166, "course_code": "SYDE 334", "course_name": "SYDE334 - Applied Statistics (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["Notice of Recording", "Applied Linear Models Winter 2025", "08:30AM - 09:50AM MC 4020", "02:30PM - 03:20PM", "RCH 101", "Thursdays from 3:00-4:00pm in M3 3021", "Modelling the relationship between a response variable and several explanatory variables (an output-input system) via regression models.", "Model diagnostics and improvement.", "Algorithms for variable selection.", "Review of basic Normal theory, t, chi-squared, and F distributions.", "Simple linear regression.", "Analysis of variance.", "Multiple linear regression, variable selection techniques, indicator variables, diagnostics.", "Brief introduction to non-linear regression, factorial experimentation.", "Registered students can enroll in the class discussion board through Piazza.", "Search for your question first before posting.", "Do not expect a full solution to your question.", "To help maintain a safe, respectful, and productive community in which we \u2013 students and teaching team alike \u2013 can take risks in our learning/teaching, tackle challenging concepts, and ultimately grow as learners, we should endeavor to follow these mutual expectations:", "Explain the main concepts of linear regression models.", "Understand the methods of least squares and maximum likelihood estimation for model parameters.", "Interpret the model and its parameters (e.g., regression coefficients) in the context of any application.", "Draw inferences from a fitted model about the parameters of interest and make predictions.", "Apply the previous two outcomes when fitting linear models to real data using R.", "Assess model quality by diagnosing violations in underlying model assumptions (and identify strategies for improvement).", "Evaluate competing fitted models built using various model selection methods (and choose between them).", "Introduction", "The Straight Line Model", "Model formulation and interpretation", "Least squares estimation", "Mean response and residual variance estimation", "Introduction to R/RStudio", "Maximum likelihood estimation", "Estimators and their properties", "Important distributions", "Distributions of estimators", "Confidence intervals", "O - Ch. 2-4", "Straight Line Model in R", "Prediction intervals", "Intervals in R", "Hypothesis testing", "O - Ch. 4-5", "ANOVA and F test", "Model limits", "Data transformations", "O - Ch. 4-6", "O - Ch. 7", "A1 and Q1 Solutions", "Multivariate normal distribution", "The Linear Model", "Examples", "O - Ch. 8-9", "Estimation", "Estimators and their properties", "Distributions of estimators", "O - Ch. 9, 11, 12", "ANOVA and F test", "Significance tests", "General linear hypothesis", "O - Ch. 9, 11, 12", "A2 and Midterm Solutions", "Case Study: South African heart disease", "Nested models", "Additional sum of squares", "O - Ch. 12", "Outliers", "O - Ch. 13-14", "Influence", "O - Ch. 14-15", "A3 and Q2 Solutions", "One-variable-at-a-time selection methods", "Criteria-based selection methods", "O - Ch. 16", "This learning consists mostly of making sure you understand the concepts and steps that were used in class to solve problems and then solve exercises from the textbook on your own.", "Introduction to Regression Modeling by Abraham and Ledolter This textbook is an optional reference book (available for free on LEARN).", "R and R-Studio Free software.", "To serve as an opportunity to demonstrate your understanding, application, and integration of the course material, including practical application of the skills/concepts with the statistical software, R.", "Missed Assignment: The time window to complete these assessments are generous and, in general, a sickness lasting a couple of days will not be enough of a reason to ask for alternative accommodations and/or extension.", "Tips for Success", "Students should critically compare their work with available solutions and against the solutions of fellow classmates.", "Notice of Recording", "To help you decide if you should isolate, you can use the provincial self-assessment tool.", "In the scenario where we must transition back online the following contingencies will be used:", "These materials are made available for the personal use of students registered in the current offering of this course.", "Students may not distribute or reproduce these materials for commercial or non-commercial means.", "In particular:", "Please inform of us these at the start of the course.", "This course includes the independent development and practice of specific skills, such as mathematical proofs and the fitting, interpretation, and assessment of linear models in real applications.", "Library for research-based assignments"]}, {"course_id": 172, "course_code": "SYDE 548", "course_name": "SYDE548 - User Centred Design Methods (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["User Centred Design Methods Winter 2025", "UCD Mentors Pronouns Email Office Extra Help", "This course approaches the design of tasks, tools, products, and systems from a user-centered design perspective.", "Emphasis is on the human factors and usability methods, and techniques that can and should be applied throughout the iterative design process.", "Major topics include user research methods for usability and user experience, inspection methods, user testing, applied statistical analysis.", "SYDE 548 (UCD Methods) approaches the design of tasks, tools, products, and systems from a user-centered design perspective.", "Emphasis is on the human factors and usability methods, and techniques that can and should be applied throughout the iterative design process.", "Major topics include user research methods for usability and user experience, inspection methods, user testing, and applied statistical analysis.", "SYDE 548 User-Centred Design Methods is a technical elective.", "It builds from earlier SYDE core courses in design (SYDE-BME 161 Introduction to Design, SYDE-BME 162 Human Factors in Design, and SYDE-BME 361 Engineering Design).", "Motivated students willing to become familiar with basic human factors engineering can participate and contribute to course activities.", "Whether you are interested in becoming a UCD specialist, a certified ergonomist, or just want to be a wise designer or consumer, this course will supply you with a range of practical tools (methods).", "Our \u201cIn-class\u201d sessions are used as workshops for interactions and hands-on skill development with different UR methods.", "Engineering Graduate Attribute]", "(A) Describe ethical UCD methods used for formal and informal design assessments with human participants.", "(B) Investigate & select appropriate ethical & equitable UCD methods for specific design situations.[2a, 3b, 10b]", "(C) Apply UCD method protocols to instructor-defined design situations.", "(D) Modify UCD method protocols to collect data for a student-defined design project.", "(E) Select and apply appropriate statistical analysis for given UCD data.", "(F) Design ethical UCD test plans for instructor-defined design situations.", "(G) Create User Research Portfolios describing ethical UCD methods, protocols, and lessons learned.", "CEAB Engineering Graduate Attribute", "Knowledge Base for Engineering", "2. Problem Analysis", "Data Analysis Quizzes,", "4. Design", "-", "Impact of Engineering on Society and the Environment", "Ethics & Equity", "Economics & Project Management", "-", "2. Situations of Concern, Design Impacts & Personas Quantifying Usability; Standard UX Questionnaires;", "SUS Scoring (standard and positive versions)", "3. Design Ethnography: UR Safaris & Secondary Research.", "Interviews & Distress Protocols.", "5. Thematic Analysis Methods - Part 1 Thematic Analysis Methods - Part 2", "Formative Design Walkthroughs & Estimating Formative Sample Sizes.", "UR Methods & GenAI Revisited.", "Quantifying the User Experience: Practical statistics for user research.", "An e-copy of the 1st edition can be accessed through UW Library Reserves.", "The User Experience Team of One: A Research and Design Survival Guide. 2nd edition.", "Hanington, B. & Martin, B (2019) Universal Methods of Design (Expanded & Revised): 125 Ways to research complex problems, develop innovative ideas, and design effective solutions.", "An e-copy of the 1st edition can be accessed through UW Library Reserves No", "Design Materials (for workshops, data collection, and analysis).", "The number of students who can access an e-copy at a given time may be limited.", "Since user-centred design and user research skills are valued by industry, it is important that each student submits original work and demonstrates their own value-added UR skills to earn credit for the course.", "Intellectual property includes items such as:"]}, {"course_id": 177, "course_code": "SYDE 584", "course_name": "SYDE584 - Physiological Systems and Biomedical Design (0.50)", "term_name": "List 3", "program_name": "Nanotechnology Engineering", "program_id": 120, "major_id": 5, "major_name": "Nanotechnology Engineering (Bachelor of Applied Science - Honours)", "topics": ["Physiological Systems and Biomedical Design Winter 2025", "04:30PM - 05:20PM", "04:30PM - 05:20PM", "Email: maud.gorbet@uwaterloo.ca", "Email: gganjikho@uwaterloo.ca", "The structure, functions, and properties of major physiological systems (e.g., musculoskeletal, nervous, cardiovascular, and respiratory) will be presented in relation to modelling physiological systems and the design of biomedical devices (imaging, assistive, and diagnostic).", "The structure, functions and properties of some of the major physiological systems (musculoskeletal, nervous, and cardiovascular) will be presented with an engineering science perspective.", "Strong emphasis will be given to mechanical, electrical, chemical and biological properties of tissues and their relation to measurements, modeling human systems, and the design of biomedical devices (assistive, orthopedic and diagnostic).", "Various aspects of physiological system dysfunctions and how they influence measurements and design of medical devices will be discussed.", "Learn and integrate basics of human physiology", "Develop an engineering perspective toward understanding biological functions", "Develop critical thinking skills for solving biomedical problems and designing sound biomedical technologies", "Describe the components/structures of the studied physiological systems (1d)", "Identify the relationship between structure and functions in physiological systems (1d, 3b, 3c)", "Interpret experimental results (graphs, tables, raw data) to evaluate the effects of disease, aging or a medical device on structure and/or function of physiological systems (3c)", "Evaluate biomedical engineering solutions by applying your knowledge of physiology and the scientific methods (2c)", "Develop reasoned solutions to address biomedical problems by applying your knowledge of physiology and engineering principles while considering social-economical-ethical impacts (4b, 4c, 9a, 9b)", "1 Knowledge Base 1d - Demonstrate understanding of specialized engineering knowledge", "2 Problem Analysis 2c - Critically evaluate solutions of engineering problems", "3 Investigation 3b - Gather information from relevant sources to address complex engineering problems", "3c - Synthesize information from multiple sources to reach valid conclusions", "4 Design 4b - Generate and refine potential solutions to complex, open-ended design problems", "4c - Critically evaluate and compare design choices", "9b - Analyze the social, health, safety, and environmental aspects of an engineering project, incorporating sustainability considerations in making decisions", "Week  Date  Topics (physiology & biomedical applications) Learning assessment", "Membrane potential, membrane transport and biological system communications.", "Implications in disease and diagnostics.", "Applications to biomedical engineering.", "Biomedical applications in bone and connective tissues", "7 Feb 24 & Feb 26", "Electrodes for Brain-computer Interface", "9 March 10 & March 12", "Engineering a heart and heart valves", "10  March 17 & March 19", "March 19: LEC & TUT Cancelled (symposium week)", "March 24 & March 26", "Muscle tissue 1: structure and functions", "These will be short and will contain up to 20 multiple choice questions.", "No late submission and no make-up quiz will be organized.", "There will be some opportunities to complete some of these activities remotely in case you were unable to attend.", "These will be also used by Prof Gorbet to evaluate comprehension of concepts and common misunderstandings.", "0 - Submission missing", "1.5 - Good submission: submission demonstrates a clear effort in applying course concepts and/or critical thinking", "Research and design project outline proposals", "The research & design outline proposals are expected to be done in pairs, and will relate to the study of a disease or aging and proposing a novel biomedical solution to characterize, support or replace the affected physiological structure or function.", "Library for research-based assignments", "Email Communication", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:", "Visit them at www.uwaterloo.ca/wcc.", "Course and Departmental Expectations in SYDE", "Along with the right to make adult decisions comes the responsibility and accountability for those decisions and any outcomes.", "The Department of Systems Design Engineering follows University of Waterloo\u2019s general policy: students who self-elect to forgo a deliverable receive a \u201c0\u201d for that deliverable."]}, {"course_id": 3, "course_code": "CIVE 121", "course_name": "CIVE121 - Computational Methods (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 3, "major_name": "Computer Engineering Option", "topics": ["Computational Methods Winter 2025", "08:30AM - 09:50AM RCH 302", "Introduction to computer programming, examples of efficient numerical algorithms for basic scientific computations.", "Programming and problem solving concepts introduced in the course will be incorporated into group projects involving civil, environmental, or geological engineering applications.", "MATLAB is an easy and readable programming language and is an excellent choice for those who are learning programming for the first time.", "Students who complete this course will gain a fundamental understanding of computer programming techniques and be able to operate, analyze, and visualize all types of data for future engineering studies.", "It is an introductory programming course that utilizes MATLAB to illustrate general concepts in computer programming.", "Compose working, efficient, and readable MATLAB scripts in various ways.", "Debug your code to identify and fix programming errors.", "Identify suitable keywords to search for code snippets on the web."]}, {"course_id": 5, "course_code": "CS 116", "course_name": "CS116 - Introduction to Computer Science 2 (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 3, "major_name": "Computer Engineering Option", "topics": ["Introduction to Computer Science 2 Winter 2025", "Monday -", "Monday", "07:00PM - 08:50PM", "E. Dupont", "E. Dupont", "E. Dupont", "10:00AM - 11:20AM MC 4045", "02:30PM - 03:20PM", "08:30AM - 09:20AM", "09:30AM - 10:20AM MC 4042", "10:30AM - 11:20AM MC 4060", "11:30AM - 12:20PM MC 4060", "02:30PM - 03:20PM", "This course builds on the techniques and patterns learned in CS115 while making the transition to use of an imperative language.", "Use higher-order functions to improve the readability and efficiency of programs", "Describe the basic memory model for mutation of basic types, lists, and objects in Python", "Distinguish between constant, linear, quadratic, and exponential running times of algorithms", "Write useful Python programs using console and file input and output for practical tasks", "All times are given in Eastern Time.", "Important!", "In order to maintain a level of success in the course, students should not miss the completion of any modules.", "Students should check their basic tests email to ensure that the code meets the specification exactly.", "Please make sure you do this often!", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments"]}, {"course_id": 6, "course_code": "CS 135", "course_name": "CS135 - Designing Functional Programs (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 3, "major_name": "Computer Engineering Option", "topics": ["Designing Functional Programs Winter 2025", "Monday -", "Monday", "07:00PM - 08:50PM", "08:30AM - 09:20AM", "10:30AM - 11:20AM MC 2034", "Charlie Clarke", "Email: claclark@uwaterloo.ca", "Karen Anderson", "Email: kaanders@uwaterloo.ca", "Email: dbwolff@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Sara Nayar", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "CS135 Problem-solving FAQ", "Assignment Marking Error: Submit a re-mark request, due within one week of release of marks.", "Read Me First", "We hope to guide you through a carefully designed curriculum that introduces you to core concepts in computer science.", "In a typical week, you will move through the following activities:", "You should get a feel for what information is where so you can find it quickly in the future.", "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming.", "Syntax and semantics of a functional programming language.", "Linear and nonlinear data structures.", "Abstraction and encapsulation.", "CS 135 Designing Functional Programs", "CS 135 is for students who would prefer a more conceptual treatment of introductory computer science in a simple language that is educationally effective but not commercially relevant.", "Hardware and Software", "Student labs are equipped with the DrRacket integrated development environment running on networked personal computers.", "References", "How To Design Programs by Felleisen, Findler, Flatt, and Krishnamurthi, MIT Press, 2003.", "Definition of lists, designing functions to process and produce lists, recursive definition of natural numbers, recursive data definitions.", "Non-Linear Structures (6 hours)", "Multi-clausal recursive data definitions, trees, mutually referential data definitions, design methods for complex data, iterative refinement, multiplexing.", "Early development of electronic computers and programming languages.", "History of concepts covered in this course.", "have understanding and experience with the topics in the course outline above", "Drop deadline 25", "Reading Week Starts", "Slides Description", "L01 Values and expressions Prefix notation, exact numbers, Boolean expressions, constants", "L04 Lists List values and expressions, composite data, data definitions", "iClicker pilot", "2024-08-26: CS135 is participating in a pilot comparison of iClicker and Vevox.", "The iClicker subscription should be free.", "iClicker Account", "Racket and DrRacket", "It is also simple and clean enough that we cover computer science content many CS students do not see until later in their CS careers.", "If you submit code written under some other system and it does not work in our currently-supported version of DrRacket, then we consider that code incorrect even if it works for you at home.", "Your work in CS135 will be assessed in a variety of ways.", "Coverage", "Using such off-limits material generally results in a significant loss of marks.", "In general, the basic tests will try to warn you if inappropriate functions and special forms are used.", "Submitting a partially completed solution is a good idea, just in case you don\u2019t get back to it before the due date and to serve as a backup in case your computer breaks or is stolen.", "Email Karen Anderson .", "Email the ISAs and ask them to \u201cmark it for feedback\u201d.", "Testing", "We do several kinds of testing on your submissions:", "Basic tests", "Each time you submit before the due date, we run a set of \u201cbasic tests\u201d on your submission.", "It\u2019s amazing how many fatal errors can appear during last-minute tidying up!", "Do not make your last submission immediately before the deadline \u2013 it gives you no time to check the Basic Test results and respond, if needed.", "The numeric mark appearing on the basic test marksheet is only for guidance.", "After the submission deadline we run a second set of tests to assess your code, including:", "These post-deadline tests and hand-marking form your mark for the assignment.", "If you procrastinate long enough, this rule can easily cause you to fail the course.", "We won\u2019t rehash the above policies, but we do want to make them concrete for CS135.", "A specific assignment may give exceptions to the above.", "You are welcome to use these tools to help you understand the course material, but you should not:", "cut-and-paste your assignment code into them for debugging assistance.", "Also, these tools will not be available when you write the exam, so you need to understand how to solve these problems yourself in order to pass the course.", "attempting to run malicious code during the submission or marking process."]}, {"course_id": 12, "course_code": "MSE 121", "course_name": "MSE121 - Introduction to Computer Programming (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 3, "major_name": "Computer Engineering Option", "topics": ["Introduction to Computer Programming Winter 2025", "11:30AM - 12:20PM DWE 3519", "10:30AM - 11:20AM DWE 3522A", "Friday -", "Friday", "02:30PM - 05:20PM", "An introduction to computer programming using a high level programming language.", "Concepts and topics covered include the basic components of algorithms (primitive operations, variables, sequencing operations, conditionals/branching, repetition/loops, subroutines/functions), problem decomposition, abstraction, testing and debugging, pseudo-code, file based input and output, use of a modern development environment including a symbolic debugger, good coding style, pointers/references, and basic data structures (arrays, records, objects).", "Identify syntax errors in Python code.", "Design and implement functions to solve small problems.", "Design]", "Design and implement programs to solve complex problems by decomposition.", "Design]", "Critique their own and other's code and use that feedback to refactor and improve the code.", "Design]", "Understand the basics of objects and their implementation.", "Understand how computers store numbers and text in a binary representations.", "Introduction to programming.", "Basic operations: arithmetic, expressions, simple I/O.", "Boolean logic and operators.", "An online copy can be rented for the duration of the course from VitalSource ( https://www.vitalsource.com/en-ca/products/python-programming-an-introduction-to-computer-john-m-zelle-v9781590282984 )/", "Projects may have multiple components with multiple deadlines.", "An excused absence for the final exam will be handled on a case by case basis.", "Plagiarism software and alternatives: Plagiarism detection software will be used to screen assignments in this course.", "UW-Learn and Campuswire", "Failure to follow these classroom rules will result in a 3 stage escalation process:", "Do not contact the instructor by phone except in the case of emergency.", "Do not \u201cdrop in for a quick question\u201d.", "No material may be copied from any source except when you must copy something as part of your answer, and in these cases, you must quote the copied material and cite the source.", "As much as possible, discussions of computer programs should be at the level of pseudo-code and not at the level of real computer code.", "Working in groups can be a great way to learn material better and faster.", "Examples", "Copying even one line source code.", "Bob sends her his code which shows him using a while loop and Aarti copies the lines of code that implement the loop.", "Roberto: providing code]", "Sally helps Harish step through his code and find the bug.", "Harish and Sally acknowledge their collaboration.", "Unacceptable Behavior: Mary asks ChatGPT to solve the homework and then submits portions of code from ChatGPT as her own.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 15, "course_code": "SYDE 121", "course_name": "SYDE121 - Digital Computation (0.50)", "term_name": "List 1", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 3, "major_name": "Computer Engineering Option", "topics": ["08:30AM - 10:20AM E5 6008", "RCH 301", "RCH 301", "Fatima Syeda: f2syeda@uwaterloo.ca", "Use structured and object-oriented programming techniques to solve engineering problems (2)", "Apply software debugging tools and techniques during software development (5)", "Introduction, Basics of Computer Systems Sections 1.1 (Computer Systems) and 1.2 (Programming and Problem Solving)", "Variables and Data Types, Control Flow Basics, Testing and Debugging Sections 1.3-1.4 (Introduction to C++, Testing and Debugging), 2.1-2.3 (Variables and Assignments, Input and Output, Data Types and Expressions), Sections 2.4-2.5 (Flow of Control, Program Styling) and 3.1-3.2 (Boolean Expressions, Multiway Branches)", "Designing Loops, Top-Down Design, Function Declaration and Definition (Revisit) Sections 3.3-3.4 (Designing Loops), Sections 4.1-4.3 (Top-Down Design, Designing Functions), Sections 4.4-4.6 (Procedural Abstraction, Scope Rules, Overloading)", "Procedural Abstraction, Overloading Functions, Call by Reference Sections 5.1-5.3 (More on void Functions, Call by Reference Parameters, Functions Calling Other Functions), Sections 5.4-5.5 (Stubs and Drivers, Debugging Functions), Sections 7.1-7.4 (Introduction to Arrays, Arrays in Functions, Multidimensional Arrays)", "Debugging Functions, Arrays in functions   Quiz#2 (Oct 9)", "Vectors and STL Types, C-Style Strings, C++ String Class Sections 8.1-8.3 (An Array for Strings, String Class, Vectors)", "Structures and Classes, Abstract Data Types, Object Oriented Design Sections 10.1-10.3 (Structures, Classes, Abstract Data Types)", "Pointers and Dynamic Memory Basics, Smart Pointers Sections Sections 9.1 & 9.2 (Pointers, Dynamic Memory) LabAssignment #3 due", "G. J. Bronson: \u201cC++for Engineers and Scientists\u201d.", "Send a note via email to the course instructor clearly stating the grading item that you want remarked Attach supporting evidence for your case including screenshots of the pages that need to be regraded.", "A student must save a copy of the submitted work on his or her personal computer or personal file system in case of any website problem.", "Sign your email with your first and last name and your student number.", "While we will do our best to respond to your emails as soon as possible, allow a couple of hours (excluding weekends) for a response to your email.", "When in doubt please be", "Workshops will be delayed or transitioned to an online session on a case-by-case basis.", "To facilitate a delay, a workshop session may be replaced with a lecture delivered in an online format.", "Compassionate and respectful communication: Most online communication between the Department and students will be done through LEARN and/or email.", "Along with the right to make adult decisions comes the responsibility and accountability for those decisions and any outcomes.", "The Department of Systems Design Engineering follows UW\u2019s general policy: students who self-elect to forgo a deliverable receive a \u201c0\u201d for that deliverable."]}, {"course_id": 18, "course_code": "CS 138", "course_name": "CS138 - Introduction to Data Abstraction and Implementation (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 3, "major_name": "Computer Engineering Option", "topics": ["Introduction to Data Abstraction and Implementation Winter 2025", "10:30AM - 12:20PM", "10:00AM - 11:20AM RCH 302", "11:30AM - 12:20PM RCH 302", "11:30AM - 12:20PM MC 2034", "Email: migod@uwaterloo.ca", "Alireza Shaeri", "Email: cs138@uwaterloo.ca", "Email: w352chen@uwaterloo.ca", "Aniruddhan Murali", "Email: a25mural@uwaterloo.ca", "Email: w2ren@uwaterloo.ca", "Hanna Derets", "Email: sfking@uwaterloo.ca", "Office Hours: Scheduled by email and held through Microsoft Teams", "Software abstractions via elementary data structures and their implementation; encapsulation and modularity; class and interface definitions; object instantiation; recursion; elementary abstract data types, including sequences, stacks, queues, and trees; implementation using linked structures and arrays; vectors and strings; memory models; automatic vs. dynamic memory management.", "Understand and apply object-oriented programming concepts.", "Write object-oriented code that manipulates linked data structures.", "Write code without memory errors in a memory-unsafe programming language.", "Operating system and Unix concepts, programming language concepts", "Introduction to C++ concepts (3 hours)", "ADT and their implementations as linked structures (12 hours)", "The C/C++ memory model: pointers vs references, stack vs freestore", "Implementing and travesing linked structures", "Space and time complexity of solutions", "Simple testing and debugging strategies", "Object-based computing (9 hours)", "Class definitions, instantiation, object construction and destruction", "Objects vs pointers to objects", "Interface design and abstraction, responsibility allocation", "The adapter design pattern", "Introduction to object-oriented programming (9 hours)", "Introduction to inheritance and its implementation in C++", "Introduction to generics, type parameterization, and C++ templates", "The template method design pattern", "Use of generic data containers and the Standard Template Library", "Design heuristics and strategies for object-oriented programming", "-marking is intended for situations where minor changes result in major mark boosts (i.e. a forgotten semicolon failed 4/5 secret cases).", "A better title would be something like \"Iterating Over a Vector\" or \"Question About Maps.\"", "This course includes the independent development and practice of specific skills, such as as writing and reading code, tracing, and algorithm design.", "Library for research-based assignments"]}, {"course_id": 19, "course_code": "CS 146", "course_name": "CS146 - Elementary Algorithm Design and Data Abstraction (Advanced Level) (0.50)", "term_name": "List 2", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 3, "major_name": "Computer Engineering Option", "topics": ["Elementary Algorithm Design and Data Abstraction (Advanced Level)", "Monday -", "Monday", "07:00PM - 08:50PM", "02:30PM - 03:20PM", "Brad In-person MC 6427", "On-line Consulting Hours: Microsoft Teams", "CS 146: Elementary Algorithm Design and Data Abstraction (advanced version)", "To familiarize students with key concepts in introductory computer science from an imperative perspective and to contrast this with the functional perspective taken in CS 145;", "To allow students to complete the CS portion of their Math core requirements and, if desired, to continue on to second-year core courses in CS;", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "Introduction to C and elementary mutation in Scheme", "The memory model.", "Variable declaration, assignment and infix expressions in C. Basic I/O in C. Compilation.", "Algorithm analysis in C. File I/O in C and Scheme.", "Program organization and testing methods.", "Space analysis in C and Scheme.", "Mutable lists, queues, deques, and trees in C. Time-space tradeoffs among mutable and immutable ADT implementations.", "Low-level abstractions", "Pointer arithmetic in C. Arrays in C and vectors in Scheme.", "Strings in C. Elementary hashing.", "Libraries in C and Scheme.", "Implementing high-level abstractions", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "The provided slides are not a substitute for attendance in any first-year CS course, but in CS 146, there are no slides, and the lecture summaries made available after lecture are an even worse substitute for attendance.", "Lectures will involve the development of ideas summarized very tersely in the handouts, as well as on-the-fly development of code, analyses, and proofs.", "CS145 and CS146 were originally designed as a year-long unit of curriculum, but eventually the individual courses drifted in their own directions.", "1.1 A note on logistics", "1.2 Review of forms of recursion and associated proof techniques", "1.3 In preparation for side effects", "1.4 Output", "1.5 Input", "1.6 First Introduction to C", "1.8 Memoization", "1.9 Mutation in C", "1.11 Boxes in C", "1.12 Advanced mutation", "1.13 Aliasing in C", "1.14 Memory and vectors", "1.15 Vectors in Racket", "1.16 Arrays in C", "1.18 ADTs in C; Amortized Analysis", "2 SIMPL: a simple imperative language", "2.1 Syntax and informal semantics", "2.2 Examples in several languages", "2.3 Formal semantics", "2.5 Proving imperative programs correct", "A primitive imperative language", "3.1 A primitive imperative language", "3.2 The PRIMPL simulator", "3.4 The SIMPL to A-PRIMPL compiler", "3.6 Strings in C", "3.7 Adding functions to SIMPL", "3.8 Adding both arrays and functions to SIMPL", "3.9 Implementing lists in PRIMPL", "4 MMIX: a realistic instruction set", "4.1 A more realistic processor", "4.2 The MMIX architecture", "4.2.1 Branches and Jumps", "4.2.2 Example", "4.2.3 Software Interrupts", "4.2.5 A Problem with Branches and Jumps", "4.4 Towards a SIMPL to MMIX compiler", "5.1 Storing primitive values", "5.3 Managing memory", "5.4 Structural and pointer equality", "5.5 Function application in a Racket interpreter", "5.7 Justifying the cost of Racket primitives", "5.8 Moving towards implementation in an imperative language", "6.2 Zippers", "6.3 A continuation-passing interpreter", "6.6.2 Mark-and-sweep", "6.6.3 Copying garbage collection", "6.7 Heterogeneous Data in C", "6.8 Multidimensional Arrays in C", "6.10 Variable-length Argument Lists", "7.1 Continuation-passing style", "7.2 Exception handling", "7.3 Undelimited continuations", "7.4 Delimited continuations", "7.5 Racket\u2019s implementation of continuations", "In CS 146, we will examine the imperative paradigm, and compare and contrast the way that efficient algorithms and data structures are designed in imperative and functional languages.", "Racket is a laboratory for current research on aspects of functional programming languages, and we will continue to look at interesting topics in this area, perhaps at the cost of some coherency in the flow of material.", "They will not be due each week on the same day, as is common in the other first-year CS courses and the first-year Math courses.", "Assignment questions are the main way to reinforce and deepen your understanding of the concepts and skills discussed in lecture.", "You will submit program files electronically to the Marmoset system , which runs tests on your code and informs you of the results fairly rapidly.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "(Please also note that we may use the trends in a student's submission history to estimate the likelihood of other forms of cheating as well.)", "Library for research-based assignments"]}, {"course_id": 26, "course_code": "BME 393", "course_name": "BME393 - Digital Systems (0.50)", "term_name": "List 3", "program_name": "Options: Faculty of Engineering", "program_id": 122, "major_id": 3, "major_name": "Computer Engineering Option", "topics": ["Digital Systems Winter 2025", "11:00AM - 12:20PM E7 4417", "omar.alburaiki@uwaterloo.ca", "Email omar.alburaiki@uwaterloo.ca", "Topics will be reinforced in the context of biomedical microcontrollers and sensors used in physiological monitoring and clinical support systems.", "Topics will be reinforced in the context of biomedical microcontrollers and sensors used in physiological monitoring and clinical support systems.", "Analyze internal components of digital systems and their technical details", "2. Explain the importance of digital systems and computer architecture for biomedical applications", "4. Use biomedical controllers and sensors to design digital systems", "5. Design digital systems that are reliable (observed behavior matches specifications), safe (avoid putting human lives in danger even in presence of errors and failures), and robust (ability to handle unspecified inputs and state)", "Week6# Sequential Circuits and Sequential Logic Design", "Week7# More on Sequential Circuits and Sequential Logic Design", "Week8# Microcontroller Architecture and Interfacing, Timers/Counters", "Week10# Microprocessor Architecture, Datapath Design", "Week12# Microprocessor Pipelined Design", "Week13# More on Microprocessor Pipelined Design", "Harris and Harris: \u201cDigital Design and Computer Architecture\u201d.", "Each of these assignments may include analytical, numerical (using Falstad) and explanatory components exploring fundamental aspects of the material covered in the course."]}]