[{"course_id": 108, "course_code": "ECE 409", "course_name": "ECE409 - Cryptography and System Security (0.50)", "term_name": "List 3", "program_name": "Computer Engineering", "program_id": 39, "major_id": 2, "major_name": "Computer Engineering (Bachelor of Applied Science - Honours)", "topics": ["Cryptography and System Security Winter 2025", "04:00PM - 05:20PM", "08:30AM - 09:50AM E7 5353", "Introduction to cryptology and computer security, theory of secure communications, points of attack, conventional cryptographic systems, public key cryptographic systems, standards, firewalls, wireless system security, applications.", "View requirements for ECE 409", "This course will provide introduction to  cryptography and system security.", "It covers  basic concepts in cryptography and system security,   types of attacks, trust and threat models,  pseudorandomness, computational security,  symmetric-key  cryptography,  public-key cryptography,   attacks on cryptographic operations,   network security protocols,   wireless system security and privacy,  applications in IoT systems,   special topics on  privacy preserving  AI,   quantum key  distribution and post-quantum cryptography.", "Explain the principles of cryptography and system security.", "Explain how practical schemes of symmetric-key cryptography and public-key cryptography are designed and implemented.", "Analyze the security and privacy protections in wireless systems and their applications in IoT.", "Apply security principles to solve problems in concrete applications.", "Introduction  to Cryptography  and System Security", "Cryptography and cryptanalysis", "Basic protections: encryption and authentication", "Classification of cryptosystems", "Basic  concepts of secure systems.", "Types of attacks,  trust and threat model", "Computational security and one-way functions", "Chapter 3. Symmetric-key Cryptographic Systems", "Arithmetics of binary finite fields", "Secure hash functions: SHA1, SHA2 and SHA3", "MAC and forgery attack", "Time-memory trade-off attacks and attacks by AI", "Public-key Cryptographic Systems", "Arithmetic operations", "Security of public-key cryptography (factorization, DL, LWE)", "Practical public-key systems (DH, RSA, DSA, ECC)", "Fault side-channel attacks", "Network Security Protocols", "Implementing secure systems:  PKI  and  X.509 certificates", "Hop-by-hop versus end-to-end protections and VPN", "Chapter 6. Wireless System Security", "5G security architecture for IoT security and privacy", "Privacy preserving machine learning: secret sharing; securing federate learning", "Basic concepts for quantum cryptography", "Quantum key distribution", "Post-quantum cryptography", "Communication System Security L.L. Chen and G. Gong", "R. Anderson, Security Engineering A Guide to Building Dependable Distributed Systems, Wiley, 2014 (Anderson14).", "Schneier on Security, http://www.schneier.com/blog/. A blog covering current computer security and privacy issues.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 113, "course_code": "ECE 432", "course_name": "ECE432 - Radio Frequency Integrated Devices and Circuits (0.50)", "term_name": "List 3", "program_name": "Computer Engineering", "program_id": 39, "major_id": 2, "major_name": "Computer Engineering (Bachelor of Applied Science - Honours)", "topics": ["Radio Frequency Integrated Devices and Circuits Spring 2024", "08:30AM - 09:50AM E7 4433", "S. Su", "04:00PM - 05:20PM", "An introduction to the theory and practice of Radio Frequency (RF) Integrated Circuit design.", "Physics and modelling of RF integrated components such as resistor, inductor, capacitor (RLC) passives, diodes, metal oxide semiconductor field-effect transistors (MOSFETs), high electron mobility transistors, hetero-junction bipolar transistors.", "An introduction to radio frequency and high-speed integrated circuit design.", "Topics include physics and modelling of passive components (diode, R, L, C, transformer, and transmission line) and transistors (MOSFETs and BJTs) on a silicon chip; design of transistor-level circuit building blocks, including wideband/tuned amplifiers, frequency synthesizers (e.g., oscillators, phase-locked loops), mixers and multipliers, power amplifiers, filters; signal processing and conditioning techniques and analysis of modern communication and computing systems.", "Innovative and complete designs may be good candidates for peer-reviewed publications in IEEE CASS and SSCS.", "Students will use industry-standard design tools and flows, with potential for top designs to be ported to advanced CMOS technologies, fabricated, and measured at UWaterloo.", "Analyze and design the main circuit blocks of a modern transceiver", "Specify components, circuits and sub-systems for use in high-speed/RF circuits", "Describe the behavior of RF and high-speed systems in terms of sensitivity, dynamic range, etc.", "Device Physics and Modeling (Diode, MOS and BJT)", "Amplifiers (Basic Topologies and Biasing) Homework 1", "Impedance Matching and Filters Homework 2", "Tuned Amplifiers (Narrowband LNAs) Lab 3", "Communication and Computing Systems Lab 4", "Signal Processing and Modulation Techniques Homework 4", "Mixers and Multipliers Lab 5", "Power Amplifiers, Nonlinearity and Distortion Homework 5", "A. S. Sedra & K. C. Smith, Microelectronic Circuits 8th edition Yes", "laptop/desktop used for simulations Yes", "If you miss both exams, it will be handled on a case-by-case basis."]}, {"course_id": 115, "course_code": "ECE 444", "course_name": "ECE444 - Integrated Analog Electronics (0.50)", "term_name": "List 3", "program_name": "Computer Engineering", "program_id": 39, "major_id": 2, "major_name": "Computer Engineering (Bachelor of Applied Science - Honours)", "topics": ["Integrated Analog Electronics Winter 2025", "11:30AM -", "04:00PM - 05:20PM", "08:30AM - 09:50AM E7 4433", "Email", "Analog electronics exploits the physical behaviour of electronic devices to create electronic systems.", "The performance of single and multiple transistor amplifying stages are studied.", "Followed by a study of biasing, current mirror, and output stages, which are then combined in the study of operational amplifier circuits.", "Frequency response and feedback are then reviewed leading to a detailed study of stability and compensation for multistage and operational amplifiers.", "View requirements for ECE 444", "Analog integrated circuits (ICs) exploit the physical behaviour of electronic devices to create electronic systems.", "We will study the performance of single- and multiple-transistor amplifying stages.", "This is followed by a study of biasing, current mirrors, and output stages, which are then combined in the study of operational amplifiers.", "We then review frequency response and feedback, leading to a detailed study of stability and compensation for multistage and operational amplifiers.", "We will mostly study complementary metal-oxide-semiconductor (CMOS) circuits, but will use bipolar junction transistors (BJTs) for certain applications.", "The course finishes with a look at switched-capacitor circuits and data converters, including analog-to-digital converters (ADCs) and digital-to-analog converters (DACs).", "The knowledge and skills you will learn in this course will prepare you to:", "Pursue graduate studies in IC design (this is usually necessary to work as an IC designer in industry).", "Analyze and design some common analog IC components.", "Model and simulate analog IC components at different levels of abstraction.", "MOSFETs: regions of operation, small-signal models, body effect, weak inversion, intrinsic gain, and transition frequency", "Cascode operational transconductance amplifiers (OTAs) and Gm-C filters", "Current and voltage references", "CMOS two-stage OTA and frequency compensation", "Power amplifiers and output stages", "Data converters", "**NOTE:", "Closed book and closed notes", "Non-programmable, non-graphing scientific calculator is allowed", "A formula sheet will be provided", "The labs involve using LTspice from Analog Devices to design and simulate various circuit blocks using a commercially-available CMOS IC technology.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills, such as circuit simulation.", "Library for research-based assignments"]}, {"course_id": 117, "course_code": "ECE 451", "course_name": "ECE451 - Software Requirements Specification and Analysis (0.50)", "term_name": "List 3", "program_name": "Computer Engineering", "program_id": 39, "major_id": 2, "major_name": "Computer Engineering (Bachelor of Applied Science - Honours)", "topics": ["Software Requirements Specification and Analysis Winter 2025", "10:00AM - 11:20AM MC 2035", "Email:x784chen@uwaterloo.ca", "Email: ar2elsha@uwaterloo.ca", "Email: d3pang@uwaterloo.ca", "Models, notations, and processes for software requirements identification, representation, analysis, and validation.", "ECE 451: View requirements for ECE 451", "The week of", "Deliverables", "1 Introduction", "3 RE Reference Model", "Jan 13 4 Domain Model 4 Domain Model D0 \u2013 Group members & Project idea", "Jan 27 7 Functional Modelling 8 OCL D1 \u2013 Domain Model & Stakeholders", "Feb 10 10 Quality Requirements 10 Quality Requirements D2 -  Use case Diagram & Description", "Feb 24 11 Requirements Conflict management 12 Prioritizing Requirements D3 \u2013 Functional Model & OCL", "Mar 3 13 Cost Estimation 14 Risk Analysis D4 \u2013 State Diagram", "Mar 17 15 Temporal Logic 16 Validation and Verification D5 \u2013 Cost Estimation & Risk Analysis", "Mar 31 17 Software Project Management 18 Requirement Engineering for AI Systems D6 - Quality Attributes and Temporal Logic", "Ability to separate requirements from specifications from domain assumptions and argue that a specification + domain assumptions satisfy requirements", "Ability to model requirements in a variety of modelling paradigms", "Ability to elicit and document non-functional requirements such that the to-be-developed software can be objectively tested for their satisfaction", "Ability to use tools to manage a Software Development Team.", "Why is requirements analysis complex?", "Functions as a modelling notation.  Pre- and post-conditions.", "Use-case diagrams.", "Functions over a class diagram.", "Modelling dynamic behaviour of a software system.", "UML State Machines.", "Specification patterns.", "7: Model Integration (1 hour)", "The expected contents and organization of a Software Requirements Specification (SRS).", "AI vs non-AI Systems based on what we covered in this course.", "Braek and Haugen, Engineering real-time systems: an object-oriented methodology using SDL, Prentice-Hall, 1993.", "Larman, Applying UML and Patterns, Prentice Hall, 2004.", "Maciaszek, Requirements Analysis and System Design, Addison Wesley, 2001.", "Bray, An Introduction to Requirements Engineering, Addison-Wesley, 2002.", "Nuseibeh and Zave, Software Requirements and Design:", "van Lamsweerde, Requirements Engineering: From System Goals to UML Models to Software Specifications, Wiley, 2009.", "Brooks, The Design of Design, Addison Wesley, 2010.", "Alan Davis, Just Enough Requirements Management: Where Software Development Meets Marketing, Dorset House Publishing, 2005.", "The project can be related to requirements engineering or a more general software engineering topic.", "This course includes the independent development and practice of specific skills, such as [fill this in with your discipline-specific skills].", "Library for research-based assignments"]}, {"course_id": 122, "course_code": "ECE 457A", "course_name": "ECE457A - Co-operative and Adaptive Algorithms (0.50)", "term_name": "List 3", "program_name": "Computer Engineering", "program_id": 39, "major_id": 2, "major_name": "Computer Engineering (Bachelor of Applied Science - Honours)", "topics": ["Co-operative and Adaptive Algorithms Fall 2024", "ECE 457A", "E7 3343", "\u2022 Huda Diab Abdulgalil: Email hdiababd@uwaterloo.ca", "The course starts by addressing the ill-structured problems and need for computational intelligence methods.", "It introduces the concepts of heuristics and their use in conjunction with search methods, solving problems using heuristics and metaheuristics, constraints satisfaction.", "The course also introduces the concepts of co-operation and adaptations and how they are influencing new methods for solving complex problems.", "The course starts by illustrating how the concepts of co-operation and adaptation are manifested in nature and how such models are inspiring new types of solutions methods.", "Topics to be covered include search algorithms, game playing, constraints satisfaction, meta-heuristics, evolutionary computing methods, swarm intelligence, ant-colony algorithms, particle swarm methods, adaptive and learning algorithms and the use of these algorithms in solving continuous and discrete problems that arise in engineering applications.", "View requirements for ECE 457A", "Motivate the need for algorithms that exhibit a degree of intelligence: logical, computational, and biologically inspired.", "Introduce the concepts of cooperation and adaptations and how they are influencing new methods for solving complex problems.", "Illustrate the use of these algorithms in solving continuous and discrete, and machine learning problems", "Introduction: About this course, AI, Adaptation, Cooperation, goals and definitions of artificial intelligence;", "ill-structured problems and need for approximate algorithms, cooperation and adaptation in nature.", "Search: state space problem formulation and representation;", "use of heuristic search methods and meta-heuristic algorithms", "Trajectory Methods: Tabu search", "Engineering use cases", "Engineering use cases", "Mathematical Models of Genetic Algorithms", "Introduction to Swarm Intelligence: cooperation and adaptation methods inspired by nature.", "Engineering use cases", "Engineering use cases", "Evolutionary Programming: Continuous and Discrete EP", "Finite State Machine Optimization", "Evolutionary Strategies", "Self-Adaptive Evolution Strategies", "Introduction to evolutionary computing Introduction to evolutionary computing, by Eiben and A, Smith, J.E, Springer, Berlin, 2003.", "Search and Optimization by Metaheuristics Techniques and Algorithms Inspired by Nature Search and Optimization by Metaheuristics Techniques and Algorithms Inspired by Nature Ke-Lin Du, M. N. S. Swamy No", "Search Algorithms Types: Breadth and Depth First Search Algorithm Search Algorithms Types: Breadth and Depth First Search Algorithm Merium Hazem Anwar Labib Bishara, Merihan Hazem Anwar Labib Bishara No", "**The lecture notes are copy-right protected material.", "Such behaviour includes:", "Adhering to the principles of academic integrity when conducting and reporting research.\u201d"]}, {"course_id": 123, "course_code": "ECE 457B", "course_name": "ECE457B - Fundamentals of Computational Intelligence (0.50)", "term_name": "List 3", "program_name": "Computer Engineering", "program_id": 39, "major_id": 2, "major_name": "Computer Engineering (Bachelor of Applied Science - Honours)", "topics": ["Fundamentals of Computational Intelligence Winter 2025", "ECE 457B", "Monday, Friday -", "10:00AM - 11:20AM E7 5353", "04:00PM - 05:20PM", "Da Saem Lee : ds3lee@uwaterloo.ca", "Communication and Discussion", "If you really have a critical time issue, or you don't want the TA's to see the message (for any reason at all), then you should send Prof. Crowley a direct message on Teams chat in addition to email.", "Model-based prediction and classification.", "Multiple examples and case studies such as autonomous driving, intelligent manufacturing, natural language understanding, speech recognition, computer vision, stock market prediction, disease early detection and diagnosis.", "View requirements for ECE 457B", "It encompasses a broad spectrum of supervised learning topics, including nonparametric and parametric models, linear and nonlinear approaches, deep learning paradigms, and probabilistic models.", "Theoretical knowledge is translated into practice through tutorials on industry-standard tools such as PyTorch and Keras.", "Interactive classroom discussions will pivot around both the practical trade- offs inherent in real-world applications and the theoretical underpinnings that provide an intuitive grasp of the field.", "These topics are an outline, and each year some subset of non-core topics will be skipped due to time constraints and in order to benefit students through deeper focus.", "Classification I", "Distance based - k-Nearest Neighbours (kNN)", "Fundamentals of Parameter Estimation and Learning", "MAP Implementation as Classification: Naive Bayes Algorithm", "Dimensionality Reduction and Manifold Learning", "Vector Embeddings : TF-IDF, Word2Vec, BERT", "Kernel Methods and Latent Models", "k-Means Algorithm, DBScan Algorithm", "Anomaly Detection: Classification, Outlier, Density, and Isolation based", "Classification III : Data, Image and Time-series classification using Deep Learning", "Representation Learning II: Auto-encoders and Variational Auto-Encoders", "Attention and Transformer Networks", "Some additional information and links might be here for older courses.", "A visual grading tool for pdfs submissions of tests and assignments, allows limited online test with mark-down text entry and multiple choice questions.", "Some assignments and tests might be made available online for submission using this tool as well.", "Arxiv Tutorials - pdfs will be posted to hypothes.is and others links will be provided to a number of detailed tutorials on some course topics.", "The first half covers many of basics of this course, while the second half focusses on Deep Learning only.", "Exams", "Completing the assignments will require multiple skills:", "familiarity with statistical, probabilistic analysis of data and results", "logical design and clear description of a expeirmental methodology", "programming various algorithms for processing, training and analysis of data to achieve given tasks (programming will be in Python using libraries such as sci-kit learn and tensorflow, pytorch, pandas)", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 124, "course_code": "ECE 457C", "course_name": "ECE457C - Reinforcement Learning (0.50)", "term_name": "List 3", "program_name": "Computer Engineering", "program_id": 39, "major_id": 2, "major_name": "Computer Engineering (Bachelor of Applied Science - Honours)", "topics": ["04:00PM - 05:20PM E7 4043", "Introduction to reinforcement learning (RL) theory and algorithms for learning decision-making policies in situations with uncertainty and limited information.", "Suggested Background", "The course will use some concepts from ECE 203 and ECE 307 on Bayesian Probability and Statistics, these will be reviewed but familiarity will help significantly.", "All other concepts needed for the course will be introduced directly.", "Identify and Explain the component theoretical concepts of Reinforcement Learning systems.", "Evaluate the performance of a particular RL system on a given domain through proper experimental design, statistical analysis and visualization", "Assess and critique the applicability of general RL concepts and specific RL algorithms to various problem tasks in Data Science, Artificial Intelligence, Planning, Control, and Machine Learning.", "Motivation and Context", "Importance of reasoning and decision making about uncertainty.", "Decision making under uncertainty:", "Theory, Bellman equations", "Value Iteration, Policy Iteration", "Other variants of these", "Value Function Approximation", "supervised training, back-propagation", "Experience replay buffers, mini-batch training and other methods of training and architecture", "Actor-Critic methods", "Decision Transformers", "Other Uses of RL Concepts", "Human Preference Elicitation - especially for Foundation Models and Large Language Models", "Moral Psychology - theories on human moral reasoning rely heavily on RL concept", "Wrap-up and Review", "Dimitrakakis2019", "Once you get through the first half of our course, many of the concepts on this site will be familiar to you.", "Family Tree of Algorithms - Here, a list of algorithms at the cuttingedge of RL as of 1 year ago to so, so it'sa good place to find out more.", "But in a fast growing field, it may be a bit out of date about the latest now. https://spinningup.openai.com/en/latest/spinningup/rl_intro2.html", "Piazza : ECE457C Discussions - TBD", "A visual grading tool for pdfs submissions of tests and assignments, allows limited online test with mark-down text entry and multiple choice questions.", "Some assignments and tests might be made available online for submission using this tool as well.", "Assignment will involve a mixture of short answers, mathematical solutions, programming in python and reporting of results of performance and outcomes of trained RL policies on provided simulated environments.", "Recipe for success:", "University can be a challenging environment and it is normal to need support from time-to-time.", "see these slides on university policy for COVID-19 safety once in-person classes begin again.", "If the student has a medical reason why they cannot wear a mask they should contact the professor electronically and provide proof of this.", "Whena student asks or answersa question it may be difficult for them to be heard while wearing a mask.", "Students can find the Illness Self-declaration form in the  Personal Information section of Quest.", "Library for research-based assignments", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 126, "course_code": "ECE 459", "course_name": "ECE459 - Programming for Performance (0.50)", "term_name": "List 3", "program_name": "Computer Engineering", "program_id": 39, "major_id": 2, "major_name": "Computer Engineering (Bachelor of Applied Science - Honours)", "topics": ["ECE 459", "Monday, Friday -", "08:30AM - 09:50AM E7 5353", "04:00PM - 05:20PM", "Monday, Friday -", "04:00PM - 05:20PM", "11:30AM -", "07:00PM - 07:50PM E7 5353", "07:00PM - 07:50PM E7 5353", "About Prof. Zarnett", "Then I got the AIF in the mail and decided I didn't want to study Computer Engineering after all.", "I'm an Associate Professor of Electrical and Computer Engineering.", "Some of you will know me as the previous Director of Software Engineering from back when you were in 1A. I studied math/CS yet convinced PEO to license me as a P.Eng.", "My research interests focus on using compiler and static analysis techniques to ensure program correctness.", "The LI is responsible for technical matters related to the assignments: git.uwaterloo.ca, git in general, administering the systems where you need to run your labs.", "And I enjoy engaging in discussions about these fields.", "Thanushon Sivakaran <tsivakar@uwaterloo.ca>", "Profiling computer systems; bottlenecks, Amdahl's law.", "View requirements for ECE 459", "Many modern software systems must process large amounts of data, either in the form of huge data sets or vast numbers of (concurrent) transactions.", "This course introduces students to techniques for profiling, rearchitecting, and implementing software systems that can handle industrial-sized inputs.", "These techniques will enable you to design and build critical software infrastructure, especially in an age of Big Data.", "While you may have seen some of these ideas in the context of operating systems (ECE350/SE350/CS350/MTE241) and concurrency (ECE252/CS343), this course gives you tools to make code run faster.", "Design and apply techniques for profiling, rearchitecting, and implementing software systems that can handle industrial-sized inputs.", "We intend to use these slots until we reach the end of the course material.", "The notes cite a number of sources, some of which are useful books.", "Rust familiarization and use of nonblocking I/O;", "Auto\u2010grading and auto\u2010feedback systems, including marmoset, may be used for the evaluation of some of your assignments.", "Acceptable collaboration includes discussing ideas and structures with others, as well as helping others debug their code.", "If your code is too close in structure to someone else's code, you are going to have a problem.", "Or, let's sum this up in two short instructions:", "The teaching team is keenly aware of the existence of generative AI (e.g., Github Copilot, ChatGPT) and how such tools can be used to write and test code.", "It almost goes without saying, but we ask you to be respectful and polite when communicating via this medium and to assume the best about others, as tone can be di\ufb03cult to interpret on a discussion forum.", "The human visual system has evolved to perceive saber\u2010toothed tigers in the savannah.", "We encourage everyone to be respectful of their classmates and to not distract them.", "Wise use of computers and the Internet can be helpful for fully engaging in class.", "From the command prompt, you can use compilers and text\u2010mode web browsers (w3m, lynx, links/elinks, etc....) tmux may also be helpful in managing multiple terminal sessions.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 128, "course_code": "ECE 463", "course_name": "ECE463 - Design and Applications of Power Electronic Converters (0.50)", "term_name": "List 3", "program_name": "Computer Engineering", "program_id": 39, "major_id": 2, "major_name": "Computer Engineering (Bachelor of Applied Science - Honours)", "topics": ["Notice of Recording", "Design and Applications of Power Electronic Converters Spring 2024", "11:30AM -", "04:00PM - 05:20PM", "Switching characteristics of power semiconductor devices.", "Computer simulation of power electronic circuits.", "Analysis, design, and applications of power converters.", "Introduction to power electronics.", "Input and output filter design.", "Analysis, design, average modeling, control, and applications of power electronic converters.", "Design input/output second-order low-pass L-C filters for power electronic converters.", "Describe switching characteristics of power semiconductor devices.", "Quantify switching and conduction losses, and efficiency, in power electronic converters.", "Analyze, Design, model and control DC/DC and DC/AC switch-mode converters.", "Explain the role of power electronics in industrial applications.", "An extra lab session is used to introduce computer simulation of power electronic converters in PSIM environment.", "Power Electronic Circuit Simulation using PSIM", "Lab 3. DC Motor Speed Control using DC-to-DC converters", "The members in each lab/project group are expected to make equal contributions in all aspects.", "The project will focus on design and simulation of a power electronic system.", "Power Electronic Circuits Simulation using PSIM", "Using a recorded video, students will be introduced to PSIM and how to use the software to simulate power electronic circuits, with examples on DC/DC converters.", "Sections", "201 & 202", "201 & 202", "201 & 202", "Design and Simulation of a Power Electronics System", "Notice of Recording", "Email Correspondences:"]}, {"course_id": 135, "course_code": "ECE 486", "course_name": "ECE486 - Robot Dynamics and Control (0.50)", "term_name": "List 3", "program_name": "Computer Engineering", "program_id": 39, "major_id": 2, "major_name": "Computer Engineering (Bachelor of Applied Science - Honours)", "topics": ["Robot Dynamics and Control Spring 2024", "ECE 486 / ECE 780", "ECE 486 001", "ECE 486 101", "08:00PM -", "ECE 486 201", "ECE 780 001", "ECE 486:", "Introduction to the study of robotics focusing on the mechanics and control of serial manipulators.", "Topics include rigid body motion, forward and inverse kinematics, differential kinematics, forward and inverse dynamics, trajectory generation, motion planning, and feedback control.", "This course will introduce students to dynamic modeling and control techniques for robotic systems, and expose them to some cutting-edge research.", "Dynamics of manipulators", "Optimization-based robot control", "May 7 Introduction to robot dynamics and control", "May 23 Dynamic model of manipulators 6 [", "CONTROL OF MANIPULATORS", "Jun 27 Control of driftless systems 14", "Jul 4 Control of differentially flat systems 14", "OPTIMIZATION-BASED ROBOT CONTROL", "Jul 18 Invariance and control barrier functions 4 [", "The lecturing deliverable will consist in a 15-minute presentation of a topic not covered in class and independently studied.", "Magnus Egerstedt, Robot Ecology: Constraint-Based Design for Long-Duration Autonomy, Princeton University Press, 2021 No", "ECE 486", "The project will consist of a mobile manipulation task using the DJI RoboMaster EP programmed in", "The code developed to complete the project", "The reports must be formatted using", "The project will consist of the solution to a problem in the student\u2019s research area using the techniques", "\u2013 Section II: Novelty and/or impact", "\u2013 Section III: How robot dynamics and control techniques play a key role", "\u2013 Section V: Metric for success", "\u2013 Section I: Introduction", "\u2013 Section III: Materials and methods", "The code developed to complete the project"]}, {"course_id": 136, "course_code": "ECE 488", "course_name": "ECE488 - Multivariable Control Systems (0.50)", "term_name": "List 3", "program_name": "Computer Engineering", "program_id": 39, "major_id": 2, "major_name": "Computer Engineering (Bachelor of Applied Science - Honours)", "topics": ["Multivariable Control Systems Winter 2025", "ECE 488", "Monday, Friday -", "D. Davison", "04:00PM - 05:20PM", "ECE 488 101", "08:00PM -", "D. Davison", "Instructor Dan Davison", "EIT-3114", "Review of feedback control design fundamentals; SISO controller parameterizations; the fundamental effect of MIMO interaction; introduction to state-space models in continuous and discrete time; SISO techniques for MIMO design; optimal control; model-predictive control design; state estimation; decoupling, MIMO PID control design; applications in areas such as aerospace systems.", "View requirements for ECE 488", "Course pre-requisites:", "This course builds on classical control theory from a first control course (ECE380, MTE360, BME356, SYDE352, or equivalent).", "I assume you have good working knowledge of Laplace transforms, transfer functions, Bode plots, block diagrams, and basic control tools (Routh-Hurwitz stability test, root locus plots, Nyquist plots, design of PID/lead/lag controllers).", "To develop tools that allow us to analyze and design control systems that have multiple inputs and/or multiple outputs.", "(7) Proficiently interpret and analyze MIMO systems (Chapter 4)", "(9) Proficiently manipulate and analyze MIMO state-space systems (Chapter 5)", "(11) Explain the advantages and disadvantages of state-space and transfer-function techniques for MIMO control (Chapter 5)", "Tests and final exam", "Tests and final exam", "Tests and final exam", "Tests and final exam", "Tests and final exam", "\"Impact of engineering on society and the environment\"", "\"Economics and project management\"", "Mon Feb 10 Lecture Ch 3 pp.157-164 and P3 & P4", "These slots will compensate for lectures that are cancelled during the ECE Midterm Week.", "You can send a print request online at https://wstore.uwaterloo.ca/pages/w-print-student.", "Chapter 4:  \"Control System Design\", by Goodwin, Graebe, and Salgado, 2001", "Summary of marked components", "Tests and final exam", "Any reason for missing a test, other than those listed above, results in a score of zero on that test.", "The purpose of the Project Exercises is to increase your understanding of the techniques and ideas presented in the lectures by applying them to a quasi-realistic system.", "In-person students who faithfully attend the in-person lectures can get bonus marks.", "I will occasionally distribute slips to each person present in the lecture room.", "Correctly answer a simple question on the slip, and put the slip in the box at the front of the room.", "Most of the 36 lecture videos explain how a random subset of viewers can get a 0.5% bonus mark.", "Mixed learning modes:  Students who switch between in-person and online learning may collect a mixture of in-person and online bonus marks."]}, {"course_id": 137, "course_code": "ECE 493", "course_name": "ECE493 - Special Topics in Electrical and Computer Engineering (0.50)", "term_name": "List 3", "program_name": "Computer Engineering", "program_id": 39, "major_id": 2, "major_name": "Computer Engineering (Bachelor of Applied Science - Honours)", "topics": ["Notice of Recording", "Social Robotics - Foundations, Technology and Applications of Human-Centered Robotics Winter 2025", "ECE 750 / ECE 493", "ECE 750 / ECE 493 001", "10:00AM - 11:20AM E7 5353", "kerstin.dautenhahn@uwaterloo.ca", "04:00PM - 05:20PM", "08:00PM -", "Prof. Kerstin Dautenhahn:", "E5-5027", "kerstin.dautenhahn@uwaterloo.ca", "ECE 750:", "View requirements for ECE 750", "View requirements for ECE 493", "The course will provide an introduction to the research field of social robotics, with a particular human-centered perspective.", "Robots that can interact socially in an effective and acceptable manner with people have become increasingly important for applications ranging from robot-assisted therapy for people with special needs, robotic assistants for older people and care home residents, robots as tools in education or robotic co-workers for a new generation of  industrial robot that emphasize human-machine collaboration and communication.", "Students will gain an understanding of the concepts and theories underlying social robotics, as well as research methodologies and techniques to realize socially intelligent robots and design, plan and evaluate human-robot interaction experiments.", "Understand concepts and theories underlying social robotics", "Apply research methodologies and techniques to realize socially intelligent robots", "Design, plan, and evaluate human-robot interaction experiments", "Demonstrate scientific writing and presentation skills", "Explain how psychology and social sciences can inform the engineering of social robots", "Understand basic principles of sensors, actuators and multi-model interaction and communication for social robots", "Explain examples of robot computational architectures used in human-robot interaction", "Definitions of social robots and requirements of robots\u2019 social skill and their relevance to robotics and Artificial Intelligence in real-world applications", "The role of affective expressions of social robots and modelling emotions to facilitate human-robot engagement", "Evaluating usability, user experience and acceptance of social robots", "Guidelines of how to write up social robotics research for a scientific publication", "Overview of cognitive architectures for socially intelligent robots", "Featuring interdisciplinary research in social robotics based on research from other fields, e.g. from (developmental) psychology, ethology or primatology", "Roles of social robots in human society and their potential impact on society and wellbeing", "Selected examples of applications of social robots e.g. in care, therapy, education, rehabilitation and co-worker scenarios will be discussed throughout the course", "Ethical, safety and privacy issues as relevant to social robotics will be discussed throughout the course", "Course Grading for Graduate Students:", "20% Individual discussion paper: Students will reflect on work in Science Fiction involving the concepts of social and intelligent robots, and reflect on the relevance to today\u2019s robotics technology in robotics and Artificial Intelligence.", "Students can choose the work and discuss the selection with the instructor.", "Students are required to write a report that motivates, describes and discusses those behaviours in light of the state of the art literature, and describe an experimental design for a human-robot interaction experiment where those behaviours could be tested and analyzed.", "Specifically, students\u2019 reports will be evaluated based on a) the literature review demonstrating the level of knowledge in this domain, b) the relevance of the identified research questions and hypotheses, c) the depth of the proposed research program, d) the range, complexity and quality of the implemented and documented robot behaviours, e) the detailed description of the methodology used to carry out and analyze this program of work, f) the user study conducted and how results are presented and analysed, and finally, g) a critical evaluation of possible limitations of the expected outcomes and backup plans in order to address  possible delays and technical difficulties encountered during the implementation of the work.", "Note, those skills can also be applied to related fields of Human-Computer Interaction (HCI), Human Factors etc.", "20% Individual discussion paper: Students will reflect on work in Science Fiction involving the concepts of social and intelligent robots, and reflect on the relevance to today\u2019s robotics technology in robotics and Artificial Intelligence.", "Students can choose the work and discuss the selection with the instructor.", "Students are required to write a report that motivates, describes and discusses those behaviours in light of the state of the art literature, and describe a possible experimental design for a human-robot interaction experiment where those implemented behaviours could be tested and analyzed.", "Specifically, students\u2019 reports will be evaluated based on a) the literature review demonstrating the level of knowledge in this domain, b) the relevance of the identified research questions and hypotheses, c) the depth of the proposed research program, d) the range, complexity and quality of the implemented and documented robot behaviours, e) the detailed description of the methodology used to carry out and analyze this program of work, f) a critical evaluation of possible limitations of the expected outcomes and backup plans in order to address  possible delays and technical difficulties encountered during the implementation of the work.", "Note, those skills can also be applied to related fields of Human-Computer Interaction (HCI), Human Factors etc.", "Notice of Recording"]}, {"course_id": 139, "course_code": "ECE 499", "course_name": "ECE499 - Engineering Project (0.50)", "term_name": "List 3", "program_name": "Computer Engineering", "program_id": 39, "major_id": 2, "major_name": "Computer Engineering (Bachelor of Applied Science - Honours)", "topics": ["Email: mcrowley@uwaterloo.ca", "View requirements for ECE 499", "In doing so, they are expected to demonstrate initiative and ability to define a problem and develop a solution logically and accurately, so that they can appreciate, discriminate, and draw conclusions from observations and ideas.", "They also need to demonstrate they can make recommendations and communicate effectively by means of a written report on their work.", "This allows sufficient time for the readers to evaluate the report and provide a grade.", "Sexual Violence Prevention & Response Office (SVPRO), supports students at UWaterloo who have experienced, or have been impacted by, sexual violence and gender-based violence.", "This includes those who experienced harm, those who are supporting others who experienced harm.", "SVPRO can be contacted at svpro@uwaterloo.ca", "Intellectual property includes items such as:"]}, {"course_id": 0, "course_code": "ECE 305", "course_name": "ECE305 - Introduction to Quantum Mechanics (0.50)", "term_name": "Required Courses", "program_name": "Computer Engineering", "program_id": 39, "major_id": 3, "major_name": "Quantum Engineering Specialization", "topics": ["Notice of Recording", "Introduction to Quantum Mechanics Fall 2024", "ECE 305", "11:30AM -", "04:00PM - 05:20PM", "Introduction to quantization, wave-particle duality, and the uncertainty principle.", "Introduction to approximation methods including time-independent perturbation theory.", "View requirements for ECE 305", "Learn basic mathematics for quantum mechanics", "Understand the fundamental concepts of quantum mechanics: quantization, wave-particle duality, the uncertainty principles", "Learn how to solve Schr\u00f6dinger equations for exemplary problems: particle-in-a-box, finite-height potential, a harmonic oscillator", "Learn modern applications of quantum mechanics", "Make-Up-F", "Tutorial-Th", "Introduction", "Stern-Gerlach", "Math/Matrix Notation", "Quantum State Vectors", "Linear Algebra", "Ch. 2.3-2.4", "Expectation Values", "Calculating expectation values", "Expectation values", "Schr\u00f6dinger Equation", "Schr\u00f6dinger Equation", "Spin Precession", "Energy Eigenvalue Equation", "Schr\u00f6dinger Equation", "Wavefunction", "Wavefunction", "Wavefunction", "Nov.11-15", "Nov.18-22", "Finite Squarewell", "Nov.25-29", "Quantum Cryptography", "Quantum Mechanics: A Paradigms Approach by David H. McIntyre Yes", "Linear Algebra Lecture Material: https://ece.uwaterloo.ca/~ne112/Lecture_materials/.", "Notice of Recording"]}, {"course_id": 0, "course_code": "CS 136L", "course_name": "CS136L - Tools and Techniques for Software Development (0.25)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["Tools and Techniques for Software Development Winter 2025", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 3003", "E. Ciklabakkal", "E. Ciklabakkal", "08:30AM - 10:20AM MC 4042", "E. Ciklabakkal", "10:30AM - 12:20PM MC 4042", "08:30AM - 10:20AM MC 3003", "10:30AM - 12:20PM MC 4060", "02:30PM - 04:20PM MC 4060", "E. Ciklabakkal", "10:30AM - 12:20PM MC 3003", "This course introduces students to tools and techniques useful in the software development lifecycle.", "Students learn to navigate and leverage commands and utilities in the Linux Command Line Shell.", "Students gain experience in version control software, writing scripts to automate tasks, and creating effective test cases to identify bugs.", "Students also gain experience in using built-in support for version control, testing, debugging, build automation, etc. in integrated development environments (IDEs).", "Interact with the Linux Operating System using a command line shell and gain familiarity with commands, utilities and tools.", "Create scripts to automate tasks and increase productivity while working on a software project.", "Design test cases and automate the testing process to check a program for functional correctness and incorrect memory usage.", "Use version control systems to share, contribute, manage and track code.", "Separately compile code modules and leverage build automation tools to do so efficiently.", "Module 0: Linux Shell, a first look", "Module 2: Testing and Debugging", "Module 9: Debugging", "Each lab consists of a number of lab problems.", "Each lab problem has two associated values, a lower one called the pass threshold and a higher one called the completion threshold.", "Special note on test cases: if a lab question asks you to submit test cases, you must create these tests yourself.", "Do not directly copy code from GenAI.", "Do not ask GenAI for a step-by-step breakdown of how to solve a lab problem.", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 1, "course_code": "CS 341", "course_name": "CS341 - Algorithms (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["Algorithms Winter 2025", "10:00AM - 11:20AM MC 4061", "08:30AM - 09:50AM MC 1056", "The study of efficient algorithms and effective algorithm design techniques.", "Topics include divide and conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph search and backtrack, problems without algorithms, NP-completeness and its implications.", "DPV", "Introduction to Algorithms, by Cormen, Leiserson, Rivest and Stein, MIT Press.", "describe the main idea first,", "Extensions and Other Accommodations on Assignments", "Students can currently self-declare two kinds of absences on Quest: short-term absence and pandemic-related absence.", "Since a short-term absence lasts 2 days, this means the only accommodation we offer for a short-term absence is a 48 hour extension.", "If you request accommodations through AccessAbility Services (AAS) by filling out a Missed Course Component form, the accommodation is determined on a case-by-case basis through consultation with AAS, but will generally be one of the above options unless your situation is unusual.", "If you collaborate with others, you must clearly indicate the collaboration for each problem.", "This is not a software engineering course; we will not test your code against inputs that do not match our specifications.", "Continuity Plan", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 5, "course_code": "CO 250", "course_name": "CO250 - Introduction to Optimization (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["Introduction to Optimization Winter 2025", "walaa.moursi@uwaterloo.ca", "Instructor: Walaa Moursi walaa.moursi@uwaterloo.ca", "A broad introduction to the field of optimization, discussing applications, and solution techniques.", "Mathematical models for real life applications; algorithms; aspects of computational complexity; geometry; linear programming duality, focusing on the development of algorithms.", "Carry out the computations by hand for simple instances of various algorithms such as the Simplex.", "Formulate the dual of various linear programs.", "Reproduce the main proofs in the course and prove simple related concepts independently.", "The simplest models are linear programs where both the constraints and the objective functions are linear.", "Even though this may appear at a first glance to be overly restrictive, linear programming algorithms are used widely across most branches of industry.", "In these cases, we would like to add the condition that some variables in our linear program take integer values only.", "These models are known as integer programs.", "Finally, in certain instances, such as portfolio optimization (in financial mathematics), the natural way of formulating the optimization problem may require the use of non-linear constraints, or a non-linear objective function.", "In the first part of this course, we will illustrate these various models with examples that arise from real problems.", "The Simplex algorithm to solve linear programs will be discussed in some detail and general-purpose integer programming techniques such as branch-and-bound and cutting planes will also be described.", "These algorithms while guaranteed to terminate, may in the worst case (and often do in practice) take a prohibitively long time.", "An indispensable tool for the design of such fast algorithms is the theory of duality, which will be a main focus of this course.", "We will move towards the conclusion of the course with a review of the various techniques used to solve linear and integer programs and by providing a geometric interpretation of these algorithms.", "This discussion will lead us to non-linear convex optimization problems.", "Also included in this last part of the material are approximation algorithms.", "Shows a linear programming polytope together with a possible path (red) taken by the simplex method to solve the corresponding LP.", "A Gentle Introduction to Optimization - Digital Version", "A Gentle Introduction to Optimization - Print Version", "You can access a free trial of your eTextbook from the Course Information module in LEARN.", "Details of the delivery of the midterm are to be posted in the second week of classes.", "This is a closed-book exam.", "A grade of INC (incomplete) will be only awarded to students who cannot write the final examination for reasons acceptable to the instructor, such as a medical certificate by a recognized medical professional provided to the instructor promptly."]}, {"course_id": 8, "course_code": "CS 135", "course_name": "CS135 - Designing Functional Programs (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["Designing Functional Programs Winter 2025", "Monday -", "Monday", "07:00PM - 08:50PM", "08:30AM - 09:20AM", "10:30AM - 11:20AM MC 2034", "Charlie Clarke", "Email: claclark@uwaterloo.ca", "Karen Anderson", "Email: kaanders@uwaterloo.ca", "Email: dbwolff@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Sara Nayar", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "Email: cs135@uwaterloo.ca", "CS135 Problem-solving FAQ", "Assignment Marking Error: Submit a re-mark request, due within one week of release of marks.", "Read Me First", "We hope to guide you through a carefully designed curriculum that introduces you to core concepts in computer science.", "In a typical week, you will move through the following activities:", "You should get a feel for what information is where so you can find it quickly in the future.", "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming.", "Syntax and semantics of a functional programming language.", "Linear and nonlinear data structures.", "Abstraction and encapsulation.", "CS 135 Designing Functional Programs", "CS 135 is for students who would prefer a more conceptual treatment of introductory computer science in a simple language that is educationally effective but not commercially relevant.", "Hardware and Software", "Student labs are equipped with the DrRacket integrated development environment running on networked personal computers.", "References", "How To Design Programs by Felleisen, Findler, Flatt, and Krishnamurthi, MIT Press, 2003.", "Definition of lists, designing functions to process and produce lists, recursive definition of natural numbers, recursive data definitions.", "Non-Linear Structures (6 hours)", "Multi-clausal recursive data definitions, trees, mutually referential data definitions, design methods for complex data, iterative refinement, multiplexing.", "Early development of electronic computers and programming languages.", "History of concepts covered in this course.", "have understanding and experience with the topics in the course outline above", "Drop deadline 25", "Reading Week Starts", "Slides Description", "L01 Values and expressions Prefix notation, exact numbers, Boolean expressions, constants", "L04 Lists List values and expressions, composite data, data definitions", "iClicker pilot", "2024-08-26: CS135 is participating in a pilot comparison of iClicker and Vevox.", "The iClicker subscription should be free.", "iClicker Account", "Racket and DrRacket", "It is also simple and clean enough that we cover computer science content many CS students do not see until later in their CS careers.", "If you submit code written under some other system and it does not work in our currently-supported version of DrRacket, then we consider that code incorrect even if it works for you at home.", "Your work in CS135 will be assessed in a variety of ways.", "Coverage", "Using such off-limits material generally results in a significant loss of marks.", "In general, the basic tests will try to warn you if inappropriate functions and special forms are used.", "Submitting a partially completed solution is a good idea, just in case you don\u2019t get back to it before the due date and to serve as a backup in case your computer breaks or is stolen.", "Email Karen Anderson .", "Email the ISAs and ask them to \u201cmark it for feedback\u201d.", "Testing", "We do several kinds of testing on your submissions:", "Basic tests", "Each time you submit before the due date, we run a set of \u201cbasic tests\u201d on your submission.", "It\u2019s amazing how many fatal errors can appear during last-minute tidying up!", "Do not make your last submission immediately before the deadline \u2013 it gives you no time to check the Basic Test results and respond, if needed.", "The numeric mark appearing on the basic test marksheet is only for guidance.", "After the submission deadline we run a second set of tests to assess your code, including:", "These post-deadline tests and hand-marking form your mark for the assignment.", "If you procrastinate long enough, this rule can easily cause you to fail the course.", "We won\u2019t rehash the above policies, but we do want to make them concrete for CS135.", "A specific assignment may give exceptions to the above.", "You are welcome to use these tools to help you understand the course material, but you should not:", "cut-and-paste your assignment code into them for debugging assistance.", "Also, these tools will not be available when you write the exam, so you need to understand how to solve these problems yourself in order to pass the course.", "attempting to run malicious code during the submission or marking process."]}, {"course_id": 11, "course_code": "CS 146", "course_name": "CS146 - Elementary Algorithm Design and Data Abstraction (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["Elementary Algorithm Design and Data Abstraction (Advanced Level)", "Monday -", "Monday", "07:00PM - 08:50PM", "02:30PM - 03:20PM", "Brad In-person MC 6427", "On-line Consulting Hours: Microsoft Teams", "CS 146: Elementary Algorithm Design and Data Abstraction (advanced version)", "To familiarize students with key concepts in introductory computer science from an imperative perspective and to contrast this with the functional perspective taken in CS 145;", "To allow students to complete the CS portion of their Math core requirements and, if desired, to continue on to second-year core courses in CS;", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "Introduction to C and elementary mutation in Scheme", "The memory model.", "Variable declaration, assignment and infix expressions in C. Basic I/O in C. Compilation.", "Algorithm analysis in C. File I/O in C and Scheme.", "Program organization and testing methods.", "Space analysis in C and Scheme.", "Mutable lists, queues, deques, and trees in C. Time-space tradeoffs among mutable and immutable ADT implementations.", "Low-level abstractions", "Pointer arithmetic in C. Arrays in C and vectors in Scheme.", "Strings in C. Elementary hashing.", "Libraries in C and Scheme.", "Implementing high-level abstractions", "given a clear and concise statement of a problem or task, write a program from scratch of up to two hundred lines of properly-formatted and documented C code to solve the problem or carry out the task;", "use elementary data structures such as lists and trees in such programs, with proper attention to explicit allocation and deallocation of memory;", "be able to write programs in both Scheme and C that obtain input from external sources and/or send output to external sources (interaction, files, redirected files) and whose I/O behaviour conforms to precise specifications;", "analyze the running time and space requirements of such programs and describe examples of data that demonstrate that the analysis cannot be improved.", "The provided slides are not a substitute for attendance in any first-year CS course, but in CS 146, there are no slides, and the lecture summaries made available after lecture are an even worse substitute for attendance.", "Lectures will involve the development of ideas summarized very tersely in the handouts, as well as on-the-fly development of code, analyses, and proofs.", "CS145 and CS146 were originally designed as a year-long unit of curriculum, but eventually the individual courses drifted in their own directions.", "1.1 A note on logistics", "1.2 Review of forms of recursion and associated proof techniques", "1.3 In preparation for side effects", "1.4 Output", "1.5 Input", "1.6 First Introduction to C", "1.8 Memoization", "1.9 Mutation in C", "1.11 Boxes in C", "1.12 Advanced mutation", "1.13 Aliasing in C", "1.14 Memory and vectors", "1.15 Vectors in Racket", "1.16 Arrays in C", "1.18 ADTs in C; Amortized Analysis", "2 SIMPL: a simple imperative language", "2.1 Syntax and informal semantics", "2.2 Examples in several languages", "2.3 Formal semantics", "2.5 Proving imperative programs correct", "A primitive imperative language", "3.1 A primitive imperative language", "3.2 The PRIMPL simulator", "3.4 The SIMPL to A-PRIMPL compiler", "3.6 Strings in C", "3.7 Adding functions to SIMPL", "3.8 Adding both arrays and functions to SIMPL", "3.9 Implementing lists in PRIMPL", "4 MMIX: a realistic instruction set", "4.1 A more realistic processor", "4.2 The MMIX architecture", "4.2.1 Branches and Jumps", "4.2.2 Example", "4.2.3 Software Interrupts", "4.2.5 A Problem with Branches and Jumps", "4.4 Towards a SIMPL to MMIX compiler", "5.1 Storing primitive values", "5.3 Managing memory", "5.4 Structural and pointer equality", "5.5 Function application in a Racket interpreter", "5.7 Justifying the cost of Racket primitives", "5.8 Moving towards implementation in an imperative language", "6.2 Zippers", "6.3 A continuation-passing interpreter", "6.6.2 Mark-and-sweep", "6.6.3 Copying garbage collection", "6.7 Heterogeneous Data in C", "6.8 Multidimensional Arrays in C", "6.10 Variable-length Argument Lists", "7.1 Continuation-passing style", "7.2 Exception handling", "7.3 Undelimited continuations", "7.4 Delimited continuations", "7.5 Racket\u2019s implementation of continuations", "In CS 146, we will examine the imperative paradigm, and compare and contrast the way that efficient algorithms and data structures are designed in imperative and functional languages.", "Racket is a laboratory for current research on aspects of functional programming languages, and we will continue to look at interesting topics in this area, perhaps at the cost of some coherency in the flow of material.", "They will not be due each week on the same day, as is common in the other first-year CS courses and the first-year Math courses.", "Assignment questions are the main way to reinforce and deepen your understanding of the concepts and skills discussed in lecture.", "You will submit program files electronically to the Marmoset system , which runs tests on your code and informs you of the results fairly rapidly.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "(Please also note that we may use the trends in a student's submission history to estimate the likelihood of other forms of cheating as well.)", "Library for research-based assignments"]}, {"course_id": 12, "course_code": "CS 240", "course_name": "CS240 - Data Structures and Data Management (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["Data Structures and Data Management Winter 2025", "10:00AM - 11:20AM RCH 112", "11:30AM -", "10:30AM - 11:20AM MC 4040", "11:30AM - 12:20PM MC 4040", "Email: oveksler@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "All of Tom's consulting hours are in-person in MC 4065.", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Email: cs240@uwaterloo.ca", "Instructional Support Coordinator: Karen Anderson", "Email: kaanders@uwaterloo.ca", "Introduction to widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms.", "CS 240: Data Structures and Data Management", "This course introduces widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms.", "Analyze, apply, and use various data structures and data-management techniques in a variety of applications", "Perform rigorous complexity analyses of simple algorithms and data structures, which includes writing correct mathematical proofs on inductively-defined structures and solving simple recurrence relations", "Select a good data structure to solve a specific algorithmic problem", "Apply data structures correctly and efficiently in one or more high-level programming languages, including C++", "Audience", "Successors: Most third-year CS major courses", "Conflicts: Other courses that seriously consider efficiency and correctness of fundamental data structures and their algorithms", "Analytical:", "Define and explain order notation; perform complexity analyses of simple algorithms", "Perform basic computations of discrete probability and expectation", "Use mathematical induction on recursively defined structures, including finding simple errors in inductive arguments", "Prove simple properties of program fragments correct through the use of pre-conditions and post-conditions for loops and recursive calls", "Computational and algorithmic:", "Design, implement, test, and debug C++ programs to solve problems requiring hundreds of lines of code", "Define the ADTs for stacks and queues; write efficient implementations in C/C++", "Describe tree structures, including binary search trees and multi-way trees; use these structures in C/C++ programs", "Describe basic sorting algorithms (including Quicksort) and implement them in C/C++", "Perform rigorous asymptotic analyses of simple algorithms and express the result using order notation; compare algorithms based on their asymptotic complexity; and prove formal results involving order notation", "Apply the priority-queue ADT to solve various application problems, implement a priority queue using heaps, and analyze the complexity of common implementations of heap operations", "Develop best-, worst- and average-case analyses of sorting algorithms, including Quicksort, and explain the ramifications of these analyses in practice; explain the basic principles of randomized algorithms and their potential advantages, specifically in the case of Quicksort; explain the difference between comparison-based sorting and non-comparison-based sorting algorithms, and when and why the latter may run faster; and apply sorting-based techniques to algorithmic problems, such as elimination of duplicates", "Explain the advantages and disadvantages of various hashing techniques; identify the best hashing techniques to use in a particular application scenario; and recognize when hashing techniques are preferable to other dictionary implementations", "Design data structures for real-world data (where keys are often inherently multidimensional) in such a way that common operations (including range search) can be implemented efficiently", "Design special data structures that can efficiently store and process words and strings, and select and apply a suitable technique for data compression in a specific application scenario", "Introduction and review (3 hours)", "Basic computer model: the random-access machine", "Runtime of an algorithm: worst-case, best-case, and average-case", "Review of stacks and queues", "Priority queue ADT and simple implementations", "Sorting and analysis of randomized algorithms (5 hours)", "Quicksort (non-randomized): worst-case, best-case, and average-case complexity", "Randomized quicksort and its analysis; application to selection and its analysis", "Lower bound on comparison-based sorting", "Non-comparison-based sorting algorithms (e.g., Counting Sort and Radix Sort)", "Dictionary ADT and simple implementations", "Binary search trees (insert and delete operations and analysis)", "Key-indexed search, simple hash functions", "Range search in a binary search tree", "Algorithms and data structures for text processing (8 hours)", "Sometimes these include animations/overlays, in case of which there will be both a Display version (with them) and a Print version (omitting them, but otherwise the same content).", "The slides for each module will be posted as the term progresses.", "Module 1 Introduction and Asymptotic Analysis M1.pdf", "Module 3 Sorting, Average-Case and Randomized Algorithms M3.pdf", "Optional: Goodrich & Tamassia   8.3", "Module 8 Range-Searching in Dictionaries of Points   Course notes Chapter 8", "A0.tex", "A1.tex", "The following books are on reserve in the DC library for reference and additional resources:", "Algorithm Design and Applications (2015)", "Also covers cuckoo hashing.", "Sedgewick] Algorithms in C++, Third Edition (1998)", "Computational Geometry: Algorithms and Applications", "CLRS] Introduction to Algorithms, 2nd edition (2001)", "Introduction to Algorithms, 2nd edition is also avaliable online (in campus).", "This website will be the primary means of communication and distribution of materials for the course.", "The course uses a number of different tools for distributing information and receiving submissions.", "These are not worth credit, but may help you in self-testing your understanding of the material.", "Only one programming question can be shifted to the final exam.", "If more than this has verification for non-submittal, then it will be considered on a case-by-case basis.", "A student with a medical reason may not be granted an INC because they have not performed sufficiently well during the academic term.", "An INC will be granted ONLY if there is a strong reason for missing the exam (generally a serious medical issue verified by a doctor's note) AND a satisfactory performance during the term (both assignments and midterm).", "Academic Dishonesty", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments", "The first criterion for marking is the correctness, the second criterion is efficiency.", "describe the main idea first in words,", "In the case that you are using facts stated in lectures/modules, be sure to cite where you got them from.)", "Files should be named .cpp, where the specific file name will be specified in the assignment.", "You should include sufficiently many comments in your code that the main ideas of design and correctness are clear.", "One-line changes: In the case you passed the public test, and failed some secret tests, if your program works with a one line change, then we may accept it for remarking and give some marks after deducting a penalty (typically 10-20% of the programming question).", "Here are some ways to create PDF files:", "Create your solution in LaTeX. LaTeX is a document preparation system that uses a mark-up language to write/create and co-ordinate different parts of documents, including diagrams and was introduced in Assignment 0.", "The following are least preferred methods since the results may be hard for markers to read and/or the files may be too large.", "Submitting a Re-Mark Request: Please email cs240@uwaterloo.ca in order to submit a request.", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 17, "course_code": "CS 245E", "course_name": "CS245E - Logic and Computation (Enriched) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["10:00AM - 11:20AM MC 2034", "Tuesday -", "This includes:", "Basic sematic notions:", "Truth tables", "A formal proof system for Propositional logic", "Soundness and completeness theorems for the proof system", "Basic sematic notions", "Structures for a vocabulary", "Logical truths and logical implications", "Translations between FOL formulas and English and mathematical statements.", "A formal proof system for Predicate logic", "Soundness theorem for the proof system", "However, the focus of this version of the course is more on fundamental and mathematical concepts (on the expense of developing technical skills, such as designing formal proofs).", "We will use propositional logic as a main tool for demonstration key logical concepts such as", "Structural induction its justification and many applications.", "soundness and completeness theorems", "the expressive power of the logic (what can and what cannot be expressed).", "We will revisit these topics for first order logic.", "Finally, we will discuss applications of logic to computer science, in particular showing limitations of computations (undesirability)."]}, {"course_id": 18, "course_code": "CS 246", "course_name": "CS246 - Object-Oriented Software Development (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["Object-Oriented Software Development Winter 2025", "10:00AM - 11:20AM MC 1056", "10:30AM - 11:20AM MC 3003", "11:30AM - 12:20PM MC 3003", "Tuesday -", "Ross Evans rpevans@uwaterloo.ca", "Introduction to object-oriented programming and to tools and techniques for software development.", "Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites.", "This course introduces students to object-oriented programming in C++ to facilitate designing, coding, debugging, testing, and documenting medium-sized programs.", "Students learn to read a specification and design software to implement it.", "Important skills are selecting appropriate data structures and control structures, writing reusable code, reusing existing code, understanding basic performance issues, developing debugging skills, and learning to test a program.", "C++", "Introduction to C++", "I/O and Strings", "Basic language constructs and Functions", "Exceptions", "Introduction to Templates", "Exception safety", "Template functions and algorithms", "Object-Oriented Programming", "UML class models", "Constructors and Destructors", "Encapsulation", "Inheritance", "Design patterns: Iterator, Observer, Decorator, Factory method, Template method, Non-virtual interface (NVI), and the Pimpl idiom", "Inheritance: vtables", "Multiple inheritance", "Design quality", "MVC (model-view-controller) architecture", "Design, implement, test, and debug C++ programs to solve problems requiring hundreds of lines of code, making appropriate use of", "types, variables, arrays, strings, and dynamic memory; loops, conditionals, and other control structures; structures, unions, and enumerations; procedures and functions; the preprocessor; formatted and unformatted I/O", "a subset of the STL, including vector, list, and map", "assertions and exceptions", "test suites for regression testing, white and black box testing", "structured programming, incremental development", "interface design, abstractions, information hiding, cohesion and coupling", "a subset of UML to specify classes, objects and relationships among them", "a selection of design patterns", "Explain the following properties of the memory model used in C++, including their impact on time and space efficiency when designing code: bytes vs. words, memory as an array, run-time stack and stack frames, memory allocation on the heap vs. automatic allocation on the stack, pointers as memory addresses, the representation of objects in memory", "You must complete A0 in order to receive marks for the rest of the course.", "A1 Basic C++ Monday, January 20 Monday, January 27 5", "A2 Introduction to OOP Monday, February 3 Monday, February 10 6", "A4 Design Patterns Monday, March 10 Monday, March 17 8", "Note: Marmoset is not a compiler!", "Do not submit C++ code to Marmoset, without first attempting to compile it yourself.", "Students from different sections can be in the same group.", "Working on a group is an important learning experience for software development in a team.", "Students in a group will be responsible for forming and managing the group.", "Please be very careful in selecting your group as there are always groups that end up having major issues every term.", "Exams", "Examination Date Final Grade Weight", "Each weekly set of problems completed succesfully can be used to replace 0.5% of the final grade from the final exam.", "In the case where both a midterm and final exam can be held, the final course grade will be calculated from the following components and weights:", "To pass the course, you must satisfy these three conditions:", "A grade of at least 45% on the weighted average of assignments A1-A4", "Assignments1to4  = (A1*5 + A2*6 + A3*6 + A4*8) / 25", "Normal = A1*5 + A2*6 + A3*6 + A4*8 + A5*15 + Midterm*20 + Final*(40-0.5*TutorialsCompleted) + 0.5*TutorialsCompleted", "if (MidtermInPerson==TRUE && FinalInPerson==TRUE)", "else", "if (MidtermInPerson==FALSE && FinalInPerson==TRUE)", "else", "if (MidtermInPerson==TRUE && FinalInPerson==FALSE)", "else", "if (MidtermInPerson==FALSE && FinalInPerson==FALSE)", "else", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course.", "Intellectual property includes items such as:", "This course includes the independent development and practice of specific skills.", "Library for research-based assignments"]}, {"course_id": 25, "course_code": "MATH 128", "course_name": "MATH128 - Calculus 2 for the Sciences (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["F. Dunbar", "Instructor: Fiona Dunbar", "Separable and linear first order differential equations and applications.", "Introduction to sequences.", "Parametric/vector representation of curves; particle motion and arc length.", "Polar coordinates in the plane.", "use integration techniques to solve linear first-order equations and improper integrals,", "visualize and approximate higher-order differential equations,", "interpret and derive power series representation of a function,", "use the concept of linear approximation and apply it to Taylor polynomials as well as use techniques for quantifying approximation error,", "understand the relationship between vector-valued functions, polar coordinates, and applications of integration to arc lengths.", "If you are unable to acquire one of these calculators, you must contact your instructor in the first week or two of the course so an equivalent alternative can be identified and added to the exam proctors' list of permitted aids.", "This course includes the independent development and practice of specific skills, such as integration techniques, visualizing/approximating higher-order differential equations, deriving power series, linear approximation and applying to Taylor polynomials, using vector-valued functions, polar coordinates, and applications of integration to arc lengths.", "Library for research-based assignments"]}, {"course_id": 26, "course_code": "MATH 138", "course_name": "MATH138 - Calculus 2 for Honours Mathematics (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["Notice of Recording", "08:30AM - 09:20AM", "09:30AM - 10:20AM MC 4059", "10:30AM - 11:20AM MC 4061", "E. Bembenek", "11:30AM - 12:20PM MC 4021", "cpthowel@uwaterloo.ca", "E. Yalcin", "02:30PM - 03:20PM", "08:30AM - 09:20AM QNC 2502", "Introduction to the Riemann integral and approximations.", "Antiderivatives and the fundamental theorem of calculus.", "Applications of the integral.", "Improper integrals.", "Linear and separable differential equations and applications.", "Binomial series, functions defined as power series and Taylor series.", "The goal of this course is to further expand your knowledge of calculus and its applications for one-variable functions.", "First, we will explore areas under curves and the Fundamental Theorem of Calculus, integration techniques, and applications of integration including finding the area between two curves, volumes of solids of revolution, and the average value of a function.", "We will study how to solve separable differential equations and linear differential equations as well as their applications to population growth and Newton's Law of Cooling.", "Write clear and well-organized mathematical solutions and proofs.", "Solve problems in Calculus through logical thinking and careful analysis.", "Set up and evaluate Riemann integrals for simple functions", "Apply various integration techniques including change of variable, integration by parts, trigonometric substitution, and partial fractions.", "Solve separable and first-order linear differential equations.", "Compute the radius and interval of convergence for power series.", "Compute Taylor Polynomials and Taylor series for many elementary functions.", "1: Jan 6 - 10 1.1 - 1.3 Riemann Sums, Definite Integrals, Average Value", "5: Feb 3 - 7 2.1 - 2.2.2, 2.3 Intro to DEs, Direction Fields, Separable and First-Order Linear DEs Quiz 4", "8: Mar 10 - 14 4.1 - 4.3 Intro to Power Series, Differentiation & Integration of Power Series Quiz 7", "FE: Mar 31 - Apr 4 4.8 Big-O Notation Quiz 10", "Notice of Recording", "Phone: 519-884-0000 extension 213", "In particular:", "Please inform of us these at the start of the course."]}, {"course_id": 27, "course_code": "MATH 148", "course_name": "MATH148 - Calculus 2 (Advanced Level) (0.50)", "term_name": "Required Courses", "program_name": "Computer Science", "program_id": 40, "major_id": 3, "major_name": "Business Administration and Computer Science Double Degree (Bachelor of Business Administration and Bachelor of Computer Science - Honours)", "topics": ["08:30AM - 09:20AM", "Instructor: Michael Brannan", "E-mail: michael.brannan@uwaterloo.ca", "Week of", "3 Jan. 20 Fundamental Theorem of Calculus  A1", "4 Jan. 27 Techniques of Integration  A2", "5 Feb. 3 More Techniques and Improper Integration", "6 Feb. 10 Applications of Integration A3", "8 Mar. 3 Convergence Tests A4", "10 Mar 17 Sequences and Series of Functions A5", "11 Mar. 24 Power Series", "12 Mar. 31 Differential Equations A6", "Principles of Mathematical Analysis."]}]